{"version":3,"sources":["<anon>"],"sourcesContent":["/**\n * @license Highcharts JS v11.4.7 (2024-08-14)\n *\n * Standalone navigator module\n *\n * (c) 2009-2024 Mateusz Bernacik\n *\n * License: www.highcharts.com/license\n */\n(function (factory) {\n    if (typeof module === 'object' && module.exports) {\n        factory['default'] = factory;\n        module.exports = factory;\n    } else if (typeof define === 'function' && define.amd) {\n        define('highcharts/modules/navigator', ['highcharts'], function (Highcharts) {\n            factory(Highcharts);\n            factory.Highcharts = Highcharts;\n            return factory;\n        });\n    } else {\n        factory(typeof Highcharts !== 'undefined' ? Highcharts : undefined);\n    }\n}(function (Highcharts) {\n    'use strict';\n    var _modules = Highcharts ? Highcharts._modules : {};\n    function _registerModule(obj, path, args, fn) {\n        if (!obj.hasOwnProperty(path)) {\n            obj[path] = fn.apply(null, args);\n\n            if (typeof CustomEvent === 'function') {\n                Highcharts.win.dispatchEvent(new CustomEvent(\n                    'HighchartsModuleLoaded',\n                    { detail: { path: path, module: obj[path] } }\n                ));\n            }\n        }\n    }\n    _registerModule(_modules, 'Stock/Navigator/ChartNavigatorComposition.js', [_modules['Core/Globals.js'], _modules['Core/Utilities.js']], function (H, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var isTouchDevice = H.isTouchDevice;\n        var addEvent = U.addEvent, merge = U.merge, pick = U.pick;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        var composedMembers = [];\n        /* *\n         *\n         *  Variables\n         *\n         * */\n        var NavigatorConstructor;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * @private\n         */\n        function compose(ChartClass, NavigatorClass) {\n            if (U.pushUnique(composedMembers, ChartClass)) {\n                var chartProto = ChartClass.prototype;\n                NavigatorConstructor = NavigatorClass;\n                chartProto.callbacks.push(onChartCallback);\n                addEvent(ChartClass, 'afterAddSeries', onChartAfterAddSeries);\n                addEvent(ChartClass, 'afterSetChartSize', onChartAfterSetChartSize);\n                addEvent(ChartClass, 'afterUpdate', onChartAfterUpdate);\n                addEvent(ChartClass, 'beforeRender', onChartBeforeRender);\n                addEvent(ChartClass, 'beforeShowResetZoom', onChartBeforeShowResetZoom);\n                addEvent(ChartClass, 'update', onChartUpdate);\n            }\n        }\n        /**\n         * Handle adding new series.\n         * @private\n         */\n        function onChartAfterAddSeries() {\n            if (this.navigator) {\n                // Recompute which series should be shown in navigator, and add them\n                this.navigator.setBaseSeries(null, false);\n            }\n        }\n        /**\n         * For stock charts, extend the Chart.setChartSize method so that we can set the\n         * final top position of the navigator once the height of the chart, including\n         * the legend, is determined. #367. We can't use Chart.getMargins, because\n         * labels offsets are not calculated yet.\n         * @private\n         */\n        function onChartAfterSetChartSize() {\n            var _a;\n            var legend = this.legend, navigator = this.navigator;\n            var legendOptions, xAxis, yAxis;\n            if (navigator) {\n                legendOptions = legend && legend.options;\n                xAxis = navigator.xAxis;\n                yAxis = navigator.yAxis;\n                var scrollbarHeight = navigator.scrollbarHeight, scrollButtonSize = navigator.scrollButtonSize;\n                // Compute the top position\n                if (this.inverted) {\n                    navigator.left = navigator.opposite ?\n                        this.chartWidth - scrollbarHeight -\n                            navigator.height :\n                        this.spacing[3] + scrollbarHeight;\n                    navigator.top = this.plotTop + scrollButtonSize;\n                }\n                else {\n                    navigator.left = pick(xAxis.left, this.plotLeft + scrollButtonSize);\n                    navigator.top = navigator.navigatorOptions.top ||\n                        this.chartHeight -\n                            navigator.height -\n                            scrollbarHeight -\n                            (((_a = this.scrollbar) === null || _a === void 0 ? void 0 : _a.options.margin) || 0) -\n                            this.spacing[2] -\n                            (this.rangeSelector && this.extraBottomMargin ?\n                                this.rangeSelector.getHeight() :\n                                0) -\n                            ((legendOptions &&\n                                legendOptions.verticalAlign === 'bottom' &&\n                                legendOptions.layout !== 'proximate' && // #13392\n                                legendOptions.enabled &&\n                                !legendOptions.floating) ?\n                                legend.legendHeight +\n                                    pick(legendOptions.margin, 10) :\n                                0) -\n                            (this.titleOffset ? this.titleOffset[2] : 0);\n                }\n                if (xAxis && yAxis) { // False if navigator is disabled (#904)\n                    if (this.inverted) {\n                        xAxis.options.left = yAxis.options.left = navigator.left;\n                    }\n                    else {\n                        xAxis.options.top = yAxis.options.top = navigator.top;\n                    }\n                    xAxis.setAxisSize();\n                    yAxis.setAxisSize();\n                }\n            }\n        }\n        /**\n         * Initialize navigator, if no scrolling exists yet.\n         * @private\n         */\n        function onChartAfterUpdate(event) {\n            if (!this.navigator && !this.scroller &&\n                (this.options.navigator.enabled ||\n                    this.options.scrollbar.enabled)) {\n                this.scroller = this.navigator = new NavigatorConstructor(this);\n                if (pick(event.redraw, true)) {\n                    this.redraw(event.animation); // #7067\n                }\n            }\n        }\n        /**\n         * Initialize navigator for stock charts\n         * @private\n         */\n        function onChartBeforeRender() {\n            var options = this.options;\n            if (options.navigator.enabled ||\n                options.scrollbar.enabled) {\n                this.scroller = this.navigator = new NavigatorConstructor(this);\n            }\n        }\n        /**\n         * For Stock charts. For x only zooming, do not to create the zoom button\n         * because X axis zooming is already allowed by the Navigator and Range\n         * selector. (#9285)\n         * @private\n         */\n        function onChartBeforeShowResetZoom() {\n            var chartOptions = this.options, navigator = chartOptions.navigator, rangeSelector = chartOptions.rangeSelector;\n            if (((navigator && navigator.enabled) ||\n                (rangeSelector && rangeSelector.enabled)) &&\n                ((!isTouchDevice &&\n                    this.zooming.type === 'x') ||\n                    (isTouchDevice && this.zooming.pinchType === 'x'))) {\n                return false;\n            }\n        }\n        /**\n         * @private\n         */\n        function onChartCallback(chart) {\n            var navigator = chart.navigator;\n            // Initialize the navigator\n            if (navigator && chart.xAxis[0]) {\n                var extremes = chart.xAxis[0].getExtremes();\n                navigator.render(extremes.min, extremes.max);\n            }\n        }\n        /**\n         * Merge options, if no scrolling exists yet\n         * @private\n         */\n        function onChartUpdate(e) {\n            var navigatorOptions = (e.options.navigator || {}), scrollbarOptions = (e.options.scrollbar || {});\n            if (!this.navigator && !this.scroller &&\n                (navigatorOptions.enabled || scrollbarOptions.enabled)) {\n                merge(true, this.options.navigator, navigatorOptions);\n                merge(true, this.options.scrollbar, scrollbarOptions);\n                delete e.options.navigator;\n                delete e.options.scrollbar;\n            }\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        var ChartNavigatorComposition = {\n            compose: compose\n        };\n\n        return ChartNavigatorComposition;\n    });\n    _registerModule(_modules, 'Core/Axis/NavigatorAxisComposition.js', [_modules['Core/Globals.js'], _modules['Core/Utilities.js']], function (H, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var isTouchDevice = H.isTouchDevice;\n        var addEvent = U.addEvent, correctFloat = U.correctFloat, defined = U.defined, isNumber = U.isNumber, pick = U.pick;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * @private\n         */\n        function onAxisInit() {\n            var axis = this;\n            if (!axis.navigatorAxis) {\n                axis.navigatorAxis = new NavigatorAxisAdditions(axis);\n            }\n        }\n        /**\n         * For Stock charts, override selection zooming with some special features\n         * because X axis zooming is already allowed by the Navigator and Range\n         * selector.\n         * @private\n         */\n        function onAxisSetExtremes(e) {\n            var axis = this, chart = axis.chart, chartOptions = chart.options, navigator = chartOptions.navigator, navigatorAxis = axis.navigatorAxis, pinchType = chart.zooming.pinchType, rangeSelector = chartOptions.rangeSelector, zoomType = chart.zooming.type;\n            var zoomed;\n            if (axis.isXAxis &&\n                ((navigator === null || navigator === void 0 ? void 0 : navigator.enabled) || (rangeSelector === null || rangeSelector === void 0 ? void 0 : rangeSelector.enabled))) {\n                // For y only zooming, ignore the X axis completely\n                if (zoomType === 'y' && e.trigger === 'zoom') {\n                    zoomed = false;\n                    // For xy zooming, record the state of the zoom before zoom selection,\n                    // then when the reset button is pressed, revert to this state. This\n                    // should apply only if the chart is initialized with a range (#6612),\n                    // otherwise zoom all the way out.\n                }\n                else if (((e.trigger === 'zoom' && zoomType === 'xy') ||\n                    (isTouchDevice && pinchType === 'xy')) &&\n                    axis.options.range) {\n                    var previousZoom = navigatorAxis.previousZoom;\n                    // Minimum defined, zooming in\n                    if (defined(e.min)) {\n                        navigatorAxis.previousZoom = [axis.min, axis.max];\n                        // Minimum undefined, resetting zoom\n                    }\n                    else if (previousZoom) {\n                        e.min = previousZoom[0];\n                        e.max = previousZoom[1];\n                        navigatorAxis.previousZoom = void 0;\n                    }\n                }\n            }\n            if (typeof zoomed !== 'undefined') {\n                e.preventDefault();\n            }\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * @private\n         * @class\n         */\n        var NavigatorAxisAdditions = /** @class */ (function () {\n            /* *\n             *\n             *  Constructors\n             *\n             * */\n            function NavigatorAxisAdditions(axis) {\n                this.axis = axis;\n            }\n            /* *\n             *\n             *  Static Functions\n             *\n             * */\n            /**\n             * @private\n             */\n            NavigatorAxisAdditions.compose = function (AxisClass) {\n                if (!AxisClass.keepProps.includes('navigatorAxis')) {\n                    AxisClass.keepProps.push('navigatorAxis');\n                    addEvent(AxisClass, 'init', onAxisInit);\n                    addEvent(AxisClass, 'setExtremes', onAxisSetExtremes);\n                }\n            };\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * @private\n             */\n            NavigatorAxisAdditions.prototype.destroy = function () {\n                this.axis = void 0;\n            };\n            /**\n             * Add logic to normalize the zoomed range in order to preserve the pressed\n             * state of range selector buttons\n             *\n             * @private\n             * @function Highcharts.Axis#toFixedRange\n             */\n            NavigatorAxisAdditions.prototype.toFixedRange = function (pxMin, pxMax, fixedMin, fixedMax) {\n                var axis = this.axis, halfPointRange = (axis.pointRange || 0) / 2;\n                var newMin = pick(fixedMin, axis.translate(pxMin, true, !axis.horiz)), newMax = pick(fixedMax, axis.translate(pxMax, true, !axis.horiz));\n                // Add/remove half point range to/from the extremes (#1172)\n                if (!defined(fixedMin)) {\n                    newMin = correctFloat(newMin + halfPointRange);\n                }\n                if (!defined(fixedMax)) {\n                    newMax = correctFloat(newMax - halfPointRange);\n                }\n                if (!isNumber(newMin) || !isNumber(newMax)) { // #1195, #7411\n                    newMin = newMax = void 0;\n                }\n                return {\n                    min: newMin,\n                    max: newMax\n                };\n            };\n            return NavigatorAxisAdditions;\n        }());\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return NavigatorAxisAdditions;\n    });\n    _registerModule(_modules, 'Stock/Navigator/NavigatorDefaults.js', [_modules['Core/Color/Color.js'], _modules['Core/Series/SeriesRegistry.js']], function (Color, SeriesRegistry) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var color = Color.parse;\n        var seriesTypes = SeriesRegistry.seriesTypes;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        /**\n         * The navigator is a small series below the main series, displaying\n         * a view of the entire data set. It provides tools to zoom in and\n         * out on parts of the data as well as panning across the dataset.\n         *\n         * @product      highstock gantt\n         * @optionparent navigator\n         */\n        var NavigatorDefaults = {\n            /**\n             * Whether the navigator and scrollbar should adapt to updated data\n             * in the base X axis. When loading data async, as in the demo below,\n             * this should be `false`. Otherwise new data will trigger navigator\n             * redraw, which will cause unwanted looping. In the demo below, the\n             * data in the navigator is set only once. On navigating, only the main\n             * chart content is updated.\n             *\n             * @sample {highstock} stock/demo/lazy-loading/\n             *         Set to false with async data loading\n             *\n             * @type      {boolean}\n             * @default   true\n             * @apioption navigator.adaptToUpdatedData\n             */\n            /**\n             * An integer identifying the index to use for the base series, or a\n             * string representing the id of the series.\n             *\n             * **Note**: As of Highcharts 5.0, this is now a deprecated option.\n             * Prefer [series.showInNavigator](#plotOptions.series.showInNavigator).\n             *\n             * @see [series.showInNavigator](#plotOptions.series.showInNavigator)\n             *\n             * @deprecated\n             * @type      {number|string}\n             * @default   0\n             * @apioption navigator.baseSeries\n             */\n            /**\n             * Enable or disable the navigator.\n             *\n             * @sample {highstock} stock/navigator/enabled/\n             *         Disable the navigator\n             *\n             * @type      {boolean}\n             * @default   true\n             * @apioption navigator.enabled\n             */\n            /**\n             * When the chart is inverted, whether to draw the navigator on the\n             * opposite side.\n             *\n             * @type      {boolean}\n             * @default   false\n             * @since     5.0.8\n             * @apioption navigator.opposite\n             */\n            /**\n             * The height of the navigator.\n             *\n             * @sample {highstock} stock/navigator/height/\n             *         A higher navigator\n             */\n            height: 40,\n            /**\n             * The distance from the nearest element, the X axis or X axis labels.\n             *\n             * @sample {highstock} stock/navigator/margin/\n             *         A margin of 2 draws the navigator closer to the X axis labels\n             */\n            margin: 25,\n            /**\n             * Whether the mask should be inside the range marking the zoomed\n             * range, or outside. In Highcharts Stock 1.x it was always `false`.\n             *\n             * @sample {highstock} stock/demo/maskinside-false/\n             *         False, mask outside\n             *\n             * @since   2.0\n             */\n            maskInside: true,\n            /**\n             * Options for the handles for dragging the zoomed area.\n             *\n             * @sample {highstock} stock/navigator/handles/\n             *         Colored handles\n             */\n            handles: {\n                /**\n                 * Width for handles.\n                 *\n                 * @sample {highstock} stock/navigator/styled-handles/\n                 *         Styled handles\n                 *\n                 * @since   6.0.0\n                 */\n                width: 7,\n                /**\n                 * Border radius of the handles.\n                 *\n                 * @sample {highstock} stock/navigator/handles-border-radius/\n                 *      Border radius on the navigator handles.\n                 *\n                 * @since 11.4.2\n                 */\n                borderRadius: 0,\n                /**\n                 * Height for handles.\n                 *\n                 * @sample {highstock} stock/navigator/styled-handles/\n                 *         Styled handles\n                 *\n                 * @since   6.0.0\n                 */\n                height: 15,\n                /**\n                 * Array to define shapes of handles. 0-index for left, 1-index for\n                 * right.\n                 *\n                 * Additionally, the URL to a graphic can be given on this form:\n                 * `url(graphic.png)`. Note that for the image to be applied to\n                 * exported charts, its URL needs to be accessible by the export\n                 * server.\n                 *\n                 * Custom callbacks for symbol path generation can also be added to\n                 * `Highcharts.SVGRenderer.prototype.symbols`. The callback is then\n                 * used by its method name, as shown in the demo.\n                 *\n                 * @sample {highstock} stock/navigator/styled-handles/\n                 *         Styled handles\n                 *\n                 * @type    {Array<string>}\n                 * @default [\"navigator-handle\", \"navigator-handle\"]\n                 * @since   6.0.0\n                 */\n                symbols: ['navigator-handle', 'navigator-handle'],\n                /**\n                 * Allows to enable/disable handles.\n                 *\n                 * @since   6.0.0\n                 */\n                enabled: true,\n                /**\n                 * The width for the handle border and the stripes inside.\n                 *\n                 * @sample {highstock} stock/navigator/styled-handles/\n                 *         Styled handles\n                 *\n                 * @since     6.0.0\n                 * @apioption navigator.handles.lineWidth\n                 */\n                lineWidth: 1,\n                /**\n                 * The fill for the handle.\n                 *\n                 * @type    {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n                 */\n                backgroundColor: \"#f2f2f2\" /* Palette.neutralColor5 */,\n                /**\n                 * The stroke for the handle border and the stripes inside.\n                 *\n                 * @type    {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n                 */\n                borderColor: \"#999999\" /* Palette.neutralColor40 */\n            },\n            /**\n             * The color of the mask covering the areas of the navigator series\n             * that are currently not visible in the main series. The default\n             * color is bluish with an opacity of 0.3 to see the series below.\n             *\n             * @see In styled mode, the mask is styled with the\n             *      `.highcharts-navigator-mask` and\n             *      `.highcharts-navigator-mask-inside` classes.\n             *\n             * @sample {highstock} stock/navigator/maskfill/\n             *         Blue, semi transparent mask\n             *\n             * @type    {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             * @default rgba(102,133,194,0.3)\n             */\n            maskFill: color(\"#667aff\" /* Palette.highlightColor60 */).setOpacity(0.3).get(),\n            /**\n             * The color of the line marking the currently zoomed area in the\n             * navigator.\n             *\n             * @sample {highstock} stock/navigator/outline/\n             *         2px blue outline\n             *\n             * @type    {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             * @default #cccccc\n             */\n            outlineColor: \"#999999\" /* Palette.neutralColor40 */,\n            /**\n             * The width of the line marking the currently zoomed area in the\n             * navigator.\n             *\n             * @see In styled mode, the outline stroke width is set with the\n             *      `.highcharts-navigator-outline` class.\n             *\n             * @sample {highstock} stock/navigator/outline/\n             *         2px blue outline\n             *\n             * @type    {number}\n             */\n            outlineWidth: 1,\n            /**\n             * Options for the navigator series. Available options are the same\n             * as any series, documented at [plotOptions](#plotOptions.series)\n             * and [series](#series).\n             *\n             * Unless data is explicitly defined on navigator.series, the data\n             * is borrowed from the first series in the chart.\n             *\n             * Default series options for the navigator series are:\n             * ```js\n             * series: {\n             *     type: 'areaspline',\n             *     fillOpacity: 0.05,\n             *     dataGrouping: {\n             *         smoothed: true\n             *     },\n             *     lineWidth: 1,\n             *     marker: {\n             *         enabled: false\n             *     }\n             * }\n             * ```\n             *\n             * @see In styled mode, the navigator series is styled with the\n             *      `.highcharts-navigator-series` class.\n             *\n             * @sample {highstock} stock/navigator/series-data/\n             *         Using a separate data set for the navigator\n             * @sample {highstock} stock/navigator/series/\n             *         A green navigator series\n             *\n             * @type {*|Array<*>|Highcharts.SeriesOptionsType|Array<Highcharts.SeriesOptionsType>}\n             */\n            series: {\n                /**\n                 * The type of the navigator series.\n                 *\n                 * Heads up:\n                 * In column-type navigator, zooming is limited to at least one\n                 * point with its `pointRange`.\n                 *\n                 * @sample {highstock} stock/navigator/column/\n                 *         Column type navigator\n                 *\n                 * @type    {string}\n                 * @default {highstock} `areaspline` if defined, otherwise `line`\n                 * @default {gantt} gantt\n                 */\n                type: (typeof seriesTypes.areaspline === 'undefined' ?\n                    'line' :\n                    'areaspline'),\n                /**\n                 * The fill opacity of the navigator series.\n                 */\n                fillOpacity: 0.05,\n                /**\n                 * The pixel line width of the navigator series.\n                 */\n                lineWidth: 1,\n                /**\n                 * @ignore-option\n                 */\n                compare: null,\n                /**\n                 * @ignore-option\n                 */\n                sonification: {\n                    enabled: false\n                },\n                /**\n                 * Unless data is explicitly defined, the data is borrowed from the\n                 * first series in the chart.\n                 *\n                 * @type      {Array<number|Array<number|string|null>|object|null>}\n                 * @product   highstock\n                 * @apioption navigator.series.data\n                 */\n                /**\n                 * Data grouping options for the navigator series.\n                 *\n                 * @extends plotOptions.series.dataGrouping\n                 */\n                dataGrouping: {\n                    approximation: 'average',\n                    enabled: true,\n                    groupPixelWidth: 2,\n                    // Replace smoothed property by anchors, #12455.\n                    firstAnchor: 'firstPoint',\n                    anchor: 'middle',\n                    lastAnchor: 'lastPoint',\n                    // Day and week differs from plotOptions.series.dataGrouping\n                    units: [\n                        ['millisecond', [1, 2, 5, 10, 20, 25, 50, 100, 200, 500]],\n                        ['second', [1, 2, 5, 10, 15, 30]],\n                        ['minute', [1, 2, 5, 10, 15, 30]],\n                        ['hour', [1, 2, 3, 4, 6, 8, 12]],\n                        ['day', [1, 2, 3, 4]],\n                        ['week', [1, 2, 3]],\n                        ['month', [1, 3, 6]],\n                        ['year', null]\n                    ]\n                },\n                /**\n                 * Data label options for the navigator series. Data labels are\n                 * disabled by default on the navigator series.\n                 *\n                 * @extends plotOptions.series.dataLabels\n                 */\n                dataLabels: {\n                    enabled: false,\n                    zIndex: 2 // #1839\n                },\n                id: 'highcharts-navigator-series',\n                className: 'highcharts-navigator-series',\n                /**\n                 * Sets the fill color of the navigator series.\n                 *\n                 * @type      {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n                 * @apioption navigator.series.color\n                 */\n                /**\n                 * Line color for the navigator series. Allows setting the color\n                 * while disallowing the default candlestick setting.\n                 *\n                 * @type {Highcharts.ColorString|null}\n                 */\n                lineColor: null, // #4602\n                marker: {\n                    enabled: false\n                },\n                /**\n                 * Since Highcharts Stock v8, default value is the same as default\n                 * `pointRange` defined for a specific type (e.g. `null` for\n                 * column type).\n                 *\n                 * In Highcharts Stock version < 8, defaults to 0.\n                 *\n                 * @extends plotOptions.series.pointRange\n                 * @type {number|null}\n                 * @apioption navigator.series.pointRange\n                 */\n                /**\n                 * The threshold option. Setting it to 0 will make the default\n                 * navigator area series draw its area from the 0 value and up.\n                 *\n                 * @type {number|null}\n                 */\n                threshold: null\n            },\n            /**\n             * Enable or disable navigator sticking to right, while adding new\n             * points. If `undefined`, the navigator sticks to the axis maximum only\n             * if it was already at the maximum prior to adding points.\n             *\n             * @type      {boolean}\n             * @default   undefined\n             * @since 10.2.1\n             * @sample {highstock} stock/navigator/sticktomax-false/\n             * stickToMax set to false\n             * @apioption navigator.stickToMax\n             */\n            /**\n             * Options for the navigator X axis. Default series options for the\n             * navigator xAxis are:\n             * ```js\n             * xAxis: {\n             *     tickWidth: 0,\n             *     lineWidth: 0,\n             *     gridLineWidth: 1,\n             *     tickPixelInterval: 200,\n             *     labels: {\n             *            align: 'left',\n             *         style: {\n             *             color: '#888'\n             *         },\n             *         x: 3,\n             *         y: -4\n             *     }\n             * }\n             * ```\n             *\n             * @extends   xAxis\n             * @excluding linkedTo, maxZoom, minRange, opposite, range, scrollbar,\n             *            showEmpty, maxRange\n             */\n            xAxis: {\n                /**\n                 * Additional range on the right side of the xAxis. Works similar to\n                 * `xAxis.maxPadding`, but the value is set in terms of axis values,\n                 * percentage or pixels.\n                 *\n                 * If it's a number, it is interpreted as axis values, which in a\n                 * datetime axis equals milliseconds.\n                 *\n                 * If it's a percentage string, is interpreted as percentages of the\n                 * axis length. An overscroll of 50% will make a 100px axis 50px longer.\n                 *\n                 * If it's a pixel string, it is interpreted as a fixed pixel value, but\n                 * limited to 90% of the axis length.\n                 *\n                 * If it's undefined, the value is inherited from `xAxis.overscroll`.\n                 *\n                 * Can be set for both, main xAxis and navigator's xAxis.\n                 *\n                 * @type    {number | string | undefined}\n                 * @since   6.0.0\n                 * @apioption navigator.xAxis.overscroll\n                 */\n                className: 'highcharts-navigator-xaxis',\n                tickLength: 0,\n                lineWidth: 0,\n                gridLineColor: \"#e6e6e6\" /* Palette.neutralColor10 */,\n                id: 'navigator-x-axis',\n                gridLineWidth: 1,\n                tickPixelInterval: 200,\n                labels: {\n                    align: 'left',\n                    /**\n                     * @type {Highcharts.CSSObject}\n                     */\n                    style: {\n                        /** @ignore */\n                        color: \"#000000\" /* Palette.neutralColor100 */,\n                        /** @ignore */\n                        fontSize: '0.7em',\n                        /** @ignore */\n                        opacity: 0.6,\n                        /** @ignore */\n                        textOutline: '2px contrast'\n                    },\n                    x: 3,\n                    y: -4\n                },\n                crosshair: false\n            },\n            /**\n             * Options for the navigator Y axis. Default series options for the\n             * navigator yAxis are:\n             * ```js\n             * yAxis: {\n             *     gridLineWidth: 0,\n             *     startOnTick: false,\n             *     endOnTick: false,\n             *     minPadding: 0.1,\n             *     maxPadding: 0.1,\n             *     labels: {\n             *         enabled: false\n             *     },\n             *     title: {\n             *         text: null\n             *     },\n             *     tickWidth: 0\n             * }\n             * ```\n             *\n             * @extends   yAxis\n             * @excluding height, linkedTo, maxZoom, minRange, ordinal, range,\n             *            showEmpty, scrollbar, top, units, maxRange, minLength,\n             *            maxLength, resize\n             */\n            yAxis: {\n                className: 'highcharts-navigator-yaxis',\n                gridLineWidth: 0,\n                startOnTick: false,\n                endOnTick: false,\n                minPadding: 0.1,\n                id: 'navigator-y-axis',\n                maxPadding: 0.1,\n                labels: {\n                    enabled: false\n                },\n                crosshair: false,\n                title: {\n                    text: null\n                },\n                tickLength: 0,\n                tickWidth: 0\n            }\n        };\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * Maximum range which can be set using the navigator's handles.\n         * Opposite of [xAxis.minRange](#xAxis.minRange).\n         *\n         * @sample {highstock} stock/navigator/maxrange/\n         *         Defined max and min range\n         *\n         * @type      {number}\n         * @since     6.0.0\n         * @product   highstock gantt\n         * @apioption xAxis.maxRange\n         */\n        (''); // Keeps doclets above in JS file\n\n        return NavigatorDefaults;\n    });\n    _registerModule(_modules, 'Stock/Navigator/NavigatorSymbols.js', [_modules['Core/Renderer/SVG/Symbols.js'], _modules['Core/Utilities.js']], function (rect, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n            if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n                if (ar || !(i in from)) {\n                    if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n                    ar[i] = from[i];\n                }\n            }\n            return to.concat(ar || Array.prototype.slice.call(from));\n        };\n        var relativeLength = U.relativeLength;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        /**\n         * Draw one of the handles on the side of the zoomed range in the navigator.\n         * @private\n         */\n        function navigatorHandle(_x, _y, width, height, options) {\n            if (options === void 0) { options = {}; }\n            var halfWidth = options.width ? options.width / 2 : width, markerPosition = 1.5, r = relativeLength(options.borderRadius || 0, Math.min(halfWidth * 2, height));\n            height = options.height || height;\n            return __spreadArray([\n                ['M', -markerPosition, height / 2 - 3.5],\n                ['L', -markerPosition, height / 2 + 4.5],\n                ['M', markerPosition - 1, height / 2 - 3.5],\n                ['L', markerPosition - 1, height / 2 + 4.5]\n            ], rect.rect(-halfWidth - 1, 0.5, halfWidth * 2 + 1, height, { r: r }), true);\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        var NavigatorSymbols = {\n            'navigator-handle': navigatorHandle\n        };\n\n        return NavigatorSymbols;\n    });\n    _registerModule(_modules, 'Stock/Utilities/StockUtilities.js', [_modules['Core/Utilities.js']], function (U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var defined = U.defined;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * Sets the chart.fixedRange to the specified value. If the value is larger\n         * than actual range, sets it to the maximum possible range. (#20327)\n         *\n         * @private\n         * @function Highcharts.StockChart#setFixedRange\n         * @param {number|undefined} range\n         *        Range to set in axis units.\n         */\n        function setFixedRange(range) {\n            var xAxis = this.xAxis[0];\n            if (defined(xAxis.dataMax) &&\n                defined(xAxis.dataMin) &&\n                range) {\n                this.fixedRange = Math.min(range, xAxis.dataMax - xAxis.dataMin);\n            }\n            else {\n                this.fixedRange = range;\n            }\n        }\n        var StockUtilities = {\n            setFixedRange: setFixedRange\n        };\n\n        return StockUtilities;\n    });\n    _registerModule(_modules, 'Stock/Navigator/NavigatorComposition.js', [_modules['Core/Defaults.js'], _modules['Core/Globals.js'], _modules['Core/Axis/NavigatorAxisComposition.js'], _modules['Stock/Navigator/NavigatorDefaults.js'], _modules['Stock/Navigator/NavigatorSymbols.js'], _modules['Core/Renderer/RendererRegistry.js'], _modules['Stock/Utilities/StockUtilities.js'], _modules['Core/Utilities.js']], function (D, H, NavigatorAxisAdditions, NavigatorDefaults, NavigatorSymbols, RendererRegistry, StockUtilities, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var setOptions = D.setOptions;\n        var composed = H.composed;\n        var getRendererType = RendererRegistry.getRendererType;\n        var setFixedRange = StockUtilities.setFixedRange;\n        var addEvent = U.addEvent, extend = U.extend, pushUnique = U.pushUnique;\n        /* *\n         *\n         *  Variables\n         *\n         * */\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * @private\n         */\n        function compose(ChartClass, AxisClass, SeriesClass) {\n            NavigatorAxisAdditions.compose(AxisClass);\n            if (pushUnique(composed, 'Navigator')) {\n                ChartClass.prototype.setFixedRange = setFixedRange;\n                extend(getRendererType().prototype.symbols, NavigatorSymbols);\n                addEvent(SeriesClass, 'afterUpdate', onSeriesAfterUpdate);\n                setOptions({ navigator: NavigatorDefaults });\n            }\n        }\n        /**\n         * Handle updating series\n         * @private\n         */\n        function onSeriesAfterUpdate() {\n            if (this.chart.navigator && !this.options.isInternal) {\n                this.chart.navigator.setBaseSeries(null, false);\n            }\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        var NavigatorComposition = {\n            compose: compose\n        };\n\n        return NavigatorComposition;\n    });\n    _registerModule(_modules, 'Core/Axis/ScrollbarAxis.js', [_modules['Core/Globals.js'], _modules['Core/Utilities.js']], function (H, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var composed = H.composed;\n        var addEvent = U.addEvent, defined = U.defined, pick = U.pick, pushUnique = U.pushUnique;\n        /* *\n         *\n         *  Composition\n         *\n         * */\n        var ScrollbarAxis;\n        (function (ScrollbarAxis) {\n            /* *\n             *\n             *  Variables\n             *\n             * */\n            var Scrollbar;\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Attaches to axis events to create scrollbars if enabled.\n             *\n             * @private\n             *\n             * @param {Highcharts.Axis} AxisClass\n             * Axis class to extend.\n             *\n             * @param {Highcharts.Scrollbar} ScrollbarClass\n             * Scrollbar class to use.\n             */\n            function compose(AxisClass, ScrollbarClass) {\n                if (pushUnique(composed, 'Axis.Scrollbar')) {\n                    Scrollbar = ScrollbarClass;\n                    addEvent(AxisClass, 'afterGetOffset', onAxisAfterGetOffset);\n                    addEvent(AxisClass, 'afterInit', onAxisAfterInit);\n                    addEvent(AxisClass, 'afterRender', onAxisAfterRender);\n                }\n            }\n            ScrollbarAxis.compose = compose;\n            /** @private */\n            function getExtremes(axis) {\n                var axisMin = pick(axis.options && axis.options.min, axis.min);\n                var axisMax = pick(axis.options && axis.options.max, axis.max);\n                return {\n                    axisMin: axisMin,\n                    axisMax: axisMax,\n                    scrollMin: defined(axis.dataMin) ?\n                        Math.min(axisMin, axis.min, axis.dataMin, pick(axis.threshold, Infinity)) : axisMin,\n                    scrollMax: defined(axis.dataMax) ?\n                        Math.max(axisMax, axis.max, axis.dataMax, pick(axis.threshold, -Infinity)) : axisMax\n                };\n            }\n            /**\n             * Make space for a scrollbar.\n             * @private\n             */\n            function onAxisAfterGetOffset() {\n                var axis = this, scrollbar = axis.scrollbar, opposite = scrollbar && !scrollbar.options.opposite, index = axis.horiz ? 2 : opposite ? 3 : 1;\n                if (scrollbar) {\n                    // Reset scrollbars offsets\n                    axis.chart.scrollbarsOffsets = [0, 0];\n                    axis.chart.axisOffset[index] +=\n                        scrollbar.size + (scrollbar.options.margin || 0);\n                }\n            }\n            /**\n             * Wrap axis initialization and create scrollbar if enabled.\n             * @private\n             */\n            function onAxisAfterInit() {\n                var axis = this;\n                if (axis.options &&\n                    axis.options.scrollbar &&\n                    axis.options.scrollbar.enabled) {\n                    // Predefined options:\n                    axis.options.scrollbar.vertical = !axis.horiz;\n                    axis.options.startOnTick = axis.options.endOnTick = false;\n                    axis.scrollbar = new Scrollbar(axis.chart.renderer, axis.options.scrollbar, axis.chart);\n                    addEvent(axis.scrollbar, 'changed', function (e) {\n                        var _a = getExtremes(axis), axisMin = _a.axisMin, axisMax = _a.axisMax, unitedMin = _a.scrollMin, unitedMax = _a.scrollMax, range = unitedMax - unitedMin;\n                        var to, from;\n                        // #12834, scroll when show/hide series, wrong extremes\n                        if (!defined(axisMin) || !defined(axisMax)) {\n                            return;\n                        }\n                        if ((axis.horiz && !axis.reversed) ||\n                            (!axis.horiz && axis.reversed)) {\n                            to = unitedMin + range * this.to;\n                            from = unitedMin + range * this.from;\n                        }\n                        else {\n                            // Y-values in browser are reversed, but this also\n                            // applies for reversed horizontal axis:\n                            to = unitedMin + range * (1 - this.from);\n                            from = unitedMin + range * (1 - this.to);\n                        }\n                        if (this.shouldUpdateExtremes(e.DOMType)) {\n                            // #17977, set animation to undefined instead of true\n                            var animate = e.DOMType === 'mousemove' ||\n                                e.DOMType === 'touchmove' ? false : void 0;\n                            axis.setExtremes(from, to, true, animate, e);\n                        }\n                        else {\n                            // When live redraw is disabled, don't change extremes\n                            // Only change the position of the scrollbar thumb\n                            this.setRange(this.from, this.to);\n                        }\n                    });\n                }\n            }\n            /**\n             * Wrap rendering axis, and update scrollbar if one is created.\n             * @private\n             */\n            function onAxisAfterRender() {\n                var axis = this, _a = getExtremes(axis), scrollMin = _a.scrollMin, scrollMax = _a.scrollMax, scrollbar = axis.scrollbar, offset = (axis.axisTitleMargin + (axis.titleOffset || 0)), scrollbarsOffsets = axis.chart.scrollbarsOffsets, axisMargin = axis.options.margin || 0;\n                var offsetsIndex, from, to;\n                if (scrollbar && scrollbarsOffsets) {\n                    if (axis.horiz) {\n                        // Reserve space for labels/title\n                        if (!axis.opposite) {\n                            scrollbarsOffsets[1] += offset;\n                        }\n                        scrollbar.position(axis.left, (axis.top +\n                            axis.height +\n                            2 +\n                            scrollbarsOffsets[1] -\n                            (axis.opposite ? axisMargin : 0)), axis.width, axis.height);\n                        // Next scrollbar should reserve space for margin (if set)\n                        if (!axis.opposite) {\n                            scrollbarsOffsets[1] += axisMargin;\n                        }\n                        offsetsIndex = 1;\n                    }\n                    else {\n                        // Reserve space for labels/title\n                        if (axis.opposite) {\n                            scrollbarsOffsets[0] += offset;\n                        }\n                        var xPosition = void 0;\n                        if (!scrollbar.options.opposite) {\n                            xPosition = axis.opposite ? 0 : axisMargin;\n                        }\n                        else {\n                            xPosition = axis.left +\n                                axis.width +\n                                2 +\n                                scrollbarsOffsets[0] -\n                                (axis.opposite ? 0 : axisMargin);\n                        }\n                        scrollbar.position(xPosition, axis.top, axis.width, axis.height);\n                        // Next scrollbar should reserve space for margin (if set)\n                        if (axis.opposite) {\n                            scrollbarsOffsets[0] += axisMargin;\n                        }\n                        offsetsIndex = 0;\n                    }\n                    scrollbarsOffsets[offsetsIndex] += scrollbar.size +\n                        (scrollbar.options.margin || 0);\n                    if (isNaN(scrollMin) ||\n                        isNaN(scrollMax) ||\n                        !defined(axis.min) ||\n                        !defined(axis.max) ||\n                        axis.min === axis.max // #10733\n                    ) {\n                        // Default action: when extremes are the same or there is\n                        // not extremes on the axis, but scrollbar exists, make it\n                        // full size\n                        scrollbar.setRange(0, 1);\n                    }\n                    else {\n                        from = ((axis.min - scrollMin) /\n                            (scrollMax - scrollMin));\n                        to = ((axis.max - scrollMin) /\n                            (scrollMax - scrollMin));\n                        if ((axis.horiz && !axis.reversed) ||\n                            (!axis.horiz && axis.reversed)) {\n                            scrollbar.setRange(from, to);\n                        }\n                        else {\n                            // Inverse vertical axis\n                            scrollbar.setRange(1 - to, 1 - from);\n                        }\n                    }\n                }\n            }\n        })(ScrollbarAxis || (ScrollbarAxis = {}));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return ScrollbarAxis;\n    });\n    _registerModule(_modules, 'Stock/Scrollbar/ScrollbarDefaults.js', [], function () {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        /* *\n         *\n         *  Constant\n         *\n         * */\n        /**\n         *\n         * The scrollbar is a means of panning over the X axis of a stock chart.\n         * Scrollbars can also be applied to other types of axes.\n         *\n         * Another approach to scrollable charts is the [chart.scrollablePlotArea](\n         * https://api.highcharts.com/highcharts/chart.scrollablePlotArea) option that\n         * is especially suitable for simpler cartesian charts on mobile.\n         *\n         * In styled mode, all the presentational options for the\n         * scrollbar are replaced by the classes `.highcharts-scrollbar-thumb`,\n         * `.highcharts-scrollbar-arrow`, `.highcharts-scrollbar-button`,\n         * `.highcharts-scrollbar-rifles` and `.highcharts-scrollbar-track`.\n         *\n         * @sample stock/yaxis/inverted-bar-scrollbar/\n         *         A scrollbar on a simple bar chart\n         *\n         * @product highstock gantt\n         * @optionparent scrollbar\n         *\n         * @private\n         */\n        var ScrollbarDefaults = {\n            /**\n             * The height of the scrollbar. If `buttonsEnabled` is true , the height\n             * also applies to the width of the scroll arrows so that they are always\n             * squares.\n             *\n             * @sample stock/scrollbar/style/\n             *         Non-default height\n             *\n             * @type    {number}\n             */\n            height: 10,\n            /**\n             * The border rounding radius of the bar.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             */\n            barBorderRadius: 5,\n            /**\n             * The corner radius of the scrollbar buttons.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             */\n            buttonBorderRadius: 0,\n            /**\n             * Enable or disable the buttons at the end of the scrollbar.\n             *\n             * @since 11.0.0\n             */\n            buttonsEnabled: false,\n            /**\n             * Enable or disable the scrollbar.\n             *\n             * @sample stock/scrollbar/enabled/\n             *         Disable the scrollbar, only use navigator\n             *\n             * @type      {boolean}\n             * @default   true\n             * @apioption scrollbar.enabled\n             */\n            /**\n             * Whether to redraw the main chart as the scrollbar or the navigator\n             * zoomed window is moved. Defaults to `true` for modern browsers and\n             * `false` for legacy IE browsers as well as mobile devices.\n             *\n             * @sample stock/scrollbar/liveredraw\n             *         Setting live redraw to false\n             *\n             * @type  {boolean}\n             * @since 1.3\n             */\n            liveRedraw: void 0,\n            /**\n             * The margin between the scrollbar and its axis when the scrollbar is\n             * applied directly to an axis, or the navigator in case that is enabled.\n             * Defaults to 10 for axis, 0 for navigator.\n             *\n             * @type {number|undefined}\n             */\n            margin: void 0,\n            /**\n             * The minimum width of the scrollbar.\n             *\n             * @since 1.2.5\n             */\n            minWidth: 6,\n            /** @ignore-option */\n            opposite: true,\n            /**\n             * Whether to show or hide the scrollbar when the scrolled content is\n             * zoomed out to it full extent.\n             *\n             * @type      {boolean}\n             * @default   true\n             * @apioption scrollbar.showFull\n             */\n            step: 0.2,\n            /**\n             * The z index of the scrollbar group.\n             */\n            zIndex: 3,\n            /**\n             * The background color of the scrollbar itself.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             *\n             * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             */\n            barBackgroundColor: \"#cccccc\" /* Palette.neutralColor20 */,\n            /**\n             * The width of the bar's border.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             */\n            barBorderWidth: 0,\n            /**\n             * The color of the scrollbar's border.\n             *\n             * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             */\n            barBorderColor: \"#cccccc\" /* Palette.neutralColor20 */,\n            /**\n             * The color of the small arrow inside the scrollbar buttons.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             *\n             * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             */\n            buttonArrowColor: \"#333333\" /* Palette.neutralColor80 */,\n            /**\n             * The color of scrollbar buttons.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             *\n             * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             */\n            buttonBackgroundColor: \"#e6e6e6\" /* Palette.neutralColor10 */,\n            /**\n             * The color of the border of the scrollbar buttons.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             *\n             * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             */\n            buttonBorderColor: \"#cccccc\" /* Palette.neutralColor20 */,\n            /**\n             * The border width of the scrollbar buttons.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             */\n            buttonBorderWidth: 1,\n            /**\n             * The color of the small rifles in the middle of the scrollbar.\n             *\n             * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             */\n            rifleColor: 'none',\n            /**\n             * The color of the track background.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             *\n             * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             */\n            trackBackgroundColor: 'rgba(255, 255, 255, 0.001)', // #18922\n            /**\n             * The color of the border of the scrollbar track.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             *\n             * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             */\n            trackBorderColor: \"#cccccc\" /* Palette.neutralColor20 */,\n            /**\n             * The corner radius of the border of the scrollbar track.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             */\n            trackBorderRadius: 5,\n            /**\n             * The width of the border of the scrollbar track.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             */\n            trackBorderWidth: 1\n        };\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return ScrollbarDefaults;\n    });\n    _registerModule(_modules, 'Stock/Scrollbar/Scrollbar.js', [_modules['Core/Defaults.js'], _modules['Core/Globals.js'], _modules['Core/Axis/ScrollbarAxis.js'], _modules['Stock/Scrollbar/ScrollbarDefaults.js'], _modules['Core/Utilities.js']], function (D, H, ScrollbarAxis, ScrollbarDefaults, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var defaultOptions = D.defaultOptions;\n        var addEvent = U.addEvent, correctFloat = U.correctFloat, crisp = U.crisp, defined = U.defined, destroyObjectProperties = U.destroyObjectProperties, fireEvent = U.fireEvent, merge = U.merge, pick = U.pick, removeEvent = U.removeEvent;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        /* eslint-disable no-invalid-this, valid-jsdoc */\n        /**\n         * A reusable scrollbar, internally used in Highcharts Stock's\n         * navigator and optionally on individual axes.\n         *\n         * @private\n         * @class\n         * @name Highcharts.Scrollbar\n         * @param {Highcharts.SVGRenderer} renderer\n         * @param {Highcharts.ScrollbarOptions} options\n         * @param {Highcharts.Chart} chart\n         */\n        var Scrollbar = /** @class */ (function () {\n            /* *\n             *\n             *  Constructors\n             *\n             * */\n            function Scrollbar(renderer, options, chart) {\n                /* *\n                 *\n                 *  Properties\n                 *\n                 * */\n                this._events = [];\n                this.chartX = 0;\n                this.chartY = 0;\n                this.from = 0;\n                this.scrollbarButtons = [];\n                this.scrollbarLeft = 0;\n                this.scrollbarStrokeWidth = 1;\n                this.scrollbarTop = 0;\n                this.size = 0;\n                this.to = 0;\n                this.trackBorderWidth = 1;\n                this.x = 0;\n                this.y = 0;\n                this.init(renderer, options, chart);\n            }\n            /* *\n             *\n             *  Static Functions\n             *\n             * */\n            Scrollbar.compose = function (AxisClass) {\n                ScrollbarAxis.compose(AxisClass, Scrollbar);\n            };\n            /**\n             * When we have vertical scrollbar, rifles and arrow in buttons should be\n             * rotated. The same method is used in Navigator's handles, to rotate them.\n             *\n             * @function Highcharts.swapXY\n             *\n             * @param {Highcharts.SVGPathArray} path\n             * Path to be rotated.\n             *\n             * @param {boolean} [vertical]\n             * If vertical scrollbar, swap x-y values.\n             *\n             * @return {Highcharts.SVGPathArray}\n             * Rotated path.\n             *\n             * @requires modules/stock\n             */\n            Scrollbar.swapXY = function (path, vertical) {\n                if (vertical) {\n                    path.forEach(function (seg) {\n                        var len = seg.length;\n                        var temp;\n                        for (var i = 0; i < len; i += 2) {\n                            temp = seg[i + 1];\n                            if (typeof temp === 'number') {\n                                seg[i + 1] = seg[i + 2];\n                                seg[i + 2] = temp;\n                            }\n                        }\n                    });\n                }\n                return path;\n            };\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Set up the mouse and touch events for the Scrollbar\n             *\n             * @private\n             * @function Highcharts.Scrollbar#addEvents\n             */\n            Scrollbar.prototype.addEvents = function () {\n                var buttonsOrder = this.options.inverted ? [1, 0] : [0, 1], buttons = this.scrollbarButtons, bar = this.scrollbarGroup.element, track = this.track.element, mouseDownHandler = this.mouseDownHandler.bind(this), mouseMoveHandler = this.mouseMoveHandler.bind(this), mouseUpHandler = this.mouseUpHandler.bind(this);\n                var _events = [\n                    // Mouse events\n                    [\n                        buttons[buttonsOrder[0]].element,\n                        'click',\n                        this.buttonToMinClick.bind(this)\n                    ],\n                    [\n                        buttons[buttonsOrder[1]].element,\n                        'click',\n                        this.buttonToMaxClick.bind(this)\n                    ],\n                    [track, 'click', this.trackClick.bind(this)],\n                    [bar, 'mousedown', mouseDownHandler],\n                    [bar.ownerDocument, 'mousemove', mouseMoveHandler],\n                    [bar.ownerDocument, 'mouseup', mouseUpHandler],\n                    // Touch events\n                    [bar, 'touchstart', mouseDownHandler],\n                    [bar.ownerDocument, 'touchmove', mouseMoveHandler],\n                    [bar.ownerDocument, 'touchend', mouseUpHandler]\n                ];\n                // Add them all\n                _events.forEach(function (args) {\n                    addEvent.apply(null, args);\n                });\n                this._events = _events;\n            };\n            Scrollbar.prototype.buttonToMaxClick = function (e) {\n                var scroller = this;\n                var range = ((scroller.to - scroller.from) *\n                    pick(scroller.options.step, 0.2));\n                scroller.updatePosition(scroller.from + range, scroller.to + range);\n                fireEvent(scroller, 'changed', {\n                    from: scroller.from,\n                    to: scroller.to,\n                    trigger: 'scrollbar',\n                    DOMEvent: e\n                });\n            };\n            Scrollbar.prototype.buttonToMinClick = function (e) {\n                var scroller = this;\n                var range = correctFloat(scroller.to - scroller.from) *\n                    pick(scroller.options.step, 0.2);\n                scroller.updatePosition(correctFloat(scroller.from - range), correctFloat(scroller.to - range));\n                fireEvent(scroller, 'changed', {\n                    from: scroller.from,\n                    to: scroller.to,\n                    trigger: 'scrollbar',\n                    DOMEvent: e\n                });\n            };\n            /**\n             * Get normalized (0-1) cursor position over the scrollbar\n             *\n             * @private\n             * @function Highcharts.Scrollbar#cursorToScrollbarPosition\n             *\n             * @param  {*} normalizedEvent\n             *         normalized event, with chartX and chartY values\n             *\n             * @return {Highcharts.Dictionary<number>}\n             *         Local position {chartX, chartY}\n             */\n            Scrollbar.prototype.cursorToScrollbarPosition = function (normalizedEvent) {\n                var scroller = this, options = scroller.options, minWidthDifference = options.minWidth > scroller.calculatedWidth ?\n                    options.minWidth :\n                    0; // `minWidth` distorts translation\n                return {\n                    chartX: (normalizedEvent.chartX - scroller.x -\n                        scroller.xOffset) /\n                        (scroller.barWidth - minWidthDifference),\n                    chartY: (normalizedEvent.chartY - scroller.y -\n                        scroller.yOffset) /\n                        (scroller.barWidth - minWidthDifference)\n                };\n            };\n            /**\n             * Destroys allocated elements.\n             *\n             * @private\n             * @function Highcharts.Scrollbar#destroy\n             */\n            Scrollbar.prototype.destroy = function () {\n                var scroller = this, navigator = scroller.chart.scroller;\n                // Disconnect events added in addEvents\n                scroller.removeEvents();\n                // Destroy properties\n                [\n                    'track',\n                    'scrollbarRifles',\n                    'scrollbar',\n                    'scrollbarGroup',\n                    'group'\n                ].forEach(function (prop) {\n                    if (scroller[prop] && scroller[prop].destroy) {\n                        scroller[prop] = scroller[prop].destroy();\n                    }\n                });\n                // #6421, chart may have more scrollbars\n                if (navigator && scroller === navigator.scrollbar) {\n                    navigator.scrollbar = null;\n                    // Destroy elements in collection\n                    destroyObjectProperties(navigator.scrollbarButtons);\n                }\n            };\n            /**\n             * Draw the scrollbar buttons with arrows\n             *\n             * @private\n             * @function Highcharts.Scrollbar#drawScrollbarButton\n             * @param {number} index\n             *        0 is left, 1 is right\n             */\n            Scrollbar.prototype.drawScrollbarButton = function (index) {\n                var scroller = this, renderer = scroller.renderer, scrollbarButtons = scroller.scrollbarButtons, options = scroller.options, size = scroller.size, group = renderer.g().add(scroller.group);\n                scrollbarButtons.push(group);\n                if (options.buttonsEnabled) {\n                    // Create a rectangle for the scrollbar button\n                    var rect = renderer.rect()\n                        .addClass('highcharts-scrollbar-button')\n                        .add(group);\n                    // Presentational attributes\n                    if (!scroller.chart.styledMode) {\n                        rect.attr({\n                            stroke: options.buttonBorderColor,\n                            'stroke-width': options.buttonBorderWidth,\n                            fill: options.buttonBackgroundColor\n                        });\n                    }\n                    // Place the rectangle based on the rendered stroke width\n                    rect.attr(rect.crisp({\n                        x: -0.5,\n                        y: -0.5,\n                        width: size,\n                        height: size,\n                        r: options.buttonBorderRadius\n                    }, rect.strokeWidth()));\n                    // Button arrow\n                    var arrow = renderer\n                        .path(Scrollbar.swapXY([[\n                            'M',\n                            size / 2 + (index ? -1 : 1),\n                            size / 2 - 3\n                        ], [\n                            'L',\n                            size / 2 + (index ? -1 : 1),\n                            size / 2 + 3\n                        ], [\n                            'L',\n                            size / 2 + (index ? 2 : -2),\n                            size / 2\n                        ]], options.vertical))\n                        .addClass('highcharts-scrollbar-arrow')\n                        .add(scrollbarButtons[index]);\n                    if (!scroller.chart.styledMode) {\n                        arrow.attr({\n                            fill: options.buttonArrowColor\n                        });\n                    }\n                }\n            };\n            /**\n             * @private\n             * @function Highcharts.Scrollbar#init\n             * @param {Highcharts.SVGRenderer} renderer\n             * @param {Highcharts.ScrollbarOptions} options\n             * @param {Highcharts.Chart} chart\n             */\n            Scrollbar.prototype.init = function (renderer, options, chart) {\n                var scroller = this;\n                scroller.scrollbarButtons = [];\n                scroller.renderer = renderer;\n                scroller.userOptions = options;\n                scroller.options = merge(ScrollbarDefaults, defaultOptions.scrollbar, options);\n                scroller.options.margin = pick(scroller.options.margin, 10);\n                scroller.chart = chart;\n                // Backward compatibility\n                scroller.size = pick(scroller.options.size, scroller.options.height);\n                // Init\n                if (options.enabled) {\n                    scroller.render();\n                    scroller.addEvents();\n                }\n            };\n            Scrollbar.prototype.mouseDownHandler = function (e) {\n                var _a;\n                var scroller = this, normalizedEvent = ((_a = scroller.chart.pointer) === null || _a === void 0 ? void 0 : _a.normalize(e)) || e, mousePosition = scroller.cursorToScrollbarPosition(normalizedEvent);\n                scroller.chartX = mousePosition.chartX;\n                scroller.chartY = mousePosition.chartY;\n                scroller.initPositions = [scroller.from, scroller.to];\n                scroller.grabbedCenter = true;\n            };\n            /**\n             * Event handler for the mouse move event.\n             * @private\n             */\n            Scrollbar.prototype.mouseMoveHandler = function (e) {\n                var _a;\n                var scroller = this, normalizedEvent = ((_a = scroller.chart.pointer) === null || _a === void 0 ? void 0 : _a.normalize(e)) || e, options = scroller.options, direction = options.vertical ?\n                    'chartY' : 'chartX', initPositions = scroller.initPositions || [];\n                var scrollPosition, chartPosition, change;\n                // In iOS, a mousemove event with e.pageX === 0 is fired when\n                // holding the finger down in the center of the scrollbar. This\n                // should be ignored.\n                if (scroller.grabbedCenter &&\n                    // #4696, scrollbar failed on Android\n                    (!e.touches || e.touches[0][direction] !== 0)) {\n                    chartPosition = scroller.cursorToScrollbarPosition(normalizedEvent)[direction];\n                    scrollPosition = scroller[direction];\n                    change = chartPosition - scrollPosition;\n                    scroller.hasDragged = true;\n                    scroller.updatePosition(initPositions[0] + change, initPositions[1] + change);\n                    if (scroller.hasDragged) {\n                        fireEvent(scroller, 'changed', {\n                            from: scroller.from,\n                            to: scroller.to,\n                            trigger: 'scrollbar',\n                            DOMType: e.type,\n                            DOMEvent: e\n                        });\n                    }\n                }\n            };\n            /**\n             * Event handler for the mouse up event.\n             * @private\n             */\n            Scrollbar.prototype.mouseUpHandler = function (e) {\n                var scroller = this;\n                if (scroller.hasDragged) {\n                    fireEvent(scroller, 'changed', {\n                        from: scroller.from,\n                        to: scroller.to,\n                        trigger: 'scrollbar',\n                        DOMType: e.type,\n                        DOMEvent: e\n                    });\n                }\n                scroller.grabbedCenter =\n                    scroller.hasDragged =\n                        scroller.chartX =\n                            scroller.chartY = null;\n            };\n            /**\n             * Position the scrollbar, method called from a parent with defined\n             * dimensions.\n             *\n             * @private\n             * @function Highcharts.Scrollbar#position\n             * @param {number} x\n             *        x-position on the chart\n             * @param {number} y\n             *        y-position on the chart\n             * @param {number} width\n             *        width of the scrollbar\n             * @param {number} height\n             *        height of the scrollbar\n             */\n            Scrollbar.prototype.position = function (x, y, width, height) {\n                var scroller = this, options = scroller.options, buttonsEnabled = options.buttonsEnabled, _a = options.margin, margin = _a === void 0 ? 0 : _a, vertical = options.vertical, method = scroller.rendered ? 'animate' : 'attr';\n                var xOffset = height, yOffset = 0;\n                // Make the scrollbar visible when it is repositioned, #15763.\n                scroller.group.show();\n                scroller.x = x;\n                scroller.y = y + this.trackBorderWidth;\n                scroller.width = width; // Width with buttons\n                scroller.height = height;\n                scroller.xOffset = xOffset;\n                scroller.yOffset = yOffset;\n                // If Scrollbar is a vertical type, swap options:\n                if (vertical) {\n                    scroller.width = scroller.yOffset = width = yOffset = scroller.size;\n                    scroller.xOffset = xOffset = 0;\n                    scroller.yOffset = yOffset = buttonsEnabled ? scroller.size : 0;\n                    // Width without buttons\n                    scroller.barWidth = height - (buttonsEnabled ? width * 2 : 0);\n                    scroller.x = x = x + margin;\n                }\n                else {\n                    scroller.height = height = scroller.size;\n                    scroller.xOffset = xOffset = buttonsEnabled ? scroller.size : 0;\n                    // Width without buttons\n                    scroller.barWidth = width - (buttonsEnabled ? height * 2 : 0);\n                    scroller.y = scroller.y + margin;\n                }\n                // Set general position for a group:\n                scroller.group[method]({\n                    translateX: x,\n                    translateY: scroller.y\n                });\n                // Resize background/track:\n                scroller.track[method]({\n                    width: width,\n                    height: height\n                });\n                // Move right/bottom button to its place:\n                scroller.scrollbarButtons[1][method]({\n                    translateX: vertical ? 0 : width - xOffset,\n                    translateY: vertical ? height - yOffset : 0\n                });\n            };\n            /**\n             * Removes the event handlers attached previously with addEvents.\n             *\n             * @private\n             * @function Highcharts.Scrollbar#removeEvents\n             */\n            Scrollbar.prototype.removeEvents = function () {\n                this._events.forEach(function (args) {\n                    removeEvent.apply(null, args);\n                });\n                this._events.length = 0;\n            };\n            /**\n             * Render scrollbar with all required items.\n             *\n             * @private\n             * @function Highcharts.Scrollbar#render\n             */\n            Scrollbar.prototype.render = function () {\n                var scroller = this, renderer = scroller.renderer, options = scroller.options, size = scroller.size, styledMode = scroller.chart.styledMode, group = renderer.g('scrollbar')\n                    .attr({\n                    zIndex: options.zIndex\n                })\n                    .hide() // Initially hide the scrollbar #15863\n                    .add();\n                // Draw the scrollbar group\n                scroller.group = group;\n                // Draw the scrollbar track:\n                scroller.track = renderer.rect()\n                    .addClass('highcharts-scrollbar-track')\n                    .attr({\n                    r: options.trackBorderRadius || 0,\n                    height: size,\n                    width: size\n                }).add(group);\n                if (!styledMode) {\n                    scroller.track.attr({\n                        fill: options.trackBackgroundColor,\n                        stroke: options.trackBorderColor,\n                        'stroke-width': options.trackBorderWidth\n                    });\n                }\n                var trackBorderWidth = scroller.trackBorderWidth =\n                    scroller.track.strokeWidth();\n                scroller.track.attr({\n                    x: -crisp(0, trackBorderWidth),\n                    y: -crisp(0, trackBorderWidth)\n                });\n                // Draw the scrollbar itself\n                scroller.scrollbarGroup = renderer.g().add(group);\n                scroller.scrollbar = renderer.rect()\n                    .addClass('highcharts-scrollbar-thumb')\n                    .attr({\n                    height: size - trackBorderWidth,\n                    width: size - trackBorderWidth,\n                    r: options.barBorderRadius || 0\n                }).add(scroller.scrollbarGroup);\n                scroller.scrollbarRifles = renderer\n                    .path(Scrollbar.swapXY([\n                    ['M', -3, size / 4],\n                    ['L', -3, 2 * size / 3],\n                    ['M', 0, size / 4],\n                    ['L', 0, 2 * size / 3],\n                    ['M', 3, size / 4],\n                    ['L', 3, 2 * size / 3]\n                ], options.vertical))\n                    .addClass('highcharts-scrollbar-rifles')\n                    .add(scroller.scrollbarGroup);\n                if (!styledMode) {\n                    scroller.scrollbar.attr({\n                        fill: options.barBackgroundColor,\n                        stroke: options.barBorderColor,\n                        'stroke-width': options.barBorderWidth\n                    });\n                    scroller.scrollbarRifles.attr({\n                        stroke: options.rifleColor,\n                        'stroke-width': 1\n                    });\n                }\n                scroller.scrollbarStrokeWidth = scroller.scrollbar.strokeWidth();\n                scroller.scrollbarGroup.translate(-crisp(0, scroller.scrollbarStrokeWidth), -crisp(0, scroller.scrollbarStrokeWidth));\n                // Draw the buttons:\n                scroller.drawScrollbarButton(0);\n                scroller.drawScrollbarButton(1);\n            };\n            /**\n             * Set scrollbar size, with a given scale.\n             *\n             * @private\n             * @function Highcharts.Scrollbar#setRange\n             * @param {number} from\n             *        scale (0-1) where bar should start\n             * @param {number} to\n             *        scale (0-1) where bar should end\n             */\n            Scrollbar.prototype.setRange = function (from, to) {\n                var scroller = this, options = scroller.options, vertical = options.vertical, minWidth = options.minWidth, fullWidth = scroller.barWidth, method = (this.rendered &&\n                    !this.hasDragged &&\n                    !(this.chart.navigator && this.chart.navigator.hasDragged)) ? 'animate' : 'attr';\n                if (!defined(fullWidth)) {\n                    return;\n                }\n                var toPX = fullWidth * Math.min(to, 1);\n                var fromPX, newSize;\n                from = Math.max(from, 0);\n                fromPX = Math.ceil(fullWidth * from);\n                scroller.calculatedWidth = newSize = correctFloat(toPX - fromPX);\n                // We need to recalculate position, if minWidth is used\n                if (newSize < minWidth) {\n                    fromPX = (fullWidth - minWidth + newSize) * from;\n                    newSize = minWidth;\n                }\n                var newPos = Math.floor(fromPX + scroller.xOffset + scroller.yOffset);\n                var newRiflesPos = newSize / 2 - 0.5; // -0.5 -> rifle line width / 2\n                // Store current position:\n                scroller.from = from;\n                scroller.to = to;\n                if (!vertical) {\n                    scroller.scrollbarGroup[method]({\n                        translateX: newPos\n                    });\n                    scroller.scrollbar[method]({\n                        width: newSize\n                    });\n                    scroller.scrollbarRifles[method]({\n                        translateX: newRiflesPos\n                    });\n                    scroller.scrollbarLeft = newPos;\n                    scroller.scrollbarTop = 0;\n                }\n                else {\n                    scroller.scrollbarGroup[method]({\n                        translateY: newPos\n                    });\n                    scroller.scrollbar[method]({\n                        height: newSize\n                    });\n                    scroller.scrollbarRifles[method]({\n                        translateY: newRiflesPos\n                    });\n                    scroller.scrollbarTop = newPos;\n                    scroller.scrollbarLeft = 0;\n                }\n                if (newSize <= 12) {\n                    scroller.scrollbarRifles.hide();\n                }\n                else {\n                    scroller.scrollbarRifles.show();\n                }\n                // Show or hide the scrollbar based on the showFull setting\n                if (options.showFull === false) {\n                    if (from <= 0 && to >= 1) {\n                        scroller.group.hide();\n                    }\n                    else {\n                        scroller.group.show();\n                    }\n                }\n                scroller.rendered = true;\n            };\n            /**\n             * Checks if the extremes should be updated in response to a scrollbar\n             * change event.\n             *\n             * @private\n             * @function Highcharts.Scrollbar#shouldUpdateExtremes\n             */\n            Scrollbar.prototype.shouldUpdateExtremes = function (eventType) {\n                return (pick(this.options.liveRedraw, H.svg &&\n                    !H.isTouchDevice &&\n                    !this.chart.boosted) ||\n                    // Mouseup always should change extremes\n                    eventType === 'mouseup' ||\n                    eventType === 'touchend' ||\n                    // Internal events\n                    !defined(eventType));\n            };\n            Scrollbar.prototype.trackClick = function (e) {\n                var _a;\n                var scroller = this;\n                var normalizedEvent = ((_a = scroller.chart.pointer) === null || _a === void 0 ? void 0 : _a.normalize(e)) || e, range = scroller.to - scroller.from, top = scroller.y + scroller.scrollbarTop, left = scroller.x + scroller.scrollbarLeft;\n                if ((scroller.options.vertical && normalizedEvent.chartY > top) ||\n                    (!scroller.options.vertical && normalizedEvent.chartX > left)) {\n                    // On the top or on the left side of the track:\n                    scroller.updatePosition(scroller.from + range, scroller.to + range);\n                }\n                else {\n                    // On the bottom or the right side of the track:\n                    scroller.updatePosition(scroller.from - range, scroller.to - range);\n                }\n                fireEvent(scroller, 'changed', {\n                    from: scroller.from,\n                    to: scroller.to,\n                    trigger: 'scrollbar',\n                    DOMEvent: e\n                });\n            };\n            /**\n             * Update the scrollbar with new options\n             *\n             * @private\n             * @function Highcharts.Scrollbar#update\n             * @param  {Highcharts.ScrollbarOptions} options\n             */\n            Scrollbar.prototype.update = function (options) {\n                this.destroy();\n                this.init(this.chart.renderer, merge(true, this.options, options), this.chart);\n            };\n            /**\n             * Update position option in the Scrollbar, with normalized 0-1 scale\n             *\n             * @private\n             * @function Highcharts.Scrollbar#updatePosition\n             * @param  {number} from\n             * @param  {number} to\n             */\n            Scrollbar.prototype.updatePosition = function (from, to) {\n                if (to > 1) {\n                    from = correctFloat(1 - correctFloat(to - from));\n                    to = 1;\n                }\n                if (from < 0) {\n                    to = correctFloat(to - from);\n                    from = 0;\n                }\n                this.from = from;\n                this.to = to;\n            };\n            /* *\n             *\n             *  Static Properties\n             *\n             * */\n            Scrollbar.defaultOptions = ScrollbarDefaults;\n            return Scrollbar;\n        }());\n        /* *\n         *\n         *  Registry\n         *\n         * */\n        defaultOptions.scrollbar = merge(true, Scrollbar.defaultOptions, defaultOptions.scrollbar);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return Scrollbar;\n    });\n    _registerModule(_modules, 'Stock/Navigator/Navigator.js', [_modules['Core/Axis/Axis.js'], _modules['Stock/Navigator/ChartNavigatorComposition.js'], _modules['Core/Defaults.js'], _modules['Core/Globals.js'], _modules['Core/Axis/NavigatorAxisComposition.js'], _modules['Stock/Navigator/NavigatorComposition.js'], _modules['Stock/Scrollbar/Scrollbar.js'], _modules['Core/Renderer/SVG/SVGRenderer.js'], _modules['Core/Utilities.js']], function (Axis, ChartNavigatorComposition, D, H, NavigatorAxisAdditions, NavigatorComposition, Scrollbar, SVGRenderer, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __assign = (this && this.__assign) || function () {\n            __assign = Object.assign || function(t) {\n                for (var s, i = 1, n = arguments.length; i < n; i++) {\n                    s = arguments[i];\n                    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                        t[p] = s[p];\n                }\n                return t;\n            };\n            return __assign.apply(this, arguments);\n        };\n        var defaultOptions = D.defaultOptions;\n        var isTouchDevice = H.isTouchDevice;\n        var symbols = SVGRenderer.prototype.symbols;\n        var addEvent = U.addEvent, clamp = U.clamp, correctFloat = U.correctFloat, defined = U.defined, destroyObjectProperties = U.destroyObjectProperties, erase = U.erase, extend = U.extend, find = U.find, fireEvent = U.fireEvent, isArray = U.isArray, isNumber = U.isNumber, merge = U.merge, pick = U.pick, removeEvent = U.removeEvent, splat = U.splat;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * Finding the min or max of a set of variables where we don't know if they are\n         * defined, is a pattern that is repeated several places in Highcharts. Consider\n         * making this a global utility method.\n         * @private\n         */\n        function numExt(extreme) {\n            var args = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                args[_i - 1] = arguments[_i];\n            }\n            var numbers = [].filter.call(args, isNumber);\n            if (numbers.length) {\n                return Math[extreme].apply(0, numbers);\n            }\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The Navigator class\n         *\n         * @private\n         * @class\n         * @name Highcharts.Navigator\n         *\n         * @param {Highcharts.Chart} chart\n         *        Chart object\n         */\n        var Navigator = /** @class */ (function () {\n            /* *\n             *\n             *  Constructor\n             *\n             * */\n            function Navigator(chart) {\n                this.isDirty = false;\n                this.scrollbarHeight = 0;\n                this.init(chart);\n            }\n            /* *\n             *\n             *  Static Properties\n             *\n             * */\n            Navigator.compose = function (ChartClass, AxisClass, SeriesClass) {\n                ChartNavigatorComposition.compose(ChartClass, Navigator);\n                NavigatorComposition.compose(ChartClass, AxisClass, SeriesClass);\n            };\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Draw one of the handles on the side of the zoomed range in the navigator.\n             *\n             * @private\n             * @function Highcharts.Navigator#drawHandle\n             *\n             * @param {number} x\n             *        The x center for the handle\n             *\n             * @param {number} index\n             *        0 for left and 1 for right\n             *\n             * @param {boolean|undefined} inverted\n             *        Flag for chart.inverted\n             *\n             * @param {string} verb\n             *        Use 'animate' or 'attr'\n             */\n            Navigator.prototype.drawHandle = function (x, index, inverted, verb) {\n                var navigator = this, height = navigator.navigatorOptions.handles.height;\n                // Place it\n                navigator.handles[index][verb](inverted ? {\n                    translateX: Math.round(navigator.left + navigator.height / 2),\n                    translateY: Math.round(navigator.top + parseInt(x, 10) + 0.5 - height)\n                } : {\n                    translateX: Math.round(navigator.left + parseInt(x, 10)),\n                    translateY: Math.round(navigator.top + navigator.height / 2 - height / 2 - 1)\n                });\n            };\n            /**\n             * Render outline around the zoomed range\n             *\n             * @private\n             * @function Highcharts.Navigator#drawOutline\n             *\n             * @param {number} zoomedMin\n             *        in pixels position where zoomed range starts\n             *\n             * @param {number} zoomedMax\n             *        in pixels position where zoomed range ends\n             *\n             * @param {boolean|undefined} inverted\n             *        flag if chart is inverted\n             *\n             * @param {string} verb\n             *        use 'animate' or 'attr'\n             */\n            Navigator.prototype.drawOutline = function (zoomedMin, zoomedMax, inverted, verb) {\n                var navigator = this, maskInside = navigator.navigatorOptions.maskInside, outlineWidth = navigator.outline.strokeWidth(), halfOutline = outlineWidth / 2, outlineCorrection = (outlineWidth % 2) / 2, // #5800\n                scrollButtonSize = navigator.scrollButtonSize, navigatorSize = navigator.size, navigatorTop = navigator.top, height = navigator.height, lineTop = navigatorTop - halfOutline, lineBtm = navigatorTop + height;\n                var left = navigator.left, verticalMin, path;\n                if (inverted) {\n                    verticalMin = navigatorTop + zoomedMax + outlineCorrection;\n                    zoomedMax = navigatorTop + zoomedMin + outlineCorrection;\n                    path = [\n                        [\n                            'M',\n                            left + height,\n                            navigatorTop - scrollButtonSize - outlineCorrection\n                        ],\n                        // Top right of zoomed range\n                        ['L', left + height, verticalMin],\n                        ['L', left, verticalMin], // Top left of z.r.\n                        ['M', left, zoomedMax], // Bottom left of z.r.\n                        ['L', left + height, zoomedMax], // Bottom right of z.r.\n                        [\n                            'L',\n                            left + height,\n                            navigatorTop + navigatorSize + scrollButtonSize\n                        ]\n                    ];\n                    if (maskInside) {\n                        path.push(\n                        // Upper left of zoomed range\n                        ['M', left + height, verticalMin - halfOutline], \n                        // Upper right of z.r.\n                        [\n                            'L',\n                            left + height,\n                            zoomedMax + halfOutline\n                        ]);\n                    }\n                }\n                else {\n                    left -= scrollButtonSize;\n                    zoomedMin += left + scrollButtonSize - outlineCorrection;\n                    zoomedMax += left + scrollButtonSize - outlineCorrection;\n                    path = [\n                        // Left\n                        ['M', left, lineTop],\n                        // Upper left of zoomed range\n                        ['L', zoomedMin, lineTop],\n                        // Lower left of z.r.\n                        ['L', zoomedMin, lineBtm],\n                        // Lower right of z.r.\n                        ['M', zoomedMax, lineBtm],\n                        // Upper right of z.r.\n                        ['L', zoomedMax, lineTop],\n                        // Right\n                        [\n                            'L',\n                            left + navigatorSize + scrollButtonSize * 2,\n                            lineTop\n                        ]\n                    ];\n                    if (maskInside) {\n                        path.push(\n                        // Upper left of zoomed range\n                        ['M', zoomedMin - halfOutline, lineTop], \n                        // Upper right of z.r.\n                        ['L', zoomedMax + halfOutline, lineTop]);\n                    }\n                }\n                navigator.outline[verb]({\n                    d: path\n                });\n            };\n            /**\n             * Render outline around the zoomed range\n             *\n             * @private\n             * @function Highcharts.Navigator#drawMasks\n             *\n             * @param {number} zoomedMin\n             *        in pixels position where zoomed range starts\n             *\n             * @param {number} zoomedMax\n             *        in pixels position where zoomed range ends\n             *\n             * @param {boolean|undefined} inverted\n             *        flag if chart is inverted\n             *\n             * @param {string} verb\n             *        use 'animate' or 'attr'\n             */\n            Navigator.prototype.drawMasks = function (zoomedMin, zoomedMax, inverted, verb) {\n                var navigator = this, left = navigator.left, top = navigator.top, navigatorHeight = navigator.height;\n                var height, width, x, y;\n                // Determine rectangle position & size\n                // According to (non)inverted position:\n                if (inverted) {\n                    x = [left, left, left];\n                    y = [top, top + zoomedMin, top + zoomedMax];\n                    width = [navigatorHeight, navigatorHeight, navigatorHeight];\n                    height = [\n                        zoomedMin,\n                        zoomedMax - zoomedMin,\n                        navigator.size - zoomedMax\n                    ];\n                }\n                else {\n                    x = [left, left + zoomedMin, left + zoomedMax];\n                    y = [top, top, top];\n                    width = [\n                        zoomedMin,\n                        zoomedMax - zoomedMin,\n                        navigator.size - zoomedMax\n                    ];\n                    height = [navigatorHeight, navigatorHeight, navigatorHeight];\n                }\n                navigator.shades.forEach(function (shade, i) {\n                    shade[verb]({\n                        x: x[i],\n                        y: y[i],\n                        width: width[i],\n                        height: height[i]\n                    });\n                });\n            };\n            /**\n             * Generate and update DOM elements for a navigator:\n             *\n             * - main navigator group\n             *\n             * - all shades\n             *\n             * - outline\n             *\n             * - handles\n             *\n             * @private\n             * @function Highcharts.Navigator#renderElements\n             */\n            Navigator.prototype.renderElements = function () {\n                var _a, _b;\n                var navigator = this, navigatorOptions = navigator.navigatorOptions, maskInside = navigatorOptions.maskInside, chart = navigator.chart, inverted = chart.inverted, renderer = chart.renderer, mouseCursor = {\n                    cursor: inverted ? 'ns-resize' : 'ew-resize'\n                }, \n                // Create the main navigator group\n                navigatorGroup = (_a = navigator.navigatorGroup) !== null && _a !== void 0 ? _a : (navigator.navigatorGroup = renderer\n                    .g('navigator')\n                    .attr({\n                    zIndex: 8,\n                    visibility: 'hidden'\n                })\n                    .add());\n                // Create masks, each mask will get events and fill:\n                [\n                    !maskInside,\n                    maskInside,\n                    !maskInside\n                ].forEach(function (hasMask, index) {\n                    var _a;\n                    var shade = (_a = navigator.shades[index]) !== null && _a !== void 0 ? _a : (navigator.shades[index] = renderer.rect()\n                        .addClass('highcharts-navigator-mask' +\n                        (index === 1 ? '-inside' : '-outside'))\n                        .add(navigatorGroup));\n                    if (!chart.styledMode) {\n                        shade.attr({\n                            fill: hasMask ? navigatorOptions.maskFill : 'rgba(0,0,0,0)'\n                        });\n                        if (index === 1) {\n                            shade.css(mouseCursor);\n                        }\n                    }\n                });\n                // Create the outline:\n                if (!navigator.outline) {\n                    navigator.outline = renderer.path()\n                        .addClass('highcharts-navigator-outline')\n                        .add(navigatorGroup);\n                }\n                if (!chart.styledMode) {\n                    navigator.outline.attr({\n                        'stroke-width': navigatorOptions.outlineWidth,\n                        stroke: navigatorOptions.outlineColor\n                    });\n                }\n                // Create the handlers:\n                if ((_b = navigatorOptions.handles) === null || _b === void 0 ? void 0 : _b.enabled) {\n                    var handlesOptions_1 = navigatorOptions.handles, height_1 = handlesOptions_1.height, width_1 = handlesOptions_1.width;\n                    [0, 1].forEach(function (index) {\n                        var symbolName = handlesOptions_1.symbols[index];\n                        if (!navigator.handles[index]) {\n                            navigator.handles[index] = renderer.symbol(symbolName, -width_1 / 2 - 1, 0, width_1, height_1, handlesOptions_1);\n                            // Z index is 6 for right handle, 7 for left. Can't be 10,\n                            // because of the tooltip in inverted chart (#2908).\n                            navigator.handles[index].attr({ zIndex: 7 - index })\n                                .addClass('highcharts-navigator-handle ' +\n                                'highcharts-navigator-handle-' +\n                                ['left', 'right'][index]).add(navigatorGroup);\n                            // If the navigator symbol changed, update its path and name\n                        }\n                        else if (symbolName !== navigator.handles[index].symbolName) {\n                            var symbolFn = symbols[symbolName], path = symbolFn.call(symbols, -width_1 / 2 - 1, 0, width_1, height_1);\n                            navigator.handles[index].attr({\n                                d: path\n                            });\n                            navigator.handles[index].symbolName = symbolName;\n                        }\n                        if (chart.inverted) {\n                            navigator.handles[index].attr({\n                                rotation: 90,\n                                rotationOriginX: Math.floor(-width_1 / 2),\n                                rotationOriginY: (height_1 + width_1) / 2\n                            });\n                        }\n                        if (!chart.styledMode) {\n                            navigator.handles[index]\n                                .attr({\n                                fill: handlesOptions_1.backgroundColor,\n                                stroke: handlesOptions_1.borderColor,\n                                'stroke-width': handlesOptions_1.lineWidth,\n                                width: handlesOptions_1.width,\n                                height: handlesOptions_1.height,\n                                x: -width_1 / 2 - 1,\n                                y: 0\n                            })\n                                .css(mouseCursor);\n                        }\n                    });\n                }\n            };\n            /**\n             * Update navigator\n             *\n             * @private\n             * @function Highcharts.Navigator#update\n             *\n             * @param {Highcharts.NavigatorOptions} options\n             *        Options to merge in when updating navigator\n             */\n            Navigator.prototype.update = function (options, redraw) {\n                var _a, _b;\n                var _this = this;\n                var _c, _d;\n                if (redraw === void 0) { redraw = false; }\n                var chart = this.chart, invertedUpdate = chart.options.chart.inverted !==\n                    ((_c = chart.scrollbar) === null || _c === void 0 ? void 0 : _c.options.vertical);\n                merge(true, chart.options.navigator, options);\n                this.navigatorOptions = chart.options.navigator || {};\n                this.setOpposite();\n                // Revert to destroy/init for navigator/scrollbar enabled toggle\n                if (defined(options.enabled) || invertedUpdate) {\n                    this.destroy();\n                    this.navigatorEnabled = options.enabled || this.navigatorEnabled;\n                    return this.init(chart);\n                }\n                if (this.navigatorEnabled) {\n                    this.isDirty = true;\n                    if (options.adaptToUpdatedData === false) {\n                        this.baseSeries.forEach(function (series) {\n                            removeEvent(series, 'updatedData', _this.updatedDataHandler);\n                        }, this);\n                    }\n                    if (options.adaptToUpdatedData) {\n                        this.baseSeries.forEach(function (series) {\n                            series.eventsToUnbind.push(addEvent(series, 'updatedData', _this.updatedDataHandler));\n                        }, this);\n                    }\n                    // Update navigator series\n                    if (options.series || options.baseSeries) {\n                        this.setBaseSeries(void 0, false);\n                    }\n                    // Update navigator axis\n                    if (options.height || options.xAxis || options.yAxis) {\n                        this.height = (_d = options.height) !== null && _d !== void 0 ? _d : this.height;\n                        var offsets = this.getXAxisOffsets();\n                        this.xAxis.update(__assign(__assign({}, options.xAxis), (_a = { offsets: offsets }, _a[chart.inverted ? 'width' : 'height'] = this.height, _a[chart.inverted ? 'height' : 'width'] = void 0, _a)), false);\n                        this.yAxis.update(__assign(__assign({}, options.yAxis), (_b = {}, _b[chart.inverted ? 'width' : 'height'] = this.height, _b)), false);\n                    }\n                }\n                if (redraw) {\n                    chart.redraw();\n                }\n            };\n            /**\n             * Render the navigator\n             *\n             * @private\n             * @function Highcharts.Navigator#render\n             * @param {number} min\n             *        X axis value minimum\n             * @param {number} max\n             *        X axis value maximum\n             * @param {number} [pxMin]\n             *        Pixel value minimum\n             * @param {number} [pxMax]\n             *        Pixel value maximum\n             */\n            Navigator.prototype.render = function (min, max, pxMin, pxMax) {\n                var navigator = this, chart = navigator.chart, xAxis = navigator.xAxis, pointRange = xAxis.pointRange || 0, scrollbarXAxis = xAxis.navigatorAxis.fake ? chart.xAxis[0] : xAxis, navigatorEnabled = navigator.navigatorEnabled, rendered = navigator.rendered, inverted = chart.inverted, minRange = chart.xAxis[0].minRange, maxRange = chart.xAxis[0].options.maxRange, scrollButtonSize = navigator.scrollButtonSize;\n                var navigatorWidth, scrollbarLeft, scrollbarTop, scrollbarHeight = navigator.scrollbarHeight, navigatorSize, verb;\n                // Don't redraw while moving the handles (#4703).\n                if (this.hasDragged && !defined(pxMin)) {\n                    return;\n                }\n                if (this.isDirty) {\n                    // Update DOM navigator elements\n                    this.renderElements();\n                }\n                min = correctFloat(min - pointRange / 2);\n                max = correctFloat(max + pointRange / 2);\n                // Don't render the navigator until we have data (#486, #4202, #5172).\n                if (!isNumber(min) || !isNumber(max)) {\n                    // However, if navigator was already rendered, we may need to resize\n                    // it. For example hidden series, but visible navigator (#6022).\n                    if (rendered) {\n                        pxMin = 0;\n                        pxMax = pick(xAxis.width, scrollbarXAxis.width);\n                    }\n                    else {\n                        return;\n                    }\n                }\n                navigator.left = pick(xAxis.left, \n                // In case of scrollbar only, without navigator\n                chart.plotLeft + scrollButtonSize +\n                    (inverted ? chart.plotWidth : 0));\n                var zoomedMax = navigator.size = navigatorSize = pick(xAxis.len, (inverted ? chart.plotHeight : chart.plotWidth) -\n                    2 * scrollButtonSize);\n                if (inverted) {\n                    navigatorWidth = scrollbarHeight;\n                }\n                else {\n                    navigatorWidth = navigatorSize + 2 * scrollButtonSize;\n                }\n                // Get the pixel position of the handles\n                pxMin = pick(pxMin, xAxis.toPixels(min, true));\n                pxMax = pick(pxMax, xAxis.toPixels(max, true));\n                // Verify (#1851, #2238)\n                if (!isNumber(pxMin) || Math.abs(pxMin) === Infinity) {\n                    pxMin = 0;\n                    pxMax = navigatorWidth;\n                }\n                // Are we below the minRange? (#2618, #6191)\n                var newMin = xAxis.toValue(pxMin, true), newMax = xAxis.toValue(pxMax, true), currentRange = Math.abs(correctFloat(newMax - newMin));\n                if (currentRange < minRange) {\n                    if (this.grabbedLeft) {\n                        pxMin = xAxis.toPixels(newMax - minRange - pointRange, true);\n                    }\n                    else if (this.grabbedRight) {\n                        pxMax = xAxis.toPixels(newMin + minRange + pointRange, true);\n                    }\n                }\n                else if (defined(maxRange) &&\n                    correctFloat(currentRange - pointRange) > maxRange) {\n                    if (this.grabbedLeft) {\n                        pxMin = xAxis.toPixels(newMax - maxRange - pointRange, true);\n                    }\n                    else if (this.grabbedRight) {\n                        pxMax = xAxis.toPixels(newMin + maxRange + pointRange, true);\n                    }\n                }\n                // Handles are allowed to cross, but never exceed the plot area\n                navigator.zoomedMax = clamp(Math.max(pxMin, pxMax), 0, zoomedMax);\n                navigator.zoomedMin = clamp(navigator.fixedWidth ?\n                    navigator.zoomedMax - navigator.fixedWidth :\n                    Math.min(pxMin, pxMax), 0, zoomedMax);\n                navigator.range = navigator.zoomedMax - navigator.zoomedMin;\n                zoomedMax = Math.round(navigator.zoomedMax);\n                var zoomedMin = Math.round(navigator.zoomedMin);\n                if (navigatorEnabled) {\n                    navigator.navigatorGroup.attr({\n                        visibility: 'inherit'\n                    });\n                    // Place elements\n                    verb = rendered && !navigator.hasDragged ? 'animate' : 'attr';\n                    navigator.drawMasks(zoomedMin, zoomedMax, inverted, verb);\n                    navigator.drawOutline(zoomedMin, zoomedMax, inverted, verb);\n                    if (navigator.navigatorOptions.handles.enabled) {\n                        navigator.drawHandle(zoomedMin, 0, inverted, verb);\n                        navigator.drawHandle(zoomedMax, 1, inverted, verb);\n                    }\n                }\n                if (navigator.scrollbar) {\n                    if (inverted) {\n                        scrollbarTop = navigator.top - scrollButtonSize;\n                        scrollbarLeft = navigator.left - scrollbarHeight +\n                            (navigatorEnabled || !scrollbarXAxis.opposite ? 0 :\n                                // Multiple axes has offsets:\n                                (scrollbarXAxis.titleOffset || 0) +\n                                    // Self margin from the axis.title\n                                    scrollbarXAxis.axisTitleMargin);\n                        scrollbarHeight = navigatorSize + 2 * scrollButtonSize;\n                    }\n                    else {\n                        scrollbarTop = navigator.top + (navigatorEnabled ?\n                            navigator.height :\n                            -scrollbarHeight);\n                        scrollbarLeft = navigator.left - scrollButtonSize;\n                    }\n                    // Reposition scrollbar\n                    navigator.scrollbar.position(scrollbarLeft, scrollbarTop, navigatorWidth, scrollbarHeight);\n                    // Keep scale 0-1\n                    navigator.scrollbar.setRange(\n                    // Use real value, not rounded because range can be very small\n                    // (#1716)\n                    navigator.zoomedMin / (navigatorSize || 1), navigator.zoomedMax / (navigatorSize || 1));\n                }\n                navigator.rendered = true;\n                this.isDirty = false;\n                fireEvent(this, 'afterRender');\n            };\n            /**\n             * Set up the mouse and touch events for the navigator\n             *\n             * @private\n             * @function Highcharts.Navigator#addMouseEvents\n             */\n            Navigator.prototype.addMouseEvents = function () {\n                var navigator = this, chart = navigator.chart, container = chart.container;\n                var eventsToUnbind = [], mouseMoveHandler, mouseUpHandler;\n                /**\n                 * Create mouse events' handlers.\n                 * Make them as separate functions to enable wrapping them:\n                 */\n                navigator.mouseMoveHandler = mouseMoveHandler = function (e) {\n                    navigator.onMouseMove(e);\n                };\n                navigator.mouseUpHandler = mouseUpHandler = function (e) {\n                    navigator.onMouseUp(e);\n                };\n                // Add shades and handles mousedown events\n                eventsToUnbind = navigator.getPartsEvents('mousedown');\n                eventsToUnbind.push(\n                // Add mouse move and mouseup events. These are bind to doc/div,\n                // because Navigator.grabbedSomething flags are stored in mousedown\n                // events\n                addEvent(chart.renderTo, 'mousemove', mouseMoveHandler), addEvent(container.ownerDocument, 'mouseup', mouseUpHandler), \n                // Touch events\n                addEvent(chart.renderTo, 'touchmove', mouseMoveHandler), addEvent(container.ownerDocument, 'touchend', mouseUpHandler));\n                eventsToUnbind.concat(navigator.getPartsEvents('touchstart'));\n                navigator.eventsToUnbind = eventsToUnbind;\n                // Data events\n                if (navigator.series && navigator.series[0]) {\n                    eventsToUnbind.push(addEvent(navigator.series[0].xAxis, 'foundExtremes', function () {\n                        chart.navigator.modifyNavigatorAxisExtremes();\n                    }));\n                }\n            };\n            /**\n             * Generate events for handles and masks\n             *\n             * @private\n             * @function Highcharts.Navigator#getPartsEvents\n             *\n             * @param {string} eventName\n             *        Event name handler, 'mousedown' or 'touchstart'\n             *\n             * @return {Array<Function>}\n             *         An array of functions to remove navigator functions from the\n             *         events again.\n             */\n            Navigator.prototype.getPartsEvents = function (eventName) {\n                var navigator = this, events = [];\n                ['shades', 'handles'].forEach(function (name) {\n                    navigator[name].forEach(function (navigatorItem, index) {\n                        events.push(addEvent(navigatorItem.element, eventName, function (e) {\n                            navigator[name + 'Mousedown'](e, index);\n                        }));\n                    });\n                });\n                return events;\n            };\n            /**\n             * Mousedown on a shaded mask, either:\n             *\n             * - will be stored for future drag&drop\n             *\n             * - will directly shift to a new range\n             *\n             * @private\n             * @function Highcharts.Navigator#shadesMousedown\n             *\n             * @param {Highcharts.PointerEventObject} e\n             *        Mouse event\n             *\n             * @param {number} index\n             *        Index of a mask in Navigator.shades array\n             */\n            Navigator.prototype.shadesMousedown = function (e, index) {\n                var _a;\n                e = ((_a = this.chart.pointer) === null || _a === void 0 ? void 0 : _a.normalize(e)) || e;\n                var navigator = this, chart = navigator.chart, xAxis = navigator.xAxis, zoomedMin = navigator.zoomedMin, navigatorSize = navigator.size, range = navigator.range;\n                var navigatorPosition = navigator.left, chartX = e.chartX, fixedMax, fixedMin, ext, left;\n                // For inverted chart, swap some options:\n                if (chart.inverted) {\n                    chartX = e.chartY;\n                    navigatorPosition = navigator.top;\n                }\n                if (index === 1) {\n                    // Store information for drag&drop\n                    navigator.grabbedCenter = chartX;\n                    navigator.fixedWidth = range;\n                    navigator.dragOffset = chartX - zoomedMin;\n                }\n                else {\n                    // Shift the range by clicking on shaded areas\n                    left = chartX - navigatorPosition - range / 2;\n                    if (index === 0) {\n                        left = Math.max(0, left);\n                    }\n                    else if (index === 2 && left + range >= navigatorSize) {\n                        left = navigatorSize - range;\n                        if (navigator.reversedExtremes) {\n                            // #7713\n                            left -= range;\n                            fixedMin = navigator.getUnionExtremes().dataMin;\n                        }\n                        else {\n                            // #2293, #3543\n                            fixedMax = navigator.getUnionExtremes().dataMax;\n                        }\n                    }\n                    if (left !== zoomedMin) { // It has actually moved\n                        navigator.fixedWidth = range; // #1370\n                        ext = xAxis.navigatorAxis.toFixedRange(left, left + range, fixedMin, fixedMax);\n                        if (defined(ext.min)) { // #7411\n                            fireEvent(this, 'setRange', {\n                                min: Math.min(ext.min, ext.max),\n                                max: Math.max(ext.min, ext.max),\n                                redraw: true,\n                                eventArguments: {\n                                    trigger: 'navigator'\n                                }\n                            });\n                        }\n                    }\n                }\n            };\n            /**\n             * Mousedown on a handle mask.\n             * Will store necessary information for drag&drop.\n             *\n             * @private\n             * @function Highcharts.Navigator#handlesMousedown\n             * @param {Highcharts.PointerEventObject} e\n             *        Mouse event\n             * @param {number} index\n             *        Index of a handle in Navigator.handles array\n             */\n            Navigator.prototype.handlesMousedown = function (e, index) {\n                var _a;\n                e = ((_a = this.chart.pointer) === null || _a === void 0 ? void 0 : _a.normalize(e)) || e;\n                var navigator = this, chart = navigator.chart, baseXAxis = chart.xAxis[0], \n                // For reversed axes, min and max are changed,\n                // so the other extreme should be stored\n                reverse = navigator.reversedExtremes;\n                if (index === 0) {\n                    // Grab the left handle\n                    navigator.grabbedLeft = true;\n                    navigator.otherHandlePos = navigator.zoomedMax;\n                    navigator.fixedExtreme = reverse ? baseXAxis.min : baseXAxis.max;\n                }\n                else {\n                    // Grab the right handle\n                    navigator.grabbedRight = true;\n                    navigator.otherHandlePos = navigator.zoomedMin;\n                    navigator.fixedExtreme = reverse ? baseXAxis.max : baseXAxis.min;\n                }\n                chart.setFixedRange(void 0);\n            };\n            /**\n             * Mouse move event based on x/y mouse position.\n             *\n             * @private\n             * @function Highcharts.Navigator#onMouseMove\n             *\n             * @param {Highcharts.PointerEventObject} e\n             *        Mouse event\n             */\n            Navigator.prototype.onMouseMove = function (e) {\n                var _a;\n                var navigator = this, chart = navigator.chart, navigatorSize = navigator.navigatorSize, range = navigator.range, dragOffset = navigator.dragOffset, inverted = chart.inverted;\n                var left = navigator.left, chartX;\n                // In iOS, a mousemove event with e.pageX === 0 is fired when holding\n                // the finger down in the center of the scrollbar. This should be\n                // ignored.\n                if (!e.touches || e.touches[0].pageX !== 0) { // #4696\n                    e = ((_a = chart.pointer) === null || _a === void 0 ? void 0 : _a.normalize(e)) || e;\n                    chartX = e.chartX;\n                    // Swap some options for inverted chart\n                    if (inverted) {\n                        left = navigator.top;\n                        chartX = e.chartY;\n                    }\n                    // Drag left handle or top handle\n                    if (navigator.grabbedLeft) {\n                        navigator.hasDragged = true;\n                        navigator.render(0, 0, chartX - left, navigator.otherHandlePos);\n                        // Drag right handle or bottom handle\n                    }\n                    else if (navigator.grabbedRight) {\n                        navigator.hasDragged = true;\n                        navigator.render(0, 0, navigator.otherHandlePos, chartX - left);\n                        // Drag scrollbar or open area in navigator\n                    }\n                    else if (navigator.grabbedCenter) {\n                        navigator.hasDragged = true;\n                        if (chartX < dragOffset) { // Outside left\n                            chartX = dragOffset;\n                            // Outside right\n                        }\n                        else if (chartX >\n                            navigatorSize + dragOffset - range) {\n                            chartX = navigatorSize + dragOffset - range;\n                        }\n                        navigator.render(0, 0, chartX - dragOffset, chartX - dragOffset + range);\n                    }\n                    if (navigator.hasDragged &&\n                        navigator.scrollbar &&\n                        pick(navigator.scrollbar.options.liveRedraw, \n                        // By default, don't run live redraw on touch\n                        // devices or if the chart is in boost.\n                        !isTouchDevice &&\n                            !this.chart.boosted)) {\n                        e.DOMType = e.type;\n                        setTimeout(function () {\n                            navigator.onMouseUp(e);\n                        }, 0);\n                    }\n                }\n            };\n            /**\n             * Mouse up event based on x/y mouse position.\n             *\n             * @private\n             * @function Highcharts.Navigator#onMouseUp\n             * @param {Highcharts.PointerEventObject} e\n             *        Mouse event\n             */\n            Navigator.prototype.onMouseUp = function (e) {\n                var navigator = this, chart = navigator.chart, xAxis = navigator.xAxis, scrollbar = navigator.scrollbar, DOMEvent = e.DOMEvent || e, inverted = chart.inverted, verb = navigator.rendered && !navigator.hasDragged ?\n                    'animate' : 'attr';\n                var zoomedMax, zoomedMin, unionExtremes, fixedMin, fixedMax, ext;\n                if (\n                // MouseUp is called for both, navigator and scrollbar (that order),\n                // which causes calling afterSetExtremes twice. Prevent first call\n                // by checking if scrollbar is going to set new extremes (#6334)\n                (navigator.hasDragged && (!scrollbar || !scrollbar.hasDragged)) ||\n                    e.trigger === 'scrollbar') {\n                    unionExtremes = navigator.getUnionExtremes();\n                    // When dragging one handle, make sure the other one doesn't change\n                    if (navigator.zoomedMin === navigator.otherHandlePos) {\n                        fixedMin = navigator.fixedExtreme;\n                    }\n                    else if (navigator.zoomedMax === navigator.otherHandlePos) {\n                        fixedMax = navigator.fixedExtreme;\n                    }\n                    // Snap to right edge (#4076)\n                    if (navigator.zoomedMax === navigator.size) {\n                        fixedMax = navigator.reversedExtremes ?\n                            unionExtremes.dataMin :\n                            unionExtremes.dataMax;\n                    }\n                    // Snap to left edge (#7576)\n                    if (navigator.zoomedMin === 0) {\n                        fixedMin = navigator.reversedExtremes ?\n                            unionExtremes.dataMax :\n                            unionExtremes.dataMin;\n                    }\n                    ext = xAxis.navigatorAxis.toFixedRange(navigator.zoomedMin, navigator.zoomedMax, fixedMin, fixedMax);\n                    if (defined(ext.min)) {\n                        fireEvent(this, 'setRange', {\n                            min: Math.min(ext.min, ext.max),\n                            max: Math.max(ext.min, ext.max),\n                            redraw: true,\n                            animation: navigator.hasDragged ? false : null,\n                            eventArguments: {\n                                trigger: 'navigator',\n                                triggerOp: 'navigator-drag',\n                                DOMEvent: DOMEvent // #1838\n                            }\n                        });\n                    }\n                }\n                if (e.DOMType !== 'mousemove' &&\n                    e.DOMType !== 'touchmove') {\n                    navigator.grabbedLeft = navigator.grabbedRight =\n                        navigator.grabbedCenter = navigator.fixedWidth =\n                            navigator.fixedExtreme = navigator.otherHandlePos =\n                                navigator.hasDragged = navigator.dragOffset = null;\n                }\n                // Update position of navigator shades, outline and handles (#12573)\n                if (navigator.navigatorEnabled &&\n                    isNumber(navigator.zoomedMin) &&\n                    isNumber(navigator.zoomedMax)) {\n                    zoomedMin = Math.round(navigator.zoomedMin);\n                    zoomedMax = Math.round(navigator.zoomedMax);\n                    if (navigator.shades) {\n                        navigator.drawMasks(zoomedMin, zoomedMax, inverted, verb);\n                    }\n                    if (navigator.outline) {\n                        navigator.drawOutline(zoomedMin, zoomedMax, inverted, verb);\n                    }\n                    if (navigator.navigatorOptions.handles.enabled &&\n                        Object.keys(navigator.handles).length ===\n                            navigator.handles.length) {\n                        navigator.drawHandle(zoomedMin, 0, inverted, verb);\n                        navigator.drawHandle(zoomedMax, 1, inverted, verb);\n                    }\n                }\n            };\n            /**\n             * Removes the event handlers attached previously with addEvents.\n             *\n             * @private\n             * @function Highcharts.Navigator#removeEvents\n             */\n            Navigator.prototype.removeEvents = function () {\n                if (this.eventsToUnbind) {\n                    this.eventsToUnbind.forEach(function (unbind) {\n                        unbind();\n                    });\n                    this.eventsToUnbind = void 0;\n                }\n                this.removeBaseSeriesEvents();\n            };\n            /**\n             * Remove data events.\n             *\n             * @private\n             * @function Highcharts.Navigator#removeBaseSeriesEvents\n             */\n            Navigator.prototype.removeBaseSeriesEvents = function () {\n                var baseSeries = this.baseSeries || [];\n                if (this.navigatorEnabled && baseSeries[0]) {\n                    if (this.navigatorOptions.adaptToUpdatedData !== false) {\n                        baseSeries.forEach(function (series) {\n                            removeEvent(series, 'updatedData', this.updatedDataHandler);\n                        }, this);\n                    }\n                    // We only listen for extremes-events on the first baseSeries\n                    if (baseSeries[0].xAxis) {\n                        removeEvent(baseSeries[0].xAxis, 'foundExtremes', this.modifyBaseAxisExtremes);\n                    }\n                }\n            };\n            /**\n             * Calculate the navigator xAxis offsets\n             *\n             * @private\n             */\n            Navigator.prototype.getXAxisOffsets = function () {\n                return (this.chart.inverted ?\n                    [this.scrollButtonSize, 0, -this.scrollButtonSize, 0] :\n                    [0, -this.scrollButtonSize, 0, this.scrollButtonSize]);\n            };\n            /**\n             * Initialize the Navigator object\n             *\n             * @private\n             * @function Highcharts.Navigator#init\n             */\n            Navigator.prototype.init = function (chart) {\n                var _a;\n                var chartOptions = chart.options, navigatorOptions = chartOptions.navigator || {}, navigatorEnabled = navigatorOptions.enabled, scrollbarOptions = chartOptions.scrollbar || {}, scrollbarEnabled = scrollbarOptions.enabled, height = navigatorEnabled && navigatorOptions.height || 0, scrollbarHeight = scrollbarEnabled && scrollbarOptions.height || 0, scrollButtonSize = scrollbarOptions.buttonsEnabled && scrollbarHeight || 0;\n                this.handles = [];\n                this.shades = [];\n                this.chart = chart;\n                this.setBaseSeries();\n                this.height = height;\n                this.scrollbarHeight = scrollbarHeight;\n                this.scrollButtonSize = scrollButtonSize;\n                this.scrollbarEnabled = scrollbarEnabled;\n                this.navigatorEnabled = navigatorEnabled;\n                this.navigatorOptions = navigatorOptions;\n                this.scrollbarOptions = scrollbarOptions;\n                this.setOpposite();\n                var navigator = this, baseSeries = navigator.baseSeries, xAxisIndex = chart.xAxis.length, yAxisIndex = chart.yAxis.length, baseXaxis = baseSeries && baseSeries[0] && baseSeries[0].xAxis ||\n                    chart.xAxis[0] || { options: {} };\n                chart.isDirtyBox = true;\n                if (navigator.navigatorEnabled) {\n                    var offsets = this.getXAxisOffsets();\n                    // An x axis is required for scrollbar also\n                    navigator.xAxis = new Axis(chart, merge({\n                        // Inherit base xAxis' break, ordinal options and overscroll\n                        breaks: baseXaxis.options.breaks,\n                        ordinal: baseXaxis.options.ordinal,\n                        overscroll: baseXaxis.options.overscroll\n                    }, navigatorOptions.xAxis, {\n                        type: 'datetime',\n                        yAxis: (_a = navigatorOptions.yAxis) === null || _a === void 0 ? void 0 : _a.id,\n                        index: xAxisIndex,\n                        isInternal: true,\n                        offset: 0,\n                        keepOrdinalPadding: true, // #2436\n                        startOnTick: false,\n                        endOnTick: false,\n                        // Inherit base xAxis' padding when ordinal is false (#16915).\n                        minPadding: baseXaxis.options.ordinal ? 0 :\n                            baseXaxis.options.minPadding,\n                        maxPadding: baseXaxis.options.ordinal ? 0 :\n                            baseXaxis.options.maxPadding,\n                        zoomEnabled: false\n                    }, chart.inverted ? {\n                        offsets: offsets,\n                        width: height\n                    } : {\n                        offsets: offsets,\n                        height: height\n                    }), 'xAxis');\n                    navigator.yAxis = new Axis(chart, merge(navigatorOptions.yAxis, {\n                        alignTicks: false,\n                        offset: 0,\n                        index: yAxisIndex,\n                        isInternal: true,\n                        reversed: pick((navigatorOptions.yAxis &&\n                            navigatorOptions.yAxis.reversed), (chart.yAxis[0] && chart.yAxis[0].reversed), false), // #14060\n                        zoomEnabled: false\n                    }, chart.inverted ? {\n                        width: height\n                    } : {\n                        height: height\n                    }), 'yAxis');\n                    // If we have a base series, initialize the navigator series\n                    if (baseSeries || navigatorOptions.series.data) {\n                        navigator.updateNavigatorSeries(false);\n                        // If not, set up an event to listen for added series\n                    }\n                    else if (chart.series.length === 0) {\n                        navigator.unbindRedraw = addEvent(chart, 'beforeRedraw', function () {\n                            // We've got one, now add it as base\n                            if (chart.series.length > 0 && !navigator.series) {\n                                navigator.setBaseSeries();\n                                navigator.unbindRedraw(); // Reset\n                            }\n                        });\n                    }\n                    navigator.reversedExtremes = (chart.inverted && !navigator.xAxis.reversed) || (!chart.inverted && navigator.xAxis.reversed);\n                    // Render items, so we can bind events to them:\n                    navigator.renderElements();\n                    // Add mouse events\n                    navigator.addMouseEvents();\n                    // In case of scrollbar only, fake an x axis to get translation\n                }\n                else {\n                    navigator.xAxis = {\n                        chart: chart,\n                        navigatorAxis: {\n                            fake: true\n                        },\n                        translate: function (value, reverse) {\n                            var axis = chart.xAxis[0], ext = axis.getExtremes(), scrollTrackWidth = axis.len - 2 * scrollButtonSize, min = numExt('min', axis.options.min, ext.dataMin), valueRange = numExt('max', axis.options.max, ext.dataMax) - min;\n                            return reverse ?\n                                // From pixel to value\n                                (value * valueRange / scrollTrackWidth) + min :\n                                // From value to pixel\n                                scrollTrackWidth * (value - min) / valueRange;\n                        },\n                        toPixels: function (value) {\n                            return this.translate(value);\n                        },\n                        toValue: function (value) {\n                            return this.translate(value, true);\n                        }\n                    };\n                    navigator.xAxis.navigatorAxis.axis = navigator.xAxis;\n                    navigator.xAxis.navigatorAxis.toFixedRange = (NavigatorAxisAdditions.prototype.toFixedRange.bind(navigator.xAxis.navigatorAxis));\n                }\n                // Initialize the scrollbar\n                if (chart.options.scrollbar.enabled) {\n                    var options = merge(chart.options.scrollbar, { vertical: chart.inverted });\n                    if (!isNumber(options.margin) && navigator.navigatorEnabled) {\n                        options.margin = chart.inverted ? -3 : 3;\n                    }\n                    chart.scrollbar = navigator.scrollbar = new Scrollbar(chart.renderer, options, chart);\n                    addEvent(navigator.scrollbar, 'changed', function (e) {\n                        var range = navigator.size, to = range * this.to, from = range * this.from;\n                        navigator.hasDragged = navigator.scrollbar.hasDragged;\n                        navigator.render(0, 0, from, to);\n                        if (this.shouldUpdateExtremes(e.DOMType)) {\n                            setTimeout(function () {\n                                navigator.onMouseUp(e);\n                            });\n                        }\n                    });\n                }\n                // Add data events\n                navigator.addBaseSeriesEvents();\n                // Add redraw events\n                navigator.addChartEvents();\n            };\n            /**\n             * Set the opposite property on navigator\n             *\n             * @private\n             */\n            Navigator.prototype.setOpposite = function () {\n                var navigatorOptions = this.navigatorOptions, navigatorEnabled = this.navigatorEnabled, chart = this.chart;\n                this.opposite = pick(navigatorOptions.opposite, Boolean(!navigatorEnabled && chart.inverted)); // #6262\n            };\n            /**\n             * Get the union data extremes of the chart - the outer data extremes of the\n             * base X axis and the navigator axis.\n             *\n             * @private\n             * @function Highcharts.Navigator#getUnionExtremes\n             */\n            Navigator.prototype.getUnionExtremes = function (returnFalseOnNoBaseSeries) {\n                var baseAxis = this.chart.xAxis[0], navAxis = this.xAxis, navAxisOptions = navAxis.options, baseAxisOptions = baseAxis.options;\n                var ret;\n                if (!returnFalseOnNoBaseSeries || baseAxis.dataMin !== null) {\n                    ret = {\n                        dataMin: pick(// #4053\n                        navAxisOptions && navAxisOptions.min, numExt('min', baseAxisOptions.min, baseAxis.dataMin, navAxis.dataMin, navAxis.min)),\n                        dataMax: pick(navAxisOptions && navAxisOptions.max, numExt('max', baseAxisOptions.max, baseAxis.dataMax, navAxis.dataMax, navAxis.max))\n                    };\n                }\n                return ret;\n            };\n            /**\n             * Set the base series and update the navigator series from this. With a bit\n             * of modification we should be able to make this an API method to be called\n             * from the outside\n             *\n             * @private\n             * @function Highcharts.Navigator#setBaseSeries\n             * @param {Highcharts.SeriesOptionsType} [baseSeriesOptions]\n             *        Additional series options for a navigator\n             * @param {boolean} [redraw]\n             *        Whether to redraw after update.\n             */\n            Navigator.prototype.setBaseSeries = function (baseSeriesOptions, redraw) {\n                var chart = this.chart, baseSeries = this.baseSeries = [];\n                baseSeriesOptions = (baseSeriesOptions ||\n                    chart.options && chart.options.navigator.baseSeries ||\n                    (chart.series.length ?\n                        // Find the first non-navigator series (#8430)\n                        find(chart.series, function (s) { return (!s.options.isInternal); }).index :\n                        0));\n                // Iterate through series and add the ones that should be shown in\n                // navigator.\n                (chart.series || []).forEach(function (series, i) {\n                    if (\n                    // Don't include existing nav series\n                    !series.options.isInternal &&\n                        (series.options.showInNavigator ||\n                            (i === baseSeriesOptions ||\n                                series.options.id === baseSeriesOptions) &&\n                                series.options.showInNavigator !== false)) {\n                        baseSeries.push(series);\n                    }\n                });\n                // When run after render, this.xAxis already exists\n                if (this.xAxis && !this.xAxis.navigatorAxis.fake) {\n                    this.updateNavigatorSeries(true, redraw);\n                }\n            };\n            /**\n             * Update series in the navigator from baseSeries, adding new if does not\n             * exist.\n             *\n             * @private\n             * @function Highcharts.Navigator.updateNavigatorSeries\n             */\n            Navigator.prototype.updateNavigatorSeries = function (addEvents, redraw) {\n                var _a, _b;\n                var navigator = this, chart = navigator.chart, baseSeries = navigator.baseSeries, navSeriesMixin = {\n                    enableMouseTracking: false,\n                    index: null, // #6162\n                    linkedTo: null, // #6734\n                    group: 'nav', // For columns\n                    padXAxis: false,\n                    xAxis: (_a = this.navigatorOptions.xAxis) === null || _a === void 0 ? void 0 : _a.id,\n                    yAxis: (_b = this.navigatorOptions.yAxis) === null || _b === void 0 ? void 0 : _b.id,\n                    showInLegend: false,\n                    stacking: void 0, // #4823\n                    isInternal: true,\n                    states: {\n                        inactive: {\n                            opacity: 1\n                        }\n                    }\n                }, \n                // Remove navigator series that are no longer in the baseSeries\n                navigatorSeries = navigator.series =\n                    (navigator.series || []).filter(function (navSeries) {\n                        var base = navSeries.baseSeries;\n                        if (baseSeries.indexOf(base) < 0) { // Not in array\n                            // If there is still a base series connected to this\n                            // series, remove event handler and reference.\n                            if (base) {\n                                removeEvent(base, 'updatedData', navigator.updatedDataHandler);\n                                delete base.navigatorSeries;\n                            }\n                            // Kill the nav series. It may already have been\n                            // destroyed (#8715).\n                            if (navSeries.chart) {\n                                navSeries.destroy();\n                            }\n                            return false;\n                        }\n                        return true;\n                    });\n                var baseOptions, mergedNavSeriesOptions, chartNavigatorSeriesOptions = navigator.navigatorOptions.series, baseNavigatorOptions;\n                // Go through each base series and merge the options to create new\n                // series\n                if (baseSeries && baseSeries.length) {\n                    baseSeries.forEach(function (base) {\n                        var linkedNavSeries = base.navigatorSeries, userNavOptions = extend(\n                        // Grab color and visibility from base as default\n                        {\n                            color: base.color,\n                            visible: base.visible\n                        }, !isArray(chartNavigatorSeriesOptions) ?\n                            chartNavigatorSeriesOptions :\n                            defaultOptions.navigator.series);\n                        // Don't update if the series exists in nav and we have disabled\n                        // adaptToUpdatedData.\n                        if (linkedNavSeries &&\n                            navigator.navigatorOptions.adaptToUpdatedData === false) {\n                            return;\n                        }\n                        navSeriesMixin.name = 'Navigator ' + baseSeries.length;\n                        baseOptions = base.options || {};\n                        baseNavigatorOptions = baseOptions.navigatorOptions || {};\n                        // The dataLabels options are not merged correctly\n                        // if the settings are an array, #13847.\n                        userNavOptions.dataLabels = splat(userNavOptions.dataLabels);\n                        mergedNavSeriesOptions = merge(baseOptions, navSeriesMixin, userNavOptions, baseNavigatorOptions);\n                        // Once nav series type is resolved, pick correct pointRange\n                        mergedNavSeriesOptions.pointRange = pick(\n                        // Stricte set pointRange in options\n                        userNavOptions.pointRange, baseNavigatorOptions.pointRange, \n                        // Fallback to default values, e.g. `null` for column\n                        defaultOptions.plotOptions[mergedNavSeriesOptions.type || 'line'].pointRange);\n                        // Merge data separately. Do a slice to avoid mutating the\n                        // navigator options from base series (#4923).\n                        var navigatorSeriesData = baseNavigatorOptions.data || userNavOptions.data;\n                        navigator.hasNavigatorData =\n                            navigator.hasNavigatorData || !!navigatorSeriesData;\n                        mergedNavSeriesOptions.data =\n                            navigatorSeriesData ||\n                                baseOptions.data && baseOptions.data.slice(0);\n                        // Update or add the series\n                        if (linkedNavSeries && linkedNavSeries.options) {\n                            linkedNavSeries.update(mergedNavSeriesOptions, redraw);\n                        }\n                        else {\n                            base.navigatorSeries = chart.initSeries(mergedNavSeriesOptions);\n                            // Set data on initial run with dataSorting enabled (#20318)\n                            chart.setSortedData();\n                            base.navigatorSeries.baseSeries = base; // Store ref\n                            navigatorSeries.push(base.navigatorSeries);\n                        }\n                    });\n                }\n                // If user has defined data (and no base series) or explicitly defined\n                // navigator.series as an array, we create these series on top of any\n                // base series.\n                if (chartNavigatorSeriesOptions.data &&\n                    !(baseSeries && baseSeries.length) ||\n                    isArray(chartNavigatorSeriesOptions)) {\n                    navigator.hasNavigatorData = false;\n                    // Allow navigator.series to be an array\n                    chartNavigatorSeriesOptions =\n                        splat(chartNavigatorSeriesOptions);\n                    chartNavigatorSeriesOptions.forEach(function (userSeriesOptions, i) {\n                        navSeriesMixin.name =\n                            'Navigator ' + (navigatorSeries.length + 1);\n                        mergedNavSeriesOptions = merge(defaultOptions.navigator.series, {\n                            // Since we don't have a base series to pull color from,\n                            // try to fake it by using color from series with same\n                            // index. Otherwise pull from the colors array. We need\n                            // an explicit color as otherwise updates will increment\n                            // color counter and we'll get a new color for each\n                            // update of the nav series.\n                            color: chart.series[i] &&\n                                !chart.series[i].options.isInternal &&\n                                chart.series[i].color ||\n                                chart.options.colors[i] ||\n                                chart.options.colors[0]\n                        }, navSeriesMixin, userSeriesOptions);\n                        mergedNavSeriesOptions.data = userSeriesOptions.data;\n                        if (mergedNavSeriesOptions.data) {\n                            navigator.hasNavigatorData = true;\n                            navigatorSeries.push(chart.initSeries(mergedNavSeriesOptions));\n                        }\n                    });\n                }\n                if (addEvents) {\n                    this.addBaseSeriesEvents();\n                }\n            };\n            /**\n             * Add data events.\n             * For example when main series is updated we need to recalculate extremes\n             *\n             * @private\n             * @function Highcharts.Navigator#addBaseSeriesEvent\n             */\n            Navigator.prototype.addBaseSeriesEvents = function () {\n                var _this = this;\n                var navigator = this, baseSeries = navigator.baseSeries || [];\n                // Bind modified extremes event to first base's xAxis only.\n                // In event of > 1 base-xAxes, the navigator will ignore those.\n                // Adding this multiple times to the same axis is no problem, as\n                // duplicates should be discarded by the browser.\n                if (baseSeries[0] && baseSeries[0].xAxis) {\n                    baseSeries[0].eventsToUnbind.push(addEvent(baseSeries[0].xAxis, 'foundExtremes', this.modifyBaseAxisExtremes));\n                }\n                baseSeries.forEach(function (base) {\n                    // Link base series show/hide to navigator series visibility\n                    base.eventsToUnbind.push(addEvent(base, 'show', function () {\n                        if (this.navigatorSeries) {\n                            this.navigatorSeries.setVisible(true, false);\n                        }\n                    }));\n                    base.eventsToUnbind.push(addEvent(base, 'hide', function () {\n                        if (this.navigatorSeries) {\n                            this.navigatorSeries.setVisible(false, false);\n                        }\n                    }));\n                    // Respond to updated data in the base series, unless explicitly\n                    // not adapting to data changes.\n                    if (_this.navigatorOptions.adaptToUpdatedData !== false) {\n                        if (base.xAxis) {\n                            base.eventsToUnbind.push(addEvent(base, 'updatedData', _this.updatedDataHandler));\n                        }\n                    }\n                    // Handle series removal\n                    base.eventsToUnbind.push(addEvent(base, 'remove', function () {\n                        if (baseSeries) {\n                            erase(baseSeries, base); // #21043\n                        }\n                        if (this.navigatorSeries) {\n                            erase(navigator.series, this.navigatorSeries);\n                            if (defined(this.navigatorSeries.options)) {\n                                this.navigatorSeries.remove(false);\n                            }\n                            delete this.navigatorSeries;\n                        }\n                    }));\n                });\n            };\n            /**\n             * Get minimum from all base series connected to the navigator\n             * @private\n             * @param {number} currentSeriesMin\n             *        Minium from the current series\n             * @return {number}\n             *         Minimum from all series\n             */\n            Navigator.prototype.getBaseSeriesMin = function (currentSeriesMin) {\n                return this.baseSeries.reduce(function (min, series) {\n                    // (#10193)\n                    return Math.min(min, series.xData && series.xData.length ?\n                        series.xData[0] : min);\n                }, currentSeriesMin);\n            };\n            /**\n             * Set the navigator x axis extremes to reflect the total. The navigator\n             * extremes should always be the extremes of the union of all series in the\n             * chart as well as the navigator series.\n             *\n             * @private\n             * @function Highcharts.Navigator#modifyNavigatorAxisExtremes\n             */\n            Navigator.prototype.modifyNavigatorAxisExtremes = function () {\n                var xAxis = this.xAxis;\n                if (typeof xAxis.getExtremes !== 'undefined') {\n                    var unionExtremes = this.getUnionExtremes(true);\n                    if (unionExtremes &&\n                        (unionExtremes.dataMin !== xAxis.min ||\n                            unionExtremes.dataMax !== xAxis.max)) {\n                        xAxis.min = unionExtremes.dataMin;\n                        xAxis.max = unionExtremes.dataMax;\n                    }\n                }\n            };\n            /**\n             * Hook to modify the base axis extremes with information from the Navigator\n             *\n             * @private\n             * @function Highcharts.Navigator#modifyBaseAxisExtremes\n             */\n            Navigator.prototype.modifyBaseAxisExtremes = function () {\n                var _a;\n                var baseXAxis = this, navigator = baseXAxis.chart.navigator, baseExtremes = baseXAxis.getExtremes(), baseMin = baseExtremes.min, baseMax = baseExtremes.max, baseDataMin = baseExtremes.dataMin, baseDataMax = baseExtremes.dataMax, range = baseMax - baseMin, stickToMin = navigator.stickToMin, stickToMax = navigator.stickToMax, overscroll = pick((_a = baseXAxis.ordinal) === null || _a === void 0 ? void 0 : _a.convertOverscroll(baseXAxis.options.overscroll), 0), navigatorSeries = navigator.series && navigator.series[0], hasSetExtremes = !!baseXAxis.setExtremes, \n                // When the extremes have been set by range selector button, don't\n                // stick to min or max. The range selector buttons will handle the\n                // extremes. (#5489)\n                unmutable = baseXAxis.eventArgs &&\n                    baseXAxis.eventArgs.trigger === 'rangeSelectorButton';\n                var newMax, newMin;\n                if (!unmutable) {\n                    // If the zoomed range is already at the min, move it to the right\n                    // as new data comes in\n                    if (stickToMin) {\n                        newMin = baseDataMin;\n                        newMax = newMin + range;\n                    }\n                    // If the zoomed range is already at the max, move it to the right\n                    // as new data comes in\n                    if (stickToMax) {\n                        newMax = baseDataMax + overscroll;\n                        // If stickToMin is true, the new min value is set above\n                        if (!stickToMin) {\n                            newMin = Math.max(baseDataMin, // Don't go below data extremes (#13184)\n                            newMax - range, navigator.getBaseSeriesMin(navigatorSeries && navigatorSeries.xData ?\n                                navigatorSeries.xData[0] :\n                                -Number.MAX_VALUE));\n                        }\n                    }\n                    // Update the extremes\n                    if (hasSetExtremes && (stickToMin || stickToMax)) {\n                        if (isNumber(newMin)) {\n                            baseXAxis.min = baseXAxis.userMin = newMin;\n                            baseXAxis.max = baseXAxis.userMax = newMax;\n                        }\n                    }\n                }\n                // Reset\n                navigator.stickToMin =\n                    navigator.stickToMax = null;\n            };\n            /**\n             * Handler for updated data on the base series. When data is modified, the\n             * navigator series must reflect it. This is called from the Chart.redraw\n             * function before axis and series extremes are computed.\n             *\n             * @private\n             * @function Highcharts.Navigator#updateDataHandler\n             */\n            Navigator.prototype.updatedDataHandler = function () {\n                var navigator = this.chart.navigator, baseSeries = this, navigatorSeries = this.navigatorSeries, shouldStickToMax = navigator.reversedExtremes ?\n                    Math.round(navigator.zoomedMin) === 0 :\n                    Math.round(navigator.zoomedMax) >= Math.round(navigator.size);\n                // If the scrollbar is scrolled all the way to the right, keep right as\n                // new data comes in, unless user set navigator.stickToMax to false.\n                navigator.stickToMax = pick(this.chart.options.navigator &&\n                    this.chart.options.navigator.stickToMax, shouldStickToMax);\n                navigator.stickToMin = navigator.shouldStickToMin(baseSeries, navigator);\n                // Set the navigator series data to the new data of the base series\n                if (navigatorSeries && !navigator.hasNavigatorData) {\n                    navigatorSeries.options.pointStart = baseSeries.xData[0];\n                    navigatorSeries.setData(baseSeries.options.data, false, null, false); // #5414\n                }\n            };\n            /**\n             * Detect if the zoomed area should stick to the minimum, #14742.\n             *\n             * @private\n             * @function Highcharts.Navigator#shouldStickToMin\n             */\n            Navigator.prototype.shouldStickToMin = function (baseSeries, navigator) {\n                var xDataMin = navigator.getBaseSeriesMin(baseSeries.xData[0]), xAxis = baseSeries.xAxis, max = xAxis.max, min = xAxis.min, range = xAxis.options.range;\n                var stickToMin = true;\n                if (isNumber(max) && isNumber(min)) {\n                    // If range declared, stick to the minimum only if the range\n                    // is smaller than the data set range.\n                    if (range && max - xDataMin > 0) {\n                        stickToMin = max - xDataMin < range;\n                    }\n                    else {\n                        // If the current axis minimum falls outside the new\n                        // updated dataset, we must adjust.\n                        stickToMin = min <= xDataMin;\n                    }\n                }\n                else {\n                    stickToMin = false; // #15864\n                }\n                return stickToMin;\n            };\n            /**\n             * Add chart events, like redrawing navigator, when chart requires that.\n             *\n             * @private\n             * @function Highcharts.Navigator#addChartEvents\n             */\n            Navigator.prototype.addChartEvents = function () {\n                if (!this.eventsToUnbind) {\n                    this.eventsToUnbind = [];\n                }\n                this.eventsToUnbind.push(\n                // Move the scrollbar after redraw, like after data updata even if\n                // axes don't redraw\n                addEvent(this.chart, 'redraw', function () {\n                    var navigator = this.navigator, xAxis = navigator && (navigator.baseSeries &&\n                        navigator.baseSeries[0] &&\n                        navigator.baseSeries[0].xAxis ||\n                        this.xAxis[0]); // #5709, #13114\n                    if (xAxis) {\n                        navigator.render(xAxis.min, xAxis.max);\n                    }\n                }), \n                // Make room for the navigator, can be placed around the chart:\n                addEvent(this.chart, 'getMargins', function () {\n                    var chart = this, navigator = chart.navigator;\n                    var marginName = navigator.opposite ?\n                        'plotTop' : 'marginBottom';\n                    if (chart.inverted) {\n                        marginName = navigator.opposite ?\n                            'marginRight' : 'plotLeft';\n                    }\n                    chart[marginName] =\n                        (chart[marginName] || 0) + (navigator.navigatorEnabled || !chart.inverted ?\n                            navigator.height + navigator.scrollbarHeight :\n                            0) + navigator.navigatorOptions.margin;\n                }), addEvent(Navigator, 'setRange', function (e) {\n                    this.chart.xAxis[0].setExtremes(e.min, e.max, e.redraw, e.animation, e.eventArguments);\n                }));\n            };\n            /**\n             * Destroys allocated elements.\n             *\n             * @private\n             * @function Highcharts.Navigator#destroy\n             */\n            Navigator.prototype.destroy = function () {\n                var _this = this;\n                // Disconnect events added in addEvents\n                this.removeEvents();\n                if (this.xAxis) {\n                    erase(this.chart.xAxis, this.xAxis);\n                    erase(this.chart.axes, this.xAxis);\n                }\n                if (this.yAxis) {\n                    erase(this.chart.yAxis, this.yAxis);\n                    erase(this.chart.axes, this.yAxis);\n                }\n                // Destroy series\n                (this.series || []).forEach(function (s) {\n                    if (s.destroy) {\n                        s.destroy();\n                    }\n                });\n                // Destroy properties\n                [\n                    'series', 'xAxis', 'yAxis', 'shades', 'outline', 'scrollbarTrack',\n                    'scrollbarRifles', 'scrollbarGroup', 'scrollbar', 'navigatorGroup',\n                    'rendered'\n                ].forEach(function (prop) {\n                    if (_this[prop] && _this[prop].destroy) {\n                        _this[prop].destroy();\n                    }\n                    _this[prop] = null;\n                });\n                // Destroy elements in collection\n                [this.handles].forEach(function (coll) {\n                    destroyObjectProperties(coll);\n                });\n                this.navigatorEnabled = false;\n            };\n            return Navigator;\n        }());\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return Navigator;\n    });\n    _registerModule(_modules, 'Stock/Navigator/StandaloneNavigatorDefaults.js', [], function () {\n        /* *\n         *\n         *  (c) 2010-2024 Mateusz Bernacik\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        var standaloneNavigatorDefaults = {\n            chart: {\n                height: 70,\n                margin: [0, 5, 0, 5]\n            },\n            exporting: {\n                enabled: false\n            },\n            legend: {\n                enabled: false\n            },\n            navigator: {\n                enabled: false\n            },\n            plotOptions: {\n                series: {\n                    states: {\n                        hover: {\n                            enabled: false\n                        }\n                    },\n                    marker: {\n                        enabled: false\n                    }\n                }\n            },\n            scrollbar: {\n                enabled: false\n            },\n            title: {\n                text: ''\n            },\n            tooltip: {\n                enabled: false\n            },\n            xAxis: {\n                visible: false\n            },\n            yAxis: {\n                height: 0,\n                visible: false\n            }\n        };\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return standaloneNavigatorDefaults;\n    });\n    _registerModule(_modules, 'Stock/Navigator/StandaloneNavigator.js', [_modules['Core/Chart/Chart.js'], _modules['Stock/Navigator/Navigator.js'], _modules['Core/Globals.js'], _modules['Core/Utilities.js'], _modules['Core/Axis/Axis.js'], _modules['Stock/Navigator/StandaloneNavigatorDefaults.js']], function (Chart, Navigator, G, U, Axis, standaloneNavigatorDefaults) {\n        /* *\n         *\n         *  (c) 2010-2024 Mateusz Bernacik\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var merge = U.merge, addEvent = U.addEvent, fireEvent = U.fireEvent, pick = U.pick;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The StandaloneNavigator class. The StandaloneNavigator class allows for\n         * creating a standalone navigator component that synchronizes the extremes\n         * across multiple bound charts.\n         *\n         * @class\n         * @name Highcharts.StandaloneNavigator\n         *\n         * @param {string|Highcharts.HTMLDOMElement} [renderTo]\n         * The DOM element to render to, or its id.\n         *\n         * @param {StandaloneNavigatorOptions} userOptions\n         * The standalone navigator options.\n         */\n        var StandaloneNavigator = /** @class */ (function () {\n            /* *\n             *\n             *  Constructor\n             *\n             * */\n            function StandaloneNavigator(element, userOptions) {\n                this.boundAxes = [];\n                this.userOptions = userOptions;\n                this.chartOptions = merge(G.getOptions(), standaloneNavigatorDefaults, { navigator: userOptions });\n                var chart = new Chart(element, this.chartOptions);\n                chart.options = merge(chart.options, { navigator: { enabled: true }, scrollbar: { enabled: true } });\n                if (this.chartOptions.navigator && this.chartOptions.scrollbar) {\n                    this.chartOptions.navigator.enabled = true;\n                    this.chartOptions.scrollbar.enabled = true;\n                }\n                this.navigator = new Navigator(chart);\n                chart.navigator = this.navigator;\n                this.initNavigator();\n            }\n            /* *\n             *\n             *  Static Functions\n             *\n             * */\n            /**\n             * Factory function for standalone navigator.\n             *\n             * @function Highcharts.navigator\n             *\n             * @param {string|Highcharts.HTMLDOMElement} [renderTo]\n             * The DOM element to render to, or its id.\n             *\n             * @param {StandaloneNavigatorOptions} options\n             * The standalone navigator options with chart-like structure.\n             *\n             * Returns the navigator object.\n             */\n            StandaloneNavigator.navigator = function (renderTo, options) {\n                var nav = new StandaloneNavigator(renderTo, options);\n                if (!G.navigators) {\n                    G.navigators = [nav];\n                }\n                else {\n                    G.navigators.push(nav);\n                }\n                return nav;\n            };\n            /**\n             * Binds an axis to the standalone navigator,\n             * allowing the navigator to control the axis' range.\n             *\n             * @sample stock/standalone-navigator/bind/\n             *         Bind chart with a button\n             *\n             * @function Highcharts.StandaloneNavigator#bind\n             *\n             * @param {Axis | Chart} axisOrChart\n             *        The Axis or Chart to bind to the navigator.\n             *\n             * @param {boolean} [twoWay=true]\n             *        Enables two-way binding between the navigator and the axis/chart.\n             *        When true, changes in the navigator's range will update the axis\n             *        and vice versa. When false, changes in the navigator's range will\n             *        be reflected in the axis, but changes in the axis ranges won't be\n             *        reflected on the navigator.\n             */\n            StandaloneNavigator.prototype.bind = function (axisOrChart, twoWay) {\n                var _this = this;\n                if (twoWay === void 0) { twoWay = true; }\n                var nav = this;\n                // If the chart is passed, bind the first xAxis\n                var axis = (axisOrChart instanceof Chart) ?\n                    axisOrChart.xAxis[0] :\n                    axisOrChart;\n                if (!(axis instanceof Axis)) {\n                    return;\n                }\n                var _a = this.navigator.xAxis, min = _a.min, max = _a.max, removeEventCallbacks = [];\n                if (twoWay) {\n                    var removeSetExtremesEvent = addEvent(axis, 'setExtremes', function (e) {\n                        if (e.trigger === 'pan' ||\n                            e.trigger === 'zoom' ||\n                            e.trigger === 'mouseWheelZoom') {\n                            nav.setRange(e.min, e.max, true, e.trigger !== 'pan', { trigger: axis });\n                        }\n                    });\n                    removeEventCallbacks.push(removeSetExtremesEvent);\n                }\n                var removeSetRangeEvent = addEvent(this.navigator, 'setRange', function (e) {\n                    axis.setExtremes(e.min, e.max, e.redraw, e.animation);\n                });\n                removeEventCallbacks.push(removeSetRangeEvent);\n                var boundAxis = this.boundAxes.filter(function (boundAxis) {\n                    return boundAxis.axis === axis;\n                })[0];\n                if (!boundAxis) {\n                    boundAxis = { axis: axis, callbacks: [] };\n                    this.boundAxes.push(boundAxis);\n                }\n                boundAxis.callbacks = removeEventCallbacks;\n                // Show axis' series in navigator based on showInNavigator property\n                axis.series.forEach(function (series) {\n                    if (series.options.showInNavigator) {\n                        nav.addSeries(series.options);\n                    }\n                });\n                // Set extremes to match the navigator's extremes\n                axis.setExtremes(min, max);\n                // Unbind the axis before it's destroyed\n                addEvent(axis, 'destroy', function (e) {\n                    if (!e.keepEvents) {\n                        _this.unbind(axis);\n                    }\n                });\n            };\n            /**\n             * Unbinds a single axis or all bound axes from the standalone navigator.\n             *\n             * @sample stock/standalone-navigator/unbind/\n             *         Unbind chart with a button\n             *\n             * @function Highcharts.StandaloneNavigator#unbind\n             *\n             * @param {Chart | Axis | undefined} axisOrChart\n             *        Passing a Chart object unbinds the first X axis of the chart,\n             *        an Axis object unbinds that specific axis,\n             *        and undefined unbinds all axes bound to the navigator.\n             */\n            StandaloneNavigator.prototype.unbind = function (axisOrChart) {\n                // If no axis or chart is provided, unbind all bound axes\n                if (!axisOrChart) {\n                    this.boundAxes.forEach(function (_a) {\n                        var callbacks = _a.callbacks;\n                        callbacks.forEach(function (removeCallback) { return removeCallback(); });\n                    });\n                    this.boundAxes.length = 0;\n                    return;\n                }\n                var axis = (axisOrChart instanceof Axis) ?\n                    axisOrChart :\n                    axisOrChart.xAxis[0];\n                for (var i = this.boundAxes.length - 1; i >= 0; i--) {\n                    if (this.boundAxes[i].axis === axis) {\n                        this.boundAxes[i].callbacks.forEach(function (callback) { return callback(); });\n                        this.boundAxes.splice(i, 1);\n                    }\n                }\n            };\n            /**\n             * Destroys allocated standalone navigator elements.\n             *\n             * @function Highcharts.StandaloneNavigator#destroy\n             */\n            StandaloneNavigator.prototype.destroy = function () {\n                // Disconnect events\n                this.boundAxes.forEach(function (_a) {\n                    var callbacks = _a.callbacks;\n                    callbacks.forEach(function (removeCallback) { return removeCallback(); });\n                });\n                this.boundAxes.length = 0;\n                this.navigator.destroy();\n                this.navigator.chart.destroy();\n            };\n            /**\n             * Updates the standalone navigator's options with a new set of user\n             * options.\n             *\n             * @sample stock/standalone-navigator/update/\n             *         Bind chart with a button\n             *\n             * @function Highcharts.StandaloneNavigator#update\n             *\n             * @param  {StandaloneNavigatorOptions} newOptions\n             *         Updates the standalone navigator's options with new user options.\n             *\n             * @param  {boolean | undefined} redraw\n             *         Whether to redraw the standalone navigator. By default, if not\n             *         specified, the standalone navigator will be redrawn.\n             */\n            StandaloneNavigator.prototype.update = function (newOptions, redraw) {\n                this.chartOptions = merge(this.chartOptions, { navigator: newOptions });\n                this.navigator.chart.update(this.chartOptions, redraw);\n            };\n            /**\n             * Redraws the standalone navigator.\n             *\n             * @function Highcharts.StandaloneNavigator#redraw\n             */\n            StandaloneNavigator.prototype.redraw = function () {\n                this.navigator.chart.redraw();\n            };\n            /**\n             * Adds a series to the standalone navigator.\n             *\n             * @private\n             *\n             * @param {SeriesOptions} seriesOptions\n             *        Options for the series to be added to the navigator.\n             */\n            StandaloneNavigator.prototype.addSeries = function (seriesOptions) {\n                this.navigator.chart.addSeries(merge(seriesOptions, { showInNavigator: pick(seriesOptions.showInNavigator, true) }));\n                this.navigator.setBaseSeries();\n            };\n            /**\n             * Initialize the standalone navigator.\n             *\n             * @private\n             */\n            StandaloneNavigator.prototype.initNavigator = function () {\n                var _a;\n                var nav = this.navigator;\n                nav.top = 1;\n                nav.xAxis.setScale();\n                nav.yAxis.setScale();\n                nav.xAxis.render();\n                nav.yAxis.render();\n                (_a = nav.series) === null || _a === void 0 ? void 0 : _a.forEach(function (s) {\n                    s.translate();\n                    s.render();\n                    s.redraw();\n                });\n                var _b = this.getInitialExtremes(), min = _b.min, max = _b.max;\n                nav.chart.xAxis[0].userMin = min;\n                nav.chart.xAxis[0].userMax = max;\n                nav.render(min, max);\n            };\n            /**\n             * Get the current range of the standalone navigator.\n             *\n             * @sample stock/standalone-navigator/getrange/\n             *         Report the standalone navigator's range by clicking on a button\n             *\n             * @function Highcharts.StandaloneNavigator#getRange\n             *\n             * @return {Highcharts.ExtremesObject}\n             *         The current range of the standalone navigator.\n             */\n            StandaloneNavigator.prototype.getRange = function () {\n                var _a = this.navigator.chart.xAxis[0].getExtremes(), min = _a.min, max = _a.max, _b = this.navigator.xAxis.getExtremes(), userMin = _b.userMin, userMax = _b.userMax, dataMin = _b.min, dataMax = _b.max;\n                return {\n                    min: pick(min, dataMin),\n                    max: pick(max, dataMax),\n                    dataMin: dataMin,\n                    dataMax: dataMax,\n                    userMin: userMin,\n                    userMax: userMax\n                };\n            };\n            /**\n             * Set the range of the standalone navigator.\n             *\n             * @sample stock/standalone-navigator/setrange/\n             *         Set range from a button\n             *\n             * @function Highcharts.StandaloneNavigator#setRange\n             *\n             * @param {number | undefined} min\n             *        The new minimum value.\n             *\n             * @param {number | undefined} max\n             *        The new maximum value.\n             *\n             * @emits Highcharts.StandaloneNavigator#event:setRange\n             */\n            StandaloneNavigator.prototype.setRange = function (min, max, redraw, animation, eventArguments) {\n                fireEvent(this.navigator, 'setRange', {\n                    min: min,\n                    max: max,\n                    redraw: redraw,\n                    animation: animation,\n                    eventArguments: merge(eventArguments, { trigger: 'navigator' })\n                });\n            };\n            /**\n             * Get the initial, options based extremes for the standalone navigator.\n             *\n             * @private\n             *\n             * @return {{ min: number, max: number }}\n             *         The initial minimum and maximum extremes values.\n             */\n            StandaloneNavigator.prototype.getInitialExtremes = function () {\n                var _a = this.navigator.xAxis.getExtremes(), min = _a.min, max = _a.max;\n                return {\n                    min: min,\n                    max: max\n                };\n            };\n            return StandaloneNavigator;\n        }());\n        /* *\n         *\n         *  API Declarations\n         *\n         * */\n        /**\n         * Standalone Navigator options.\n         *\n         * @interface Highcharts.StandaloneNavigatorOptions\n         */ /**\n        */\n        ''; // Detach doclets above\n\n        return StandaloneNavigator;\n    });\n    _registerModule(_modules, 'masters/modules/navigator.src.js', [_modules['Core/Globals.js'], _modules['Stock/Navigator/StandaloneNavigator.js'], _modules['Stock/Navigator/NavigatorComposition.js']], function (Highcharts, StandaloneNavigator, NavigatorComposition) {\n\n        var G = Highcharts;\n        G.StandaloneNavigator = G.StandaloneNavigator || StandaloneNavigator;\n        G.navigator = G.StandaloneNavigator.navigator;\n        NavigatorComposition.compose(G.Chart, G.Axis, G.Series);\n\n        return Highcharts;\n    });\n}));\n"],"names":["factory","module","exports","define","amd","Highcharts","undefined","_modules","_registerModule","obj","path","args","fn","hasOwnProperty","apply","CustomEvent","win","dispatchEvent","detail","H","U","NavigatorConstructor","isTouchDevice","addEvent","merge","pick","composedMembers","onChartAfterAddSeries","navigator","setBaseSeries","onChartAfterSetChartSize","_a","legendOptions","xAxis","yAxis","legend","options","scrollbarHeight","scrollButtonSize","inverted","left","opposite","chartWidth","height","spacing","top","plotTop","plotLeft","navigatorOptions","chartHeight","scrollbar","margin","rangeSelector","extraBottomMargin","getHeight","verticalAlign","layout","enabled","floating","legendHeight","titleOffset","setAxisSize","onChartAfterUpdate","event","scroller","redraw","animation","onChartBeforeRender","onChartBeforeShowResetZoom","chartOptions","zooming","type","pinchType","onChartCallback","chart","extremes","getExtremes","render","min","max","onChartUpdate","e","scrollbarOptions","compose","ChartClass","NavigatorClass","pushUnique","chartProto","prototype","callbacks","push","correctFloat","defined","isNumber","onAxisInit","axis","navigatorAxis","NavigatorAxisAdditions","onAxisSetExtremes","zoomed","zoomType","isXAxis","trigger","range","previousZoom","preventDefault","AxisClass","keepProps","includes","destroy","toFixedRange","pxMin","pxMax","fixedMin","fixedMax","halfPointRange","pointRange","newMin","translate","horiz","newMax","Color","SeriesRegistry","color","parse","seriesTypes","maskInside","handles","width","borderRadius","symbols","lineWidth","backgroundColor","borderColor","maskFill","setOpacity","get","outlineColor","outlineWidth","series","areaspline","fillOpacity","compare","sonification","dataGrouping","approximation","groupPixelWidth","firstAnchor","anchor","lastAnchor","units","dataLabels","zIndex","id","className","lineColor","marker","threshold","tickLength","gridLineColor","gridLineWidth","tickPixelInterval","labels","align","style","fontSize","opacity","textOutline","x","y","crosshair","startOnTick","endOnTick","minPadding","maxPadding","title","text","tickWidth","rect","__spreadArray","to","from","pack","arguments","length","ar","i","l","Array","slice","call","concat","relativeLength","_x","_y","halfWidth","r","Math","markerPosition","setFixedRange","dataMax","dataMin","fixedRange","D","NavigatorDefaults","NavigatorSymbols","RendererRegistry","StockUtilities","setOptions","composed","getRendererType","extend","onSeriesAfterUpdate","isInternal","SeriesClass","ScrollbarAxis","Scrollbar","axisMin","axisMax","scrollMin","Infinity","scrollMax","onAxisAfterGetOffset","index","scrollbarsOffsets","axisOffset","size","onAxisAfterInit","vertical","renderer","unitedMin","unitedMax","reversed","shouldUpdateExtremes","DOMType","animate","setExtremes","setRange","onAxisAfterRender","offsetsIndex","offset","axisTitleMargin","axisMargin","position","xPosition","isNaN","ScrollbarClass","barBorderRadius","buttonBorderRadius","buttonsEnabled","liveRedraw","minWidth","step","barBackgroundColor","barBorderWidth","barBorderColor","buttonArrowColor","buttonBackgroundColor","buttonBorderColor","buttonBorderWidth","rifleColor","trackBackgroundColor","trackBorderColor","trackBorderRadius","trackBorderWidth","ScrollbarDefaults","defaultOptions","crisp","destroyObjectProperties","fireEvent","removeEvent","_events","chartX","chartY","scrollbarButtons","scrollbarLeft","scrollbarStrokeWidth","scrollbarTop","init","swapXY","forEach","seg","temp","len","addEvents","buttonsOrder","buttons","bar","scrollbarGroup","element","track","mouseDownHandler","bind","mouseMoveHandler","mouseUpHandler","buttonToMinClick","buttonToMaxClick","trackClick","ownerDocument","updatePosition","DOMEvent","cursorToScrollbarPosition","normalizedEvent","minWidthDifference","calculatedWidth","xOffset","barWidth","yOffset","removeEvents","prop","drawScrollbarButton","group","g","add","addClass","styledMode","attr","stroke","fill","strokeWidth","arrow","userOptions","pointer","normalize","mousePosition","initPositions","grabbedCenter","change","direction","touches","chartPosition","hasDragged","method","rendered","show","translateX","translateY","hide","scrollbarRifles","fromPX","newSize","fullWidth","toPX","ceil","newPos","floor","newRiflesPos","showFull","eventType","svg","boosted","update","Axis","ChartNavigatorComposition","NavigatorComposition","SVGRenderer","__assign","Object","assign","t","s","n","p","clamp","erase","find","isArray","splat","numExt","extreme","_i","numbers","filter","Navigator","isDirty","drawHandle","verb","round","parseInt","drawOutline","zoomedMin","zoomedMax","verticalMin","outline","halfOutline","outlineCorrection","navigatorSize","navigatorTop","lineTop","lineBtm","d","drawMasks","navigatorHeight","shades","shade","renderElements","_b","mouseCursor","cursor","navigatorGroup","visibility","hasMask","css","handlesOptions_1","height_1","width_1","symbolName","symbolFn","symbol","rotation","rotationOriginX","rotationOriginY","_c","_d","_this","invertedUpdate","setOpposite","navigatorEnabled","adaptToUpdatedData","baseSeries","updatedDataHandler","eventsToUnbind","offsets","getXAxisOffsets","navigatorWidth","scrollbarXAxis","fake","minRange","maxRange","plotWidth","plotHeight","toPixels","abs","toValue","currentRange","grabbedLeft","grabbedRight","fixedWidth","addMouseEvents","container","onMouseMove","onMouseUp","getPartsEvents","renderTo","modifyNavigatorAxisExtremes","eventName","events","name","navigatorItem","shadesMousedown","ext","navigatorPosition","dragOffset","reversedExtremes","getUnionExtremes","eventArguments","handlesMousedown","baseXAxis","reverse","otherHandlePos","fixedExtreme","pageX","setTimeout","unionExtremes","triggerOp","keys","unbind","removeBaseSeriesEvents","modifyBaseAxisExtremes","scrollbarEnabled","xAxisIndex","yAxisIndex","baseXaxis","isDirtyBox","breaks","ordinal","overscroll","keepOrdinalPadding","zoomEnabled","alignTicks","data","updateNavigatorSeries","unbindRedraw","value","scrollTrackWidth","valueRange","addBaseSeriesEvents","addChartEvents","Boolean","returnFalseOnNoBaseSeries","ret","baseAxis","navAxis","navAxisOptions","baseAxisOptions","baseSeriesOptions","showInNavigator","baseOptions","mergedNavSeriesOptions","baseNavigatorOptions","navSeriesMixin","enableMouseTracking","linkedTo","padXAxis","showInLegend","stacking","states","inactive","navigatorSeries","navSeries","base","indexOf","chartNavigatorSeriesOptions","linkedNavSeries","userNavOptions","visible","plotOptions","navigatorSeriesData","hasNavigatorData","initSeries","setSortedData","userSeriesOptions","colors","setVisible","remove","getBaseSeriesMin","currentSeriesMin","reduce","xData","baseExtremes","baseMin","baseMax","baseDataMin","baseDataMax","stickToMin","stickToMax","convertOverscroll","hasSetExtremes","eventArgs","Number","MAX_VALUE","userMin","userMax","shouldStickToMax","shouldStickToMin","pointStart","setData","xDataMin","marginName","axes","coll","exporting","hover","tooltip","Chart","G","standaloneNavigatorDefaults","StandaloneNavigator","boundAxes","getOptions","initNavigator","nav","navigators","axisOrChart","twoWay","removeEventCallbacks","removeSetExtremesEvent","removeSetRangeEvent","boundAxis","addSeries","keepEvents","removeCallback","callback","splice","newOptions","seriesOptions","setScale","getInitialExtremes","getRange","Series"],"mappings":"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"}