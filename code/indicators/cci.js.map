{"version":3,"sources":["<anon>"],"sourcesContent":["/**\n * @license Highstock JS v11.4.7 (2024-08-14)\n *\n * Indicator series type for Highcharts Stock\n *\n * (c) 2010-2024 Sebastian Bochan\n *\n * License: www.highcharts.com/license\n */\n(function (factory) {\n    if (typeof module === 'object' && module.exports) {\n        factory['default'] = factory;\n        module.exports = factory;\n    } else if (typeof define === 'function' && define.amd) {\n        define('highcharts/indicators/cci', ['highcharts', 'highcharts/modules/stock'], function (Highcharts) {\n            factory(Highcharts);\n            factory.Highcharts = Highcharts;\n            return factory;\n        });\n    } else {\n        factory(typeof Highcharts !== 'undefined' ? Highcharts : undefined);\n    }\n}(function (Highcharts) {\n    'use strict';\n    var _modules = Highcharts ? Highcharts._modules : {};\n    function _registerModule(obj, path, args, fn) {\n        if (!obj.hasOwnProperty(path)) {\n            obj[path] = fn.apply(null, args);\n\n            if (typeof CustomEvent === 'function') {\n                Highcharts.win.dispatchEvent(new CustomEvent(\n                    'HighchartsModuleLoaded',\n                    { detail: { path: path, module: obj[path] } }\n                ));\n            }\n        }\n    }\n    _registerModule(_modules, 'Stock/Indicators/CCI/CCIIndicator.js', [_modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (SeriesRegistry, U) {\n        /* *\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         * */\n        const { sma: SMAIndicator } = SeriesRegistry.seriesTypes;\n        const { isArray, merge } = U;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        // Utils:\n        /**\n         * @private\n         */\n        function sumArray(array) {\n            return array.reduce(function (prev, cur) {\n                return prev + cur;\n            }, 0);\n        }\n        /**\n         * @private\n         */\n        function meanDeviation(arr, sma) {\n            const len = arr.length;\n            let sum = 0, i;\n            for (i = 0; i < len; i++) {\n                sum += Math.abs(sma - (arr[i]));\n            }\n            return sum;\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The CCI series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.cci\n         *\n         * @augments Highcharts.Series\n         */\n        class CCIIndicator extends SMAIndicator {\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            getValues(series, params) {\n                const period = params.period, xVal = series.xData, yVal = series.yData, yValLen = yVal ? yVal.length : 0, TP = [], CCI = [], xData = [], yData = [];\n                let CCIPoint, p, periodTP = [], len, range = 1, smaTP, TPtemp, meanDev, i;\n                // CCI requires close value\n                if (xVal.length <= period ||\n                    !isArray(yVal[0]) ||\n                    yVal[0].length !== 4) {\n                    return;\n                }\n                // Accumulate first N-points\n                while (range < period) {\n                    p = yVal[range - 1];\n                    TP.push((p[1] + p[2] + p[3]) / 3);\n                    range++;\n                }\n                for (i = period; i <= yValLen; i++) {\n                    p = yVal[i - 1];\n                    TPtemp = (p[1] + p[2] + p[3]) / 3;\n                    len = TP.push(TPtemp);\n                    periodTP = TP.slice(len - period);\n                    smaTP = sumArray(periodTP) / period;\n                    meanDev = meanDeviation(periodTP, smaTP) / period;\n                    CCIPoint = ((TPtemp - smaTP) / (0.015 * meanDev));\n                    CCI.push([xVal[i - 1], CCIPoint]);\n                    xData.push(xVal[i - 1]);\n                    yData.push(CCIPoint);\n                }\n                return {\n                    values: CCI,\n                    xData: xData,\n                    yData: yData\n                };\n            }\n        }\n        /* *\n         *\n         *  Static Properties\n         *\n         * */\n        /**\n         * Commodity Channel Index (CCI). This series requires `linkedTo` option to\n         * be set.\n         *\n         * @sample stock/indicators/cci\n         *         CCI indicator\n         *\n         * @extends      plotOptions.sma\n         * @since        6.0.0\n         * @product      highstock\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/cci\n         * @optionparent plotOptions.cci\n         */\n        CCIIndicator.defaultOptions = merge(SMAIndicator.defaultOptions, {\n            /**\n             * @excluding index\n             */\n            params: {\n                index: void 0 // Unused index, do not inherit (#15362)\n            }\n        });\n        SeriesRegistry.registerSeriesType('cci', CCIIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A `CCI` series. If the [type](#series.cci.type) option is not\n         * specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.cci\n         * @since     6.0.0\n         * @excluding dataParser, dataURL\n         * @product   highstock\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/cci\n         * @apioption series.cci\n         */\n        ''; // To include the above in the js output\n\n        return CCIIndicator;\n    });\n    _registerModule(_modules, 'masters/indicators/cci.src.js', [_modules['Core/Globals.js']], function (Highcharts) {\n\n\n        return Highcharts;\n    });\n}));\n"],"names":["factory","module","exports","define","amd","Highcharts","undefined","_modules","_registerModule","obj","path","args","fn","hasOwnProperty","apply","CustomEvent","win","dispatchEvent","detail","SeriesRegistry","U","sma","SMAIndicator","seriesTypes","isArray","merge","CCIIndicator","getValues","series","params","period","xVal","xData","yVal","yData","yValLen","length","TP","CCI","CCIPoint","p","periodTP","len","range","smaTP","TPtemp","meanDev","i","push","sumArray","array","slice","reduce","prev","cur","meanDeviation","arr","sum","Math","abs","values","defaultOptions","index","registerSeriesType"],"mappings":"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"}