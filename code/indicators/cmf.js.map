{"version":3,"sources":["<anon>"],"sourcesContent":["/**\n * @license Highstock JS v11.4.7 (2024-08-14)\n *\n * (c) 2010-2024 Highsoft AS\n * Author: Sebastian Domas\n *\n * License: www.highcharts.com/license\n */\n(function (factory) {\n    if (typeof module === 'object' && module.exports) {\n        factory['default'] = factory;\n        module.exports = factory;\n    } else if (typeof define === 'function' && define.amd) {\n        define('highcharts/indicators/cmf', ['highcharts', 'highcharts/modules/stock'], function (Highcharts) {\n            factory(Highcharts);\n            factory.Highcharts = Highcharts;\n            return factory;\n        });\n    } else {\n        factory(typeof Highcharts !== 'undefined' ? Highcharts : undefined);\n    }\n}(function (Highcharts) {\n    'use strict';\n    var _modules = Highcharts ? Highcharts._modules : {};\n    function _registerModule(obj, path, args, fn) {\n        if (!obj.hasOwnProperty(path)) {\n            obj[path] = fn.apply(null, args);\n\n            if (typeof CustomEvent === 'function') {\n                Highcharts.win.dispatchEvent(new CustomEvent(\n                    'HighchartsModuleLoaded',\n                    { detail: { path: path, module: obj[path] } }\n                ));\n            }\n        }\n    }\n    _registerModule(_modules, 'Stock/Indicators/CMF/CMFIndicator.js', [_modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (SeriesRegistry, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Highsoft AS\n         *\n         *  Author: Sebastian Domas\n         *\n         *  Chaikin Money Flow indicator for Highcharts Stock\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { sma: SMAIndicator } = SeriesRegistry.seriesTypes;\n        const { merge } = U;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The CMF series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.cmf\n         *\n         * @augments Highcharts.Series\n         */\n        class CMFIndicator extends SMAIndicator {\n            constructor() {\n                /* *\n                 *\n                 *  Static Properties\n                 *\n                 * */\n                super(...arguments);\n                this.nameBase = 'Chaikin Money Flow';\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Checks if the series and volumeSeries are accessible, number of\n             * points.x is longer than period, is series has OHLC data\n             * @private\n             * @param {Highcharts.CMFIndicator} this indicator to use.\n             * @return {boolean} True if series is valid and can be computed,\n             * otherwise false.\n             */\n            isValid() {\n                const chart = this.chart, options = this.options, series = this.linkedParent, volumeSeries = (this.volumeSeries ||\n                    (this.volumeSeries =\n                        chart.get(options.params.volumeSeriesID))), isSeriesOHLC = (series &&\n                    series.yData &&\n                    series.yData[0].length === 4);\n                /**\n                 * @private\n                 * @param {Highcharts.Series} serie to check length validity on.\n                 * @return {boolean|undefined} true if length is valid.\n                 */\n                function isLengthValid(serie) {\n                    return serie.xData &&\n                        serie.xData.length >= options.params.period;\n                }\n                return !!(series &&\n                    volumeSeries &&\n                    isLengthValid(series) &&\n                    isLengthValid(volumeSeries) && isSeriesOHLC);\n            }\n            /**\n             * Returns indicator's data.\n             * @private\n             * @param {Highcharts.CMFIndicator} this indicator to use.\n             * @param {Highcharts.Series} series to calculate values from\n             * @param {Highcharts.CMFIndicatorParamsOptions} params to pass\n             * @return {boolean|Highcharts.IndicatorNullableValuesObject} Returns false if the\n             * indicator is not valid, otherwise returns Values object.\n             */\n            getValues(series, params) {\n                if (!this.isValid()) {\n                    return;\n                }\n                return this.getMoneyFlow(series.xData, series.yData, this.volumeSeries.yData, params.period);\n            }\n            /**\n             * @private\n             *\n             * @param {Array<number>} xData\n             * x timestamp values\n             *\n             * @param {Array<number>} seriesYData\n             * yData of basic series\n             *\n             * @param {Array<number>} volumeSeriesYData\n             * yData of volume series\n             *\n             * @param {number} period\n             * indicator's param\n             *\n             * @return {Highcharts.IndicatorNullableValuesObject}\n             * object containing computed money flow data\n             */\n            getMoneyFlow(xData, seriesYData, volumeSeriesYData, period) {\n                const len = seriesYData.length, moneyFlowVolume = [], moneyFlowXData = [], moneyFlowYData = [], values = [];\n                let i, point, nullIndex = -1, sumVolume = 0, sumMoneyFlowVolume = 0;\n                /**\n                 * Calculates money flow volume, changes i, nullIndex vars from\n                 * upper scope!\n                 *\n                 * @private\n                 *\n                 * @param {Array<number>} ohlc\n                 * OHLC point\n                 *\n                 * @param {number} volume\n                 * Volume point's y value\n                 *\n                 * @return {number|null}\n                 * Volume * moneyFlowMultiplier\n                 */\n                function getMoneyFlowVolume(ohlc, volume) {\n                    const high = ohlc[1], low = ohlc[2], close = ohlc[3], isValid = volume !== null &&\n                        high !== null &&\n                        low !== null &&\n                        close !== null &&\n                        high !== low;\n                    /**\n                     * @private\n                     * @param {number} h\n                     * High value\n                     * @param {number} l\n                     * Low value\n                     * @param {number} c\n                     * Close value\n                     * @return {number}\n                     * Calculated multiplier for the point\n                     */\n                    function getMoneyFlowMultiplier(h, l, c) {\n                        return ((c - l) - (h - c)) / (h - l);\n                    }\n                    return isValid ?\n                        getMoneyFlowMultiplier(high, low, close) * volume :\n                        ((nullIndex = i), null);\n                }\n                if (period > 0 && period <= len) {\n                    for (i = 0; i < period; i++) {\n                        moneyFlowVolume[i] = getMoneyFlowVolume(seriesYData[i], volumeSeriesYData[i]);\n                        sumVolume += volumeSeriesYData[i];\n                        sumMoneyFlowVolume += moneyFlowVolume[i];\n                    }\n                    moneyFlowXData.push(xData[i - 1]);\n                    moneyFlowYData.push(i - nullIndex >= period && sumVolume !== 0 ?\n                        sumMoneyFlowVolume / sumVolume :\n                        null);\n                    values.push([moneyFlowXData[0], moneyFlowYData[0]]);\n                    for (; i < len; i++) {\n                        moneyFlowVolume[i] = getMoneyFlowVolume(seriesYData[i], volumeSeriesYData[i]);\n                        sumVolume -= volumeSeriesYData[i - period];\n                        sumVolume += volumeSeriesYData[i];\n                        sumMoneyFlowVolume -= moneyFlowVolume[i - period];\n                        sumMoneyFlowVolume += moneyFlowVolume[i];\n                        point = [\n                            xData[i],\n                            i - nullIndex >= period ?\n                                sumMoneyFlowVolume / sumVolume :\n                                null\n                        ];\n                        moneyFlowXData.push(point[0]);\n                        moneyFlowYData.push(point[1]);\n                        values.push([point[0], point[1]]);\n                    }\n                }\n                return {\n                    values: values,\n                    xData: moneyFlowXData,\n                    yData: moneyFlowYData\n                };\n            }\n        }\n        /**\n         * Chaikin Money Flow indicator (cmf).\n         *\n         * @sample stock/indicators/cmf/\n         *         Chaikin Money Flow indicator\n         *\n         * @extends      plotOptions.sma\n         * @since        6.0.0\n         * @excluding    animationLimit\n         * @product      highstock\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/cmf\n         * @optionparent plotOptions.cmf\n         */\n        CMFIndicator.defaultOptions = merge(SMAIndicator.defaultOptions, {\n            /**\n             * @excluding index\n             */\n            params: {\n                index: void 0, // Unused index, do not inherit (#15362)\n                /**\n                 * The id of another series to use its data as volume data for the\n                 * indicator calculation.\n                 */\n                volumeSeriesID: 'volume'\n            }\n        });\n        SeriesRegistry.registerSeriesType('cmf', CMFIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A `CMF` series. If the [type](#series.cmf.type) option is not\n         * specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.cmf\n         * @since     6.0.0\n         * @product   highstock\n         * @excluding dataParser, dataURL\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/cmf\n         * @apioption series.cmf\n         */\n        ''; // Adds doclet above to the transpiled file\n\n        return CMFIndicator;\n    });\n    _registerModule(_modules, 'masters/indicators/cmf.src.js', [_modules['Core/Globals.js']], function (Highcharts) {\n\n\n        return Highcharts;\n    });\n}));\n"],"names":["factory","module","exports","define","amd","Highcharts","undefined","_modules","_registerModule","obj","path","args","fn","hasOwnProperty","apply","CustomEvent","win","dispatchEvent","detail","SeriesRegistry","U","sma","SMAIndicator","seriesTypes","merge","CMFIndicator","constructor","arguments","nameBase","isValid","chart","options","series","linkedParent","volumeSeries","get","params","volumeSeriesID","isSeriesOHLC","yData","length","isLengthValid","serie","xData","period","getValues","getMoneyFlow","seriesYData","volumeSeriesYData","len","moneyFlowVolume","moneyFlowXData","moneyFlowYData","values","i","point","nullIndex","sumVolume","sumMoneyFlowVolume","getMoneyFlowVolume","ohlc","volume","high","low","close","h","c","l","push","defaultOptions","index","registerSeriesType"],"mappings":"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"}