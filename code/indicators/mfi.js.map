{"version":3,"sources":["<anon>"],"sourcesContent":["/**\n * @license Highstock JS v11.4.7 (2024-08-14)\n *\n * Money Flow Index indicator for Highcharts Stock\n *\n * (c) 2010-2024 Grzegorz Blachliński\n *\n * License: www.highcharts.com/license\n */\n(function (factory) {\n    if (typeof module === 'object' && module.exports) {\n        factory['default'] = factory;\n        module.exports = factory;\n    } else if (typeof define === 'function' && define.amd) {\n        define('highcharts/indicators/mfi', ['highcharts', 'highcharts/modules/stock'], function (Highcharts) {\n            factory(Highcharts);\n            factory.Highcharts = Highcharts;\n            return factory;\n        });\n    } else {\n        factory(typeof Highcharts !== 'undefined' ? Highcharts : undefined);\n    }\n}(function (Highcharts) {\n    'use strict';\n    var _modules = Highcharts ? Highcharts._modules : {};\n    function _registerModule(obj, path, args, fn) {\n        if (!obj.hasOwnProperty(path)) {\n            obj[path] = fn.apply(null, args);\n\n            if (typeof CustomEvent === 'function') {\n                Highcharts.win.dispatchEvent(new CustomEvent(\n                    'HighchartsModuleLoaded',\n                    { detail: { path: path, module: obj[path] } }\n                ));\n            }\n        }\n    }\n    _registerModule(_modules, 'Stock/Indicators/MFI/MFIIndicator.js', [_modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (SeriesRegistry, U) {\n        /* *\n         *\n         *  Money Flow Index indicator for Highcharts Stock\n         *\n         *  (c) 2010-2024 Grzegorz Blachliński\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { sma: SMAIndicator } = SeriesRegistry.seriesTypes;\n        const { extend, merge, error, isArray } = U;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        // Utils:\n        /**\n         *\n         */\n        function sumArray(array) {\n            return array.reduce(function (prev, cur) {\n                return prev + cur;\n            });\n        }\n        /**\n         *\n         */\n        function toFixed(a, n) {\n            return parseFloat(a.toFixed(n));\n        }\n        /**\n         *\n         */\n        function calculateTypicalPrice(point) {\n            return (point[1] + point[2] + point[3]) / 3;\n        }\n        /**\n         *\n         */\n        function calculateRawMoneyFlow(typicalPrice, volume) {\n            return typicalPrice * volume;\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The MFI series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.mfi\n         *\n         * @augments Highcharts.Series\n         */\n        class MFIIndicator extends SMAIndicator {\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            getValues(series, params) {\n                const period = params.period, xVal = series.xData, yVal = series.yData, yValLen = yVal ? yVal.length : 0, decimals = params.decimals, volumeSeries = series.chart.get(params.volumeSeriesID), yValVolume = (volumeSeries && volumeSeries.yData), MFI = [], xData = [], yData = [], positiveMoneyFlow = [], negativeMoneyFlow = [];\n                let newTypicalPrice, oldTypicalPrice, rawMoneyFlow, negativeMoneyFlowSum, positiveMoneyFlowSum, moneyFlowRatio, MFIPoint, i, isUp = false, \n                // MFI starts calculations from the second point\n                // Cause we need to calculate change between two points\n                range = 1;\n                if (!volumeSeries) {\n                    error('Series ' +\n                        params.volumeSeriesID +\n                        ' not found! Check `volumeSeriesID`.', true, series.chart);\n                    return;\n                }\n                // MFI requires high low and close values\n                if ((xVal.length <= period) || !isArray(yVal[0]) ||\n                    yVal[0].length !== 4 ||\n                    !yValVolume) {\n                    return;\n                }\n                // Calculate first typical price\n                newTypicalPrice = calculateTypicalPrice(yVal[range]);\n                // Accumulate first N-points\n                while (range < period + 1) {\n                    // Calculate if up or down\n                    oldTypicalPrice = newTypicalPrice;\n                    newTypicalPrice = calculateTypicalPrice(yVal[range]);\n                    isUp = newTypicalPrice >= oldTypicalPrice;\n                    // Calculate raw money flow\n                    rawMoneyFlow = calculateRawMoneyFlow(newTypicalPrice, yValVolume[range]);\n                    // Add to array\n                    positiveMoneyFlow.push(isUp ? rawMoneyFlow : 0);\n                    negativeMoneyFlow.push(isUp ? 0 : rawMoneyFlow);\n                    range++;\n                }\n                for (i = range - 1; i < yValLen; i++) {\n                    if (i > range - 1) {\n                        // Remove first point from array\n                        positiveMoneyFlow.shift();\n                        negativeMoneyFlow.shift();\n                        // Calculate if up or down\n                        oldTypicalPrice = newTypicalPrice;\n                        newTypicalPrice = calculateTypicalPrice(yVal[i]);\n                        isUp = newTypicalPrice > oldTypicalPrice;\n                        // Calculate raw money flow\n                        rawMoneyFlow = calculateRawMoneyFlow(newTypicalPrice, yValVolume[i]);\n                        // Add to array\n                        positiveMoneyFlow.push(isUp ? rawMoneyFlow : 0);\n                        negativeMoneyFlow.push(isUp ? 0 : rawMoneyFlow);\n                    }\n                    // Calculate sum of negative and positive money flow:\n                    negativeMoneyFlowSum = sumArray(negativeMoneyFlow);\n                    positiveMoneyFlowSum = sumArray(positiveMoneyFlow);\n                    moneyFlowRatio = positiveMoneyFlowSum / negativeMoneyFlowSum;\n                    MFIPoint = toFixed(100 - (100 / (1 + moneyFlowRatio)), decimals);\n                    MFI.push([xVal[i], MFIPoint]);\n                    xData.push(xVal[i]);\n                    yData.push(MFIPoint);\n                }\n                return {\n                    values: MFI,\n                    xData: xData,\n                    yData: yData\n                };\n            }\n        }\n        /* *\n         *\n         *  Static Properties\n         *\n         * */\n        /**\n         * Money Flow Index. This series requires `linkedTo` option to be set and\n         * should be loaded after the `stock/indicators/indicators.js` file.\n         *\n         * @sample stock/indicators/mfi\n         *         Money Flow Index Indicator\n         *\n         * @extends      plotOptions.sma\n         * @since        6.0.0\n         * @product      highstock\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/mfi\n         * @optionparent plotOptions.mfi\n         */\n        MFIIndicator.defaultOptions = merge(SMAIndicator.defaultOptions, {\n            /**\n             * @excluding index\n             */\n            params: {\n                index: void 0, // Unchangeable index, do not inherit (#15362)\n                /**\n                 * The id of volume series which is mandatory.\n                 * For example using OHLC data, volumeSeriesID='volume' means\n                 * the indicator will be calculated using OHLC and volume values.\n                 */\n                volumeSeriesID: 'volume',\n                /**\n                 * Number of maximum decimals that are used in MFI calculations.\n                 */\n                decimals: 4\n            }\n        });\n        extend(MFIIndicator.prototype, {\n            nameBase: 'Money Flow Index'\n        });\n        SeriesRegistry.registerSeriesType('mfi', MFIIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A `MFI` series. If the [type](#series.mfi.type) option is not specified, it\n         * is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.mfi\n         * @since     6.0.0\n         * @excluding dataParser, dataURL\n         * @product   highstock\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/mfi\n         * @apioption series.mfi\n         */\n        ''; // To include the above in the js output\n\n        return MFIIndicator;\n    });\n    _registerModule(_modules, 'masters/indicators/mfi.src.js', [_modules['Core/Globals.js']], function (Highcharts) {\n\n\n        return Highcharts;\n    });\n}));\n"],"names":["factory","module","exports","define","amd","Highcharts","undefined","_modules","_registerModule","obj","path","args","fn","hasOwnProperty","apply","CustomEvent","win","dispatchEvent","detail","SeriesRegistry","U","sma","SMAIndicator","seriesTypes","extend","merge","error","isArray","sumArray","array","reduce","prev","cur","calculateTypicalPrice","point","MFIIndicator","getValues","series","params","period","xVal","xData","yVal","yData","yValLen","length","decimals","volumeSeries","chart","get","volumeSeriesID","yValVolume","MFI","positiveMoneyFlow","negativeMoneyFlow","newTypicalPrice","oldTypicalPrice","rawMoneyFlow","negativeMoneyFlowSum","MFIPoint","i","isUp","range","typicalPrice","push","shift","parseFloat","a","positiveMoneyFlowSum","toFixed","values","defaultOptions","index","prototype","nameBase","registerSeriesType"],"mappings":"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"}