{"version":3,"sources":["<anon>"],"sourcesContent":["/**\n * @license Highstock JS v11.4.7 (2024-08-14)\n *\n * Indicator series type for Highcharts Stock\n *\n * (c) 2010-2024 Pawe≈Ç Fus\n *\n * License: www.highcharts.com/license\n */\n(function (factory) {\n    if (typeof module === 'object' && module.exports) {\n        factory['default'] = factory;\n        module.exports = factory;\n    } else if (typeof define === 'function' && define.amd) {\n        define('highcharts/indicators/pivot-points', ['highcharts', 'highcharts/modules/stock'], function (Highcharts) {\n            factory(Highcharts);\n            factory.Highcharts = Highcharts;\n            return factory;\n        });\n    } else {\n        factory(typeof Highcharts !== 'undefined' ? Highcharts : undefined);\n    }\n}(function (Highcharts) {\n    'use strict';\n    var _modules = Highcharts ? Highcharts._modules : {};\n    function _registerModule(obj, path, args, fn) {\n        if (!obj.hasOwnProperty(path)) {\n            obj[path] = fn.apply(null, args);\n\n            if (typeof CustomEvent === 'function') {\n                Highcharts.win.dispatchEvent(new CustomEvent(\n                    'HighchartsModuleLoaded',\n                    { detail: { path: path, module: obj[path] } }\n                ));\n            }\n        }\n    }\n    _registerModule(_modules, 'Stock/Indicators/PivotPoints/PivotPointsPoint.js', [_modules['Core/Series/SeriesRegistry.js']], function (SeriesRegistry) {\n        /* *\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const SMAPoint = SeriesRegistry.seriesTypes.sma.prototype.pointClass;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * @private\n         */\n        function destroyExtraLabels(point, functionName) {\n            const props = point.series.pointArrayMap;\n            let prop, i = props.length;\n            SeriesRegistry.seriesTypes.sma.prototype.pointClass.prototype[functionName].call(point);\n            while (i--) {\n                prop = 'dataLabel' + props[i];\n                // S4 dataLabel could be removed by parent method:\n                if (point[prop] && point[prop].element) {\n                    point[prop].destroy();\n                }\n                point[prop] = null;\n            }\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        class PivotPointsPoint extends SMAPoint {\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            destroyElements() {\n                destroyExtraLabels(this, 'destroyElements');\n            }\n            // This method is called when removing points, e.g. series.update()\n            destroy() {\n                destroyExtraLabels(this, 'destroyElements');\n            }\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return PivotPointsPoint;\n    });\n    _registerModule(_modules, 'Stock/Indicators/PivotPoints/PivotPointsIndicator.js', [_modules['Stock/Indicators/PivotPoints/PivotPointsPoint.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (PivotPointsPoint, SeriesRegistry, U) {\n        /* *\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { sma: SMAIndicator } = SeriesRegistry.seriesTypes;\n        const { merge, extend, defined, isArray } = U;\n        /**\n         *\n         *  Class\n         *\n         **/\n        /**\n         * The Pivot Points series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.pivotpoints\n         *\n         * @augments Highcharts.Series\n         */\n        class PivotPointsIndicator extends SMAIndicator {\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            toYData(point) {\n                return [point.P]; // The rest should not affect extremes\n            }\n            translate() {\n                const indicator = this;\n                super.translate.apply(indicator);\n                indicator.points.forEach(function (point) {\n                    indicator.pointArrayMap.forEach(function (value) {\n                        if (defined(point[value])) {\n                            point['plot' + value] = (indicator.yAxis.toPixels(point[value], true));\n                        }\n                    });\n                });\n                // Pivot points are rendered as horizontal lines\n                // And last point start not from the next one (as it's the last one)\n                // But from the approximated last position in a given range\n                indicator.plotEndPoint = indicator.xAxis.toPixels(indicator.endPoint, true);\n            }\n            getGraphPath(points) {\n                const indicator = this, allPivotPoints = ([[], [], [], [], [], [], [], [], []]), pointArrayMapLength = indicator.pointArrayMap.length;\n                let endPoint = indicator.plotEndPoint, path = [], position, point, pointsLength = points.length, i;\n                while (pointsLength--) {\n                    point = points[pointsLength];\n                    for (i = 0; i < pointArrayMapLength; i++) {\n                        position = indicator.pointArrayMap[i];\n                        if (defined(point[position])) {\n                            allPivotPoints[i].push({\n                                // Start left:\n                                plotX: point.plotX,\n                                plotY: point['plot' + position],\n                                isNull: false\n                            }, {\n                                // Go to right:\n                                plotX: endPoint,\n                                plotY: point['plot' + position],\n                                isNull: false\n                            }, {\n                                // And add null points in path to generate breaks:\n                                plotX: endPoint,\n                                plotY: null,\n                                isNull: true\n                            });\n                        }\n                    }\n                    endPoint = point.plotX;\n                }\n                allPivotPoints.forEach((pivotPoints) => {\n                    path = path.concat(super.getGraphPath.call(indicator, pivotPoints));\n                });\n                return path;\n            }\n            // TODO: Rewrite this logic to use multiple datalabels\n            drawDataLabels() {\n                const indicator = this, pointMapping = indicator.pointArrayMap;\n                let currentLabel, pointsLength, point, i;\n                if (indicator.options.dataLabels.enabled) {\n                    pointsLength = indicator.points.length;\n                    // For every Resistance/Support group we need to render labels.\n                    // Add one more item, which will just store dataLabels from\n                    // previous iteration\n                    pointMapping.concat([false]).forEach((position, k) => {\n                        i = pointsLength;\n                        while (i--) {\n                            point = indicator.points[i];\n                            if (!position) {\n                                // Store S4 dataLabel too:\n                                point['dataLabel' + pointMapping[k - 1]] =\n                                    point.dataLabel;\n                            }\n                            else {\n                                point.y = point[position];\n                                point.pivotLine = position;\n                                point.plotY = point['plot' + position];\n                                currentLabel = point['dataLabel' + position];\n                                // Store previous label\n                                if (k) {\n                                    point['dataLabel' + pointMapping[k - 1]] = point.dataLabel;\n                                }\n                                if (!point.dataLabels) {\n                                    point.dataLabels = [];\n                                }\n                                point.dataLabels[0] = point.dataLabel =\n                                    currentLabel =\n                                        currentLabel && currentLabel.element ?\n                                            currentLabel :\n                                            null;\n                            }\n                        }\n                        super.drawDataLabels\n                            .call(indicator);\n                    });\n                }\n            }\n            getValues(series, params) {\n                const period = params.period, xVal = series.xData, yVal = series.yData, yValLen = yVal ? yVal.length : 0, placement = this[params.algorithm + 'Placement'], \n                // 0- from, 1- to, 2- R1, 3- R2, 4- pivot, 5- S1 etc.\n                PP = [], xData = [], yData = [];\n                let endTimestamp, slicedXLen, slicedX, slicedY, lastPP, pivot, avg, i;\n                // Pivot Points requires high, low and close values\n                if (xVal.length < period ||\n                    !isArray(yVal[0]) ||\n                    yVal[0].length !== 4) {\n                    return;\n                }\n                for (i = period + 1; i <= yValLen + period; i += period) {\n                    slicedX = xVal.slice(i - period - 1, i);\n                    slicedY = yVal.slice(i - period - 1, i);\n                    slicedXLen = slicedX.length;\n                    endTimestamp = slicedX[slicedXLen - 1];\n                    pivot = this.getPivotAndHLC(slicedY);\n                    avg = placement(pivot);\n                    lastPP = PP.push([endTimestamp]\n                        .concat(avg));\n                    xData.push(endTimestamp);\n                    yData.push(PP[lastPP - 1].slice(1));\n                }\n                // We don't know exact position in ordinal axis\n                // So we use simple logic:\n                // Get first point in last range, calculate visible average range\n                // and multiply by period\n                this.endPoint = slicedX[0] + ((endTimestamp - slicedX[0]) /\n                    slicedXLen) * period;\n                return {\n                    values: PP,\n                    xData: xData,\n                    yData: yData\n                };\n            }\n            getPivotAndHLC(values) {\n                const close = values[values.length - 1][3];\n                let high = -Infinity, low = Infinity;\n                values.forEach(function (p) {\n                    high = Math.max(high, p[1]);\n                    low = Math.min(low, p[2]);\n                });\n                const pivot = (high + low + close) / 3;\n                return [pivot, high, low, close];\n            }\n            standardPlacement(values) {\n                const diff = values[1] - values[2], avg = [\n                    null,\n                    null,\n                    values[0] + diff,\n                    values[0] * 2 - values[2],\n                    values[0],\n                    values[0] * 2 - values[1],\n                    values[0] - diff,\n                    null,\n                    null\n                ];\n                return avg;\n            }\n            camarillaPlacement(values) {\n                const diff = values[1] - values[2], avg = [\n                    values[3] + diff * 1.5,\n                    values[3] + diff * 1.25,\n                    values[3] + diff * 1.1666,\n                    values[3] + diff * 1.0833,\n                    values[0],\n                    values[3] - diff * 1.0833,\n                    values[3] - diff * 1.1666,\n                    values[3] - diff * 1.25,\n                    values[3] - diff * 1.5\n                ];\n                return avg;\n            }\n            fibonacciPlacement(values) {\n                const diff = values[1] - values[2], avg = [\n                    null,\n                    values[0] + diff,\n                    values[0] + diff * 0.618,\n                    values[0] + diff * 0.382,\n                    values[0],\n                    values[0] - diff * 0.382,\n                    values[0] - diff * 0.618,\n                    values[0] - diff,\n                    null\n                ];\n                return avg;\n            }\n        }\n        /* *\n         *\n         *  Static Properties\n         *\n         * */\n        /**\n         * Pivot points indicator. This series requires the `linkedTo` option to be\n         * set and should be loaded after `stock/indicators/indicators.js` file.\n         *\n         * @sample stock/indicators/pivot-points\n         *         Pivot points\n         *\n         * @extends      plotOptions.sma\n         * @since        6.0.0\n         * @product      highstock\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/pivot-points\n         * @optionparent plotOptions.pivotpoints\n         */\n        PivotPointsIndicator.defaultOptions = merge(SMAIndicator.defaultOptions, {\n            /**\n             * @excluding index\n             */\n            params: {\n                index: void 0, // Unchangeable index, do not inherit (#15362)\n                period: 28,\n                /**\n                 * Algorithm used to calculate resistance and support lines based\n                 * on pivot points. Implemented algorithms: `'standard'`,\n                 * `'fibonacci'` and `'camarilla'`\n                 */\n                algorithm: 'standard'\n            },\n            marker: {\n                enabled: false\n            },\n            enableMouseTracking: false,\n            dataLabels: {\n                enabled: true,\n                format: '{point.pivotLine}'\n            },\n            dataGrouping: {\n                approximation: 'averages'\n            }\n        });\n        extend(PivotPointsIndicator.prototype, {\n            nameBase: 'Pivot Points',\n            pointArrayMap: ['R4', 'R3', 'R2', 'R1', 'P', 'S1', 'S2', 'S3', 'S4'],\n            pointValKey: 'P',\n            pointClass: PivotPointsPoint\n        });\n        /* *\n         *\n         *  Registry\n         *\n         * */\n        SeriesRegistry.registerSeriesType('pivotpoints', PivotPointsIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A pivot points indicator. If the [type](#series.pivotpoints.type) option is\n         * not specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.pivotpoints\n         * @since     6.0.0\n         * @product   highstock\n         * @excluding dataParser, dataURL\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/pivot-points\n         * @apioption series.pivotpoints\n         */\n        ''; // To include the above in the js output'\n\n        return PivotPointsIndicator;\n    });\n    _registerModule(_modules, 'masters/indicators/pivot-points.src.js', [_modules['Core/Globals.js']], function (Highcharts) {\n\n\n        return Highcharts;\n    });\n}));\n"],"names":["factory","module","exports","define","amd","Highcharts","undefined","_modules","_registerModule","obj","path","args","fn","hasOwnProperty","apply","CustomEvent","win","dispatchEvent","detail","SeriesRegistry","SMAPoint","seriesTypes","sma","prototype","pointClass","destroyExtraLabels","point","functionName","props","series","pointArrayMap","prop","i","length","call","element","destroy","destroyElements","PivotPointsPoint","U","SMAIndicator","merge","extend","defined","isArray","PivotPointsIndicator","toYData","P","translate","indicator","points","forEach","value","yAxis","toPixels","plotEndPoint","xAxis","endPoint","getGraphPath","allPivotPoints","pointArrayMapLength","position","pointsLength","push","plotX","plotY","isNull","pivotPoints","concat","drawDataLabels","currentLabel","pointMapping","options","dataLabels","enabled","k","y","pivotLine","dataLabel","getValues","params","endTimestamp","slicedXLen","slicedX","slicedY","lastPP","avg","period","xVal","xData","yVal","yData","yValLen","placement","algorithm","PP","slice","getPivotAndHLC","values","close","high","Infinity","low","p","Math","max","min","standardPlacement","diff","camarillaPlacement","fibonacciPlacement","defaultOptions","index","marker","enableMouseTracking","format","dataGrouping","approximation","nameBase","pointValKey","registerSeriesType"],"mappings":"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"}