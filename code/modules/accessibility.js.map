{"version":3,"sources":["<anon>"],"sourcesContent":["/**\n * @license Highcharts JS v11.4.7 (2024-08-14)\n *\n * Accessibility module\n *\n * (c) 2010-2024 Highsoft AS\n * Author: Oystein Moseng\n *\n * License: www.highcharts.com/license\n */\n(function (factory) {\n    if (typeof module === 'object' && module.exports) {\n        factory['default'] = factory;\n        module.exports = factory;\n    } else if (typeof define === 'function' && define.amd) {\n        define('highcharts/modules/accessibility', ['highcharts'], function (Highcharts) {\n            factory(Highcharts);\n            factory.Highcharts = Highcharts;\n            return factory;\n        });\n    } else {\n        factory(typeof Highcharts !== 'undefined' ? Highcharts : undefined);\n    }\n}(function (Highcharts) {\n    'use strict';\n    var _modules = Highcharts ? Highcharts._modules : {};\n    function _registerModule(obj, path, args, fn) {\n        if (!obj.hasOwnProperty(path)) {\n            obj[path] = fn.apply(null, args);\n\n            if (typeof CustomEvent === 'function') {\n                Highcharts.win.dispatchEvent(new CustomEvent(\n                    'HighchartsModuleLoaded',\n                    { detail: { path: path, module: obj[path] } }\n                ));\n            }\n        }\n    }\n    _registerModule(_modules, 'Accessibility/Utils/HTMLUtilities.js', [_modules['Core/Globals.js'], _modules['Core/Utilities.js']], function (H, U) {\n        /* *\n         *\n         *  (c) 2009-2024 Ã˜ystein Moseng\n         *\n         *  Utility functions for accessibility module.\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { doc, win } = H;\n        const { css } = U;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        const simulatedEventTarget = win.EventTarget && new win.EventTarget() || 'none';\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /* eslint-disable valid-jsdoc */\n        /**\n         * @private\n         * @param {Highcharts.HTMLDOMElement} el\n         * @param {string} className\n         * @return {void}\n         */\n        function addClass(el, className) {\n            if (el.classList) {\n                el.classList.add(className);\n            }\n            else if (el.className.indexOf(className) < 0) {\n                // Note: Dumb check for class name exists, should be fine for practical\n                // use cases, but will return false positives if the element has a class\n                // that contains the className.\n                el.className += ' ' + className;\n            }\n        }\n        /**\n         * @private\n         * @param {Highcharts.HTMLDOMElement} el\n         * @param {string} className\n         * @return {void}\n         */\n        function removeClass(el, className) {\n            if (el.classList) {\n                el.classList.remove(className);\n            }\n            else {\n                // Note: Dumb logic that will break if the element has a class name that\n                // consists of className plus something else.\n                el.className = el.className.replace(new RegExp(className, 'g'), '');\n            }\n        }\n        /**\n         * Utility function to clone a mouse event for re-dispatching.\n         * @private\n         */\n        function cloneMouseEvent(e) {\n            if (typeof win.MouseEvent === 'function') {\n                return new win.MouseEvent(e.type, e);\n            }\n            // No MouseEvent support, try using initMouseEvent\n            if (doc.createEvent) {\n                const evt = doc.createEvent('MouseEvent');\n                if (evt.initMouseEvent) {\n                    evt.initMouseEvent(e.type, e.bubbles, // #10561, #12161\n                    e.cancelable, e.view || win, e.detail, e.screenX, e.screenY, e.clientX, e.clientY, e.ctrlKey, e.altKey, e.shiftKey, e.metaKey, e.button, e.relatedTarget);\n                    return evt;\n                }\n            }\n            return getFakeMouseEvent(e.type);\n        }\n        /**\n         * Utility function to clone a touch event for re-dispatching.\n         * @private\n         */\n        function cloneTouchEvent(e) {\n            const touchListToTouchArray = (l) => {\n                const touchArray = [];\n                for (let i = 0; i < l.length; ++i) {\n                    const item = l.item(i);\n                    if (item) {\n                        touchArray.push(item);\n                    }\n                }\n                return touchArray;\n            };\n            if (typeof win.TouchEvent === 'function') {\n                const newEvent = new win.TouchEvent(e.type, {\n                    touches: touchListToTouchArray(e.touches),\n                    targetTouches: touchListToTouchArray(e.targetTouches),\n                    changedTouches: touchListToTouchArray(e.changedTouches),\n                    ctrlKey: e.ctrlKey,\n                    shiftKey: e.shiftKey,\n                    altKey: e.altKey,\n                    metaKey: e.metaKey,\n                    bubbles: e.bubbles,\n                    cancelable: e.cancelable,\n                    composed: e.composed,\n                    detail: e.detail,\n                    view: e.view\n                });\n                if (e.defaultPrevented) {\n                    newEvent.preventDefault();\n                }\n                return newEvent;\n            }\n            const fakeEvt = cloneMouseEvent(e);\n            fakeEvt.touches = e.touches;\n            fakeEvt.changedTouches = e.changedTouches;\n            fakeEvt.targetTouches = e.targetTouches;\n            return fakeEvt;\n        }\n        /**\n         * @private\n         */\n        function escapeStringForHTML(str) {\n            return str\n                .replace(/&/g, '&amp;')\n                .replace(/</g, '&lt;')\n                .replace(/>/g, '&gt;')\n                .replace(/\"/g, '&quot;')\n                .replace(/'/g, '&#x27;')\n                .replace(/\\//g, '&#x2F;');\n        }\n        /**\n         * Get an element by ID\n         * @private\n         */\n        function getElement(id) {\n            return doc.getElementById(id);\n        }\n        /**\n         * Get a fake mouse event of a given type. If relatedTarget is not given,\n         * it will point to simulatedEventTarget, as an indicator that the event\n         * is fake.\n         * @private\n         */\n        function getFakeMouseEvent(type, position, relatedTarget) {\n            const pos = position || {\n                x: 0,\n                y: 0\n            };\n            if (typeof win.MouseEvent === 'function') {\n                return new win.MouseEvent(type, {\n                    bubbles: true,\n                    cancelable: true,\n                    composed: true,\n                    button: 0,\n                    buttons: 1,\n                    relatedTarget: relatedTarget || simulatedEventTarget,\n                    view: win,\n                    detail: type === 'click' ? 1 : 0,\n                    screenX: pos.x,\n                    screenY: pos.y,\n                    clientX: pos.x,\n                    clientY: pos.y\n                });\n            }\n            // No MouseEvent support, try using initMouseEvent\n            if (doc.createEvent) {\n                const evt = doc.createEvent('MouseEvent');\n                if (evt.initMouseEvent) {\n                    evt.initMouseEvent(type, true, // Bubble\n                    true, // Cancel\n                    win, // View\n                    type === 'click' ? 1 : 0, // Detail\n                    // Coords\n                    pos.x, pos.y, pos.x, pos.y, \n                    // Pressed keys\n                    false, false, false, false, 0, // Button\n                    null // Related target\n                    );\n                    return evt;\n                }\n            }\n            return { type: type };\n        }\n        /**\n         * Get an appropriate heading level for an element. Corresponds to the\n         * heading level below the previous heading in the DOM.\n         *\n         * Note: Only detects previous headings in the DOM that are siblings,\n         * ancestors, or previous siblings of ancestors. Headings that are nested below\n         * siblings of ancestors (cousins et.al) are not picked up. This is because it\n         * is ambiguous whether or not the nesting is for layout purposes or indicates a\n         * separate section.\n         *\n         * @private\n         * @param {Highcharts.HTMLDOMElement} [element]\n         * @return {string} The heading tag name (h1, h2 etc).\n         * If no nearest heading is found, \"p\" is returned.\n         */\n        function getHeadingTagNameForElement(element) {\n            const getIncreasedHeadingLevel = (tagName) => {\n                const headingLevel = parseInt(tagName.slice(1), 10), newLevel = Math.min(6, headingLevel + 1);\n                return 'h' + newLevel;\n            };\n            const isHeading = (tagName) => /^H[1-6]$/i.test(tagName);\n            const getPreviousSiblingsHeading = (el) => {\n                let sibling = el;\n                while (sibling = sibling.previousSibling) { // eslint-disable-line\n                    const tagName = sibling.tagName || '';\n                    if (isHeading(tagName)) {\n                        return tagName;\n                    }\n                }\n                return '';\n            };\n            const getHeadingRecursive = (el) => {\n                const prevSiblingsHeading = getPreviousSiblingsHeading(el);\n                if (prevSiblingsHeading) {\n                    return getIncreasedHeadingLevel(prevSiblingsHeading);\n                }\n                // No previous siblings are headings, try parent node\n                const parent = el.parentElement;\n                if (!parent) {\n                    return 'p';\n                }\n                const parentTagName = parent.tagName;\n                if (isHeading(parentTagName)) {\n                    return getIncreasedHeadingLevel(parentTagName);\n                }\n                return getHeadingRecursive(parent);\n            };\n            return getHeadingRecursive(element);\n        }\n        /**\n         * Remove an element from the DOM.\n         * @private\n         * @param {Highcharts.HTMLDOMElement|Highcharts.SVGDOMElement} [element]\n         * @return {void}\n         */\n        function removeElement(element) {\n            if (element && element.parentNode) {\n                element.parentNode.removeChild(element);\n            }\n        }\n        /**\n         * Remove all child nodes from an element.\n         * @private\n         * @param {Highcharts.HTMLDOMElement|Highcharts.SVGDOMElement} [element]\n         * @return {void}\n         */\n        function removeChildNodes(element) {\n            while (element.lastChild) {\n                element.removeChild(element.lastChild);\n            }\n        }\n        /**\n         * Utility function. Reverses child nodes of a DOM element.\n         * @private\n         */\n        function reverseChildNodes(node) {\n            let i = node.childNodes.length;\n            while (i--) {\n                node.appendChild(node.childNodes[i]);\n            }\n        }\n        /**\n         * Used for aria-label attributes, painting on a canvas will fail if the\n         * text contains tags.\n         * @private\n         */\n        function stripHTMLTagsFromString(str, isForExport = false) {\n            return (typeof str === 'string') ?\n                (isForExport ?\n                    str.replace(/<\\/?[^>]+(>|$)/g, '') :\n                    str.replace(/<\\/?(?!\\s)[^>]+(>|$)/g, '')) : str;\n        }\n        /**\n         * Utility function for hiding an element visually, but still keeping it\n         * available to screen reader users.\n         * @private\n         */\n        function visuallyHideElement(element) {\n            css(element, {\n                position: 'absolute',\n                width: '1px',\n                height: '1px',\n                overflow: 'hidden',\n                whiteSpace: 'nowrap',\n                clip: 'rect(1px, 1px, 1px, 1px)',\n                marginTop: '-3px',\n                '-ms-filter': 'progid:DXImageTransform.Microsoft.Alpha(Opacity=1)',\n                filter: 'alpha(opacity=1)',\n                opacity: 0.01\n            });\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        const HTMLUtilities = {\n            addClass,\n            cloneMouseEvent,\n            cloneTouchEvent,\n            escapeStringForHTML,\n            getElement,\n            getFakeMouseEvent,\n            getHeadingTagNameForElement,\n            removeChildNodes,\n            removeClass,\n            removeElement,\n            reverseChildNodes,\n            simulatedEventTarget,\n            stripHTMLTagsFromString,\n            visuallyHideElement\n        };\n\n        return HTMLUtilities;\n    });\n    _registerModule(_modules, 'Accessibility/A11yI18n.js', [_modules['Core/Templating.js'], _modules['Core/Utilities.js']], function (F, U) {\n        /* *\n         *\n         *  Accessibility module - internationalization support\n         *\n         *  (c) 2010-2024 Highsoft AS\n         *  Author: Ã˜ystein Moseng\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { format } = F;\n        const { getNestedProperty, pick } = U;\n        /* *\n         *\n         *  Composition\n         *\n         * */\n        var A11yI18nComposition;\n        (function (A11yI18nComposition) {\n            /* *\n             *\n             *  Declarations\n             *\n             * */\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * @private\n             */\n            function compose(ChartClass) {\n                const chartProto = ChartClass.prototype;\n                if (!chartProto.langFormat) {\n                    chartProto.langFormat = langFormat;\n                }\n            }\n            A11yI18nComposition.compose = compose;\n            /**\n             * I18n utility function.  Format a single array or plural statement in a\n             * format string.  If the statement is not an array or plural statement,\n             * returns the statement within brackets.  Invalid array statements return\n             * an empty string.\n             *\n             * @private\n             * @function formatExtendedStatement\n             * @param {string} statement\n             * @param {Highcharts.Dictionary<*>} ctx\n             * Context to apply to the format string.\n             */\n            function formatExtendedStatement(statement, ctx) {\n                const eachStart = statement.indexOf('#each('), pluralStart = statement.indexOf('#plural('), indexStart = statement.indexOf('['), indexEnd = statement.indexOf(']');\n                let arr, result;\n                // Dealing with an each-function?\n                if (eachStart > -1) {\n                    const eachEnd = statement.slice(eachStart).indexOf(')') + eachStart, preEach = statement.substring(0, eachStart), postEach = statement.substring(eachEnd + 1), eachStatement = statement.substring(eachStart + 6, eachEnd), eachArguments = eachStatement.split(',');\n                    let lenArg = Number(eachArguments[1]), len;\n                    result = '';\n                    arr = getNestedProperty(eachArguments[0], ctx);\n                    if (arr) {\n                        lenArg = isNaN(lenArg) ? arr.length : lenArg;\n                        len = lenArg < 0 ?\n                            arr.length + lenArg :\n                            Math.min(lenArg, arr.length); // Overshoot\n                        // Run through the array for the specified length\n                        for (let i = 0; i < len; ++i) {\n                            result += preEach + arr[i] + postEach;\n                        }\n                    }\n                    return result.length ? result : '';\n                }\n                // Dealing with a plural-function?\n                if (pluralStart > -1) {\n                    const pluralEnd = (statement.slice(pluralStart).indexOf(')') + pluralStart), pluralStatement = statement.substring(pluralStart + 8, pluralEnd), pluralArguments = pluralStatement.split(','), num = Number(getNestedProperty(pluralArguments[0], ctx));\n                    switch (num) {\n                        case 0:\n                            result = pick(pluralArguments[4], pluralArguments[1]);\n                            break;\n                        case 1:\n                            result = pick(pluralArguments[2], pluralArguments[1]);\n                            break;\n                        case 2:\n                            result = pick(pluralArguments[3], pluralArguments[1]);\n                            break;\n                        default:\n                            result = pluralArguments[1];\n                    }\n                    return result ? stringTrim(result) : '';\n                }\n                // Array index\n                if (indexStart > -1) {\n                    const arrayName = statement.substring(0, indexStart), ix = Number(statement.substring(indexStart + 1, indexEnd));\n                    let val;\n                    arr = getNestedProperty(arrayName, ctx);\n                    if (!isNaN(ix) && arr) {\n                        if (ix < 0) {\n                            val = arr[arr.length + ix];\n                            // Handle negative overshoot\n                            if (typeof val === 'undefined') {\n                                val = arr[0];\n                            }\n                        }\n                        else {\n                            val = arr[ix];\n                            // Handle positive overshoot\n                            if (typeof val === 'undefined') {\n                                val = arr[arr.length - 1];\n                            }\n                        }\n                    }\n                    return typeof val !== 'undefined' ? val : '';\n                }\n                // Standard substitution, delegate to format or similar\n                return '{' + statement + '}';\n            }\n            /* eslint-disable max-len */\n            /**\n             * i18n formatting function.  Extends Highcharts.format() functionality by\n             * also handling arrays and plural conditionals.  Arrays can be indexed as\n             * follows:\n             *\n             * - Format: 'This is the first index: {myArray[0]}. The last: {myArray[-1]}.'\n             *\n             * - Context: { myArray: [0, 1, 2, 3, 4, 5] }\n             *\n             * - Result: 'This is the first index: 0. The last: 5.'\n             *\n             *\n             * They can also be iterated using the #each() function.  This will repeat\n             * the contents of the bracket expression for each element.  Example:\n             *\n             * - Format: 'List contains: {#each(myArray)cm }'\n             *\n             * - Context: { myArray: [0, 1, 2] }\n             *\n             * - Result: 'List contains: 0cm 1cm 2cm '\n             *\n             *\n             * The #each() function optionally takes a length parameter.  If positive,\n             * this parameter specifies the max number of elements to iterate through.\n             * If negative, the function will subtract the number from the length of the\n             * array.  Use this to stop iterating before the array ends.  Example:\n             *\n             * - Format: 'List contains: {#each(myArray, -1) }and {myArray[-1]}.'\n             *\n             * - Context: { myArray: [0, 1, 2, 3] }\n             *\n             * - Result: 'List contains: 0, 1, 2, and 3.'\n             *\n             *\n             * Use the #plural() function to pick a string depending on whether or not a\n             * context object is 1.  Arguments are #plural(obj, plural, singular).\n             * Example:\n             *\n             * - Format: 'Has {numPoints} {#plural(numPoints, points, point}.'\n             *\n             * - Context: { numPoints: 5 }\n             *\n             * - Result: 'Has 5 points.'\n             *\n             *\n             * Optionally there are additional parameters for dual and none:\n             * #plural(obj, plural, singular, dual, none).  Example:\n             *\n             * - Format: 'Has {#plural(numPoints, many points, one point, two points,\n             *   none}.'\n             *\n             * - Context: { numPoints: 2 }\n             *\n             * - Result: 'Has two points.'\n             *\n             *\n             * The dual or none parameters will take precedence if they are supplied.\n             *\n             * @requires modules/accessibility\n             *\n             * @function Highcharts.i18nFormat\n             *\n             * @param {string} formatString\n             * The string to format.\n             *\n             * @param {Highcharts.Dictionary<*>} context\n             * Context to apply to the format string.\n             *\n             * @param {Highcharts.Chart} chart\n             * A `Chart` instance with a time object and numberFormatter, passed on to\n             * format().\n             *\n             * @deprecated\n             *\n             * @return {string}\n             * The formatted string.\n             */\n            function i18nFormat(formatString, context, chart) {\n                const getFirstBracketStatement = (sourceStr, offset) => {\n                    const str = sourceStr.slice(offset || 0), startBracket = str.indexOf('{'), endBracket = str.indexOf('}');\n                    if (startBracket > -1 && endBracket > startBracket) {\n                        return {\n                            statement: str.substring(startBracket + 1, endBracket),\n                            begin: offset + startBracket + 1,\n                            end: offset + endBracket\n                        };\n                    }\n                }, tokens = [];\n                let bracketRes, constRes, cursor = 0;\n                // Tokenize format string into bracket statements and constants\n                do {\n                    bracketRes = getFirstBracketStatement(formatString, cursor);\n                    constRes = formatString.substring(cursor, bracketRes && bracketRes.begin - 1);\n                    // If we have constant content before this bracket statement, add it\n                    if (constRes.length) {\n                        tokens.push({\n                            value: constRes,\n                            type: 'constant'\n                        });\n                    }\n                    // Add the bracket statement\n                    if (bracketRes) {\n                        tokens.push({\n                            value: bracketRes.statement,\n                            type: 'statement'\n                        });\n                    }\n                    cursor = bracketRes ? bracketRes.end + 1 : cursor + 1;\n                } while (bracketRes);\n                // Perform the formatting.  The formatArrayStatement function returns\n                // the statement in brackets if it is not an array statement, which\n                // means it gets picked up by format below.\n                tokens.forEach((token) => {\n                    if (token.type === 'statement') {\n                        token.value = formatExtendedStatement(token.value, context);\n                    }\n                });\n                // Join string back together and pass to format to pick up non-array\n                // statements.\n                return format(tokens.reduce((acc, cur) => acc + cur.value, ''), context, chart);\n            }\n            A11yI18nComposition.i18nFormat = i18nFormat;\n            /* eslint-enable max-len */\n            /**\n             * Apply context to a format string from lang options of the chart.\n             *\n             * @requires modules/accessibility\n             *\n             * @function Highcharts.Chart#langFormat\n             *\n             * @param {string} langKey\n             * Key (using dot notation) into lang option structure.\n             *\n             * @param {Highcharts.Dictionary<*>} context\n             * Context to apply to the format string.\n             *\n             * @return {string}\n             * The formatted string.\n             */\n            function langFormat(langKey, context) {\n                const keys = langKey.split('.');\n                let formatString = this.options.lang, i = 0;\n                for (; i < keys.length; ++i) {\n                    formatString = formatString && formatString[keys[i]];\n                }\n                return typeof formatString === 'string' ?\n                    i18nFormat(formatString, context, this) : '';\n            }\n            /**\n             * @private\n             * @function stringTrim\n             *\n             * @param {string} str\n             * The input string\n             *\n             * @return {string}\n             * The trimmed string\n             */\n            function stringTrim(str) {\n                return str.trim && str.trim() || str.replace(/^\\s+|\\s+$/g, '');\n            }\n        })(A11yI18nComposition || (A11yI18nComposition = {}));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return A11yI18nComposition;\n    });\n    _registerModule(_modules, 'Accessibility/Utils/ChartUtilities.js', [_modules['Core/Globals.js'], _modules['Accessibility/Utils/HTMLUtilities.js'], _modules['Core/Utilities.js']], function (H, HU, U) {\n        /* *\n         *\n         *  (c) 2009-2024 Ã˜ystein Moseng\n         *\n         *  Utils for dealing with charts.\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { doc } = H;\n        const { stripHTMLTagsFromString: stripHTMLTags } = HU;\n        const { defined, find, fireEvent } = U;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /* eslint-disable valid-jsdoc */\n        /**\n         * Fire an event on an element that is either wrapped by Highcharts,\n         * or a DOM element.\n         * @private\n         */\n        function fireEventOnWrappedOrUnwrappedElement(el, eventObject) {\n            const type = eventObject.type;\n            const hcEvents = el.hcEvents;\n            if (!!doc.createEvent &&\n                (el.dispatchEvent || el.fireEvent)) {\n                if (el.dispatchEvent) {\n                    el.dispatchEvent(eventObject);\n                }\n                else {\n                    el.fireEvent(type, eventObject);\n                }\n            }\n            else if (hcEvents && hcEvents[type]) {\n                fireEvent(el, type, eventObject);\n            }\n            else if (el.element) {\n                fireEventOnWrappedOrUnwrappedElement(el.element, eventObject);\n            }\n        }\n        /**\n         * @private\n         */\n        function getChartTitle(chart) {\n            return stripHTMLTags(chart.options.title.text ||\n                chart.langFormat('accessibility.defaultChartTitle', { chart: chart }), chart.renderer.forExport);\n        }\n        /**\n         * Return string with the axis name/title.\n         * @private\n         */\n        function getAxisDescription(axis) {\n            return axis && (axis.options.accessibility?.description ||\n                axis.axisTitle?.textStr ||\n                axis.options.id ||\n                axis.categories && 'categories' ||\n                axis.dateTime && 'Time' ||\n                'values');\n        }\n        /**\n         * Return string with text description of the axis range.\n         * @private\n         * @param {Highcharts.Axis} axis\n         * The axis to get range desc of.\n         * @return {string}\n         * A string with the range description for the axis.\n         */\n        function getAxisRangeDescription(axis) {\n            const axisOptions = axis.options || {};\n            // Handle overridden range description\n            if (axisOptions.accessibility &&\n                typeof axisOptions.accessibility.rangeDescription !== 'undefined') {\n                return axisOptions.accessibility.rangeDescription;\n            }\n            // Handle category axes\n            if (axis.categories) {\n                return getCategoryAxisRangeDesc(axis);\n            }\n            // Use time range, not from-to?\n            if (axis.dateTime && (axis.min === 0 || axis.dataMin === 0)) {\n                return getAxisTimeLengthDesc(axis);\n            }\n            // Just use from and to.\n            // We have the range and the unit to use, find the desc format\n            return getAxisFromToDescription(axis);\n        }\n        /**\n         * Describe the range of a category axis.\n         * @private\n         */\n        function getCategoryAxisRangeDesc(axis) {\n            const chart = axis.chart;\n            if (axis.dataMax && axis.dataMin) {\n                return chart.langFormat('accessibility.axis.rangeCategories', {\n                    chart: chart,\n                    axis: axis,\n                    numCategories: axis.dataMax - axis.dataMin + 1\n                });\n            }\n            return '';\n        }\n        /**\n         * Describe the length of the time window shown on an axis.\n         * @private\n         */\n        function getAxisTimeLengthDesc(axis) {\n            const chart = axis.chart, range = {}, min = axis.dataMin || axis.min || 0, max = axis.dataMax || axis.max || 0;\n            let rangeUnit = 'Seconds';\n            range.Seconds = (max - min) / 1000;\n            range.Minutes = range.Seconds / 60;\n            range.Hours = range.Minutes / 60;\n            range.Days = range.Hours / 24;\n            ['Minutes', 'Hours', 'Days'].forEach(function (unit) {\n                if (range[unit] > 2) {\n                    rangeUnit = unit;\n                }\n            });\n            const rangeValue = range[rangeUnit].toFixed(rangeUnit !== 'Seconds' &&\n                rangeUnit !== 'Minutes' ? 1 : 0 // Use decimals for days/hours\n            );\n            // We have the range and the unit to use, find the desc format\n            return chart.langFormat('accessibility.axis.timeRange' + rangeUnit, {\n                chart: chart,\n                axis: axis,\n                range: rangeValue.replace('.0', '')\n            });\n        }\n        /**\n         * Describe an axis from-to range.\n         * @private\n         */\n        function getAxisFromToDescription(axis) {\n            const chart = axis.chart, options = chart.options, dateRangeFormat = (options &&\n                options.accessibility &&\n                options.accessibility.screenReaderSection.axisRangeDateFormat ||\n                ''), extremes = {\n                min: axis.dataMin || axis.min || 0,\n                max: axis.dataMax || axis.max || 0\n            }, format = function (key) {\n                return axis.dateTime ?\n                    chart.time.dateFormat(dateRangeFormat, extremes[key]) :\n                    extremes[key].toString();\n            };\n            return chart.langFormat('accessibility.axis.rangeFromTo', {\n                chart: chart,\n                axis: axis,\n                rangeFrom: format('min'),\n                rangeTo: format('max')\n            });\n        }\n        /**\n         * Get the DOM element for the first point in the series.\n         * @private\n         * @param {Highcharts.Series} series\n         * The series to get element for.\n         * @return {Highcharts.HTMLDOMElement|Highcharts.SVGDOMElement|undefined}\n         * The DOM element for the point.\n         */\n        function getSeriesFirstPointElement(series) {\n            if (series.points && series.points.length) {\n                const firstPointWithGraphic = find(series.points, (p) => !!p.graphic);\n                return (firstPointWithGraphic &&\n                    firstPointWithGraphic.graphic &&\n                    firstPointWithGraphic.graphic.element);\n            }\n        }\n        /**\n         * Get the DOM element for the series that we put accessibility info on.\n         * @private\n         * @param {Highcharts.Series} series\n         * The series to get element for.\n         * @return {Highcharts.HTMLDOMElement|Highcharts.SVGDOMElement|undefined}\n         * The DOM element for the series\n         */\n        function getSeriesA11yElement(series) {\n            const firstPointEl = getSeriesFirstPointElement(series);\n            return (firstPointEl &&\n                firstPointEl.parentNode || series.graph &&\n                series.graph.element || series.group &&\n                series.group.element); // Could be tracker series depending on series type\n        }\n        /**\n         * Remove aria-hidden from element. Also unhides parents of the element, and\n         * hides siblings that are not explicitly unhidden.\n         * @private\n         */\n        function unhideChartElementFromAT(chart, element) {\n            element.setAttribute('aria-hidden', false);\n            if (element === chart.renderTo ||\n                !element.parentNode ||\n                element.parentNode === doc.body // #16126: Full screen printing\n            ) {\n                return;\n            }\n            // Hide siblings unless their hidden state is already explicitly set\n            Array.prototype.forEach.call(element.parentNode.childNodes, function (node) {\n                if (!node.hasAttribute('aria-hidden')) {\n                    node.setAttribute('aria-hidden', true);\n                }\n            });\n            // Repeat for parent\n            unhideChartElementFromAT(chart, element.parentNode);\n        }\n        /**\n         * Hide series from screen readers.\n         * @private\n         */\n        function hideSeriesFromAT(series) {\n            const seriesEl = getSeriesA11yElement(series);\n            if (seriesEl) {\n                seriesEl.setAttribute('aria-hidden', true);\n            }\n        }\n        /**\n         * Get series objects by series name.\n         * @private\n         */\n        function getSeriesFromName(chart, name) {\n            if (!name) {\n                return chart.series;\n            }\n            return (chart.series || []).filter(function (s) {\n                return s.name === name;\n            });\n        }\n        /**\n         * Get point in a series from x/y values.\n         * @private\n         */\n        function getPointFromXY(series, x, y) {\n            let i = series.length, res;\n            while (i--) {\n                res = find(series[i].points || [], function (p) {\n                    return p.x === x && p.y === y;\n                });\n                if (res) {\n                    return res;\n                }\n            }\n        }\n        /**\n         * Get relative position of point on an x/y axis from 0 to 1.\n         * @private\n         */\n        function getRelativePointAxisPosition(axis, point) {\n            if (!defined(axis.dataMin) || !defined(axis.dataMax)) {\n                return 0;\n            }\n            const axisStart = axis.toPixels(axis.dataMin), axisEnd = axis.toPixels(axis.dataMax), \n            // We have to use pixel position because of axis breaks, log axis etc.\n            positionProp = axis.coll === 'xAxis' ? 'x' : 'y', pointPos = axis.toPixels(point[positionProp] || 0);\n            return (pointPos - axisStart) / (axisEnd - axisStart);\n        }\n        /**\n         * Get relative position of point on an x/y axis from 0 to 1.\n         * @private\n         */\n        function scrollAxisToPoint(point) {\n            const xAxis = point.series.xAxis, yAxis = point.series.yAxis, axis = (xAxis && xAxis.scrollbar ? xAxis : yAxis), scrollbar = (axis && axis.scrollbar);\n            if (scrollbar && defined(scrollbar.to) && defined(scrollbar.from)) {\n                const range = scrollbar.to - scrollbar.from;\n                const pos = getRelativePointAxisPosition(axis, point);\n                scrollbar.updatePosition(pos - range / 2, pos + range / 2);\n                fireEvent(scrollbar, 'changed', {\n                    from: scrollbar.from,\n                    to: scrollbar.to,\n                    trigger: 'scrollbar',\n                    DOMEvent: null\n                });\n            }\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        const ChartUtilities = {\n            fireEventOnWrappedOrUnwrappedElement,\n            getChartTitle,\n            getAxisDescription,\n            getAxisRangeDescription,\n            getPointFromXY,\n            getSeriesFirstPointElement,\n            getSeriesFromName,\n            getSeriesA11yElement,\n            unhideChartElementFromAT,\n            hideSeriesFromAT,\n            scrollAxisToPoint\n        };\n\n        return ChartUtilities;\n    });\n    _registerModule(_modules, 'Accessibility/Utils/DOMElementProvider.js', [_modules['Core/Globals.js'], _modules['Accessibility/Utils/HTMLUtilities.js']], function (H, HU) {\n        /* *\n         *\n         *  (c) 2009-2024 Ã˜ystein Moseng\n         *\n         *  Class that can keep track of elements added to DOM and clean them up on\n         *  destroy.\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { doc } = H;\n        const { removeElement } = HU;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * @private\n         */\n        class DOMElementProvider {\n            /* *\n             *\n             *  Constructor\n             *\n             * */\n            constructor() {\n                this.elements = [];\n            }\n            /**\n             * Create an element and keep track of it for later removal.\n             * Same args as document.createElement\n             * @private\n             */\n            createElement() {\n                const el = doc.createElement.apply(doc, arguments);\n                this.elements.push(el);\n                return el;\n            }\n            /**\n             * Destroy created element, removing it from the DOM.\n             * @private\n             */\n            removeElement(element) {\n                removeElement(element);\n                this.elements.splice(this.elements.indexOf(element), 1);\n            }\n            /**\n             * Destroy all created elements, removing them from the DOM.\n             * @private\n             */\n            destroyCreatedElements() {\n                this.elements.forEach(function (element) {\n                    removeElement(element);\n                });\n                this.elements = [];\n            }\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return DOMElementProvider;\n    });\n    _registerModule(_modules, 'Accessibility/Utils/EventProvider.js', [_modules['Core/Globals.js'], _modules['Core/Utilities.js']], function (H, U) {\n        /* *\n         *\n         *  (c) 2009-2024 Ã˜ystein Moseng\n         *\n         *  Class that can keep track of events added, and clean them up on destroy.\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { addEvent } = U;\n        /**\n         * @private\n         */\n        class EventProvider {\n            /* *\n             *\n             *  Constructor\n             *\n             * */\n            constructor() {\n                this.eventRemovers = [];\n            }\n            /**\n             * Add an event to an element and keep track of it for later removal.\n             * Same args as Highcharts.addEvent.\n             * @private\n             */\n            addEvent() {\n                const remover = addEvent.apply(H, arguments);\n                this.eventRemovers.push({\n                    element: arguments[0], // HTML element\n                    remover\n                });\n                return remover;\n            }\n            /**\n             * Remove added event.\n             * @private\n             */\n            removeEvent(event) {\n                const pos = this.eventRemovers.map((e) => e.remover).indexOf(event);\n                this.eventRemovers[pos].remover();\n                this.eventRemovers.splice(pos, 1);\n            }\n            /**\n             * Remove all added events.\n             * @private\n             */\n            removeAddedEvents() {\n                this.eventRemovers.map((e) => e.remover)\n                    .forEach((remover) => remover());\n                this.eventRemovers = [];\n            }\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return EventProvider;\n    });\n    _registerModule(_modules, 'Accessibility/AccessibilityComponent.js', [_modules['Accessibility/Utils/ChartUtilities.js'], _modules['Accessibility/Utils/DOMElementProvider.js'], _modules['Accessibility/Utils/EventProvider.js'], _modules['Accessibility/Utils/HTMLUtilities.js'], _modules['Core/Utilities.js']], function (CU, DOMElementProvider, EventProvider, HU, U) {\n        /* *\n         *\n         *  (c) 2009-2024 Ã˜ystein Moseng\n         *\n         *  Accessibility component class definition\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { fireEventOnWrappedOrUnwrappedElement } = CU;\n        const { getFakeMouseEvent } = HU;\n        const { extend } = U;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The AccessibilityComponent base class, representing a part of the chart that\n         * has accessibility logic connected to it. This class can be inherited from to\n         * create a custom accessibility component for a chart.\n         *\n         * Components should take care to destroy added elements and unregister event\n         * handlers on destroy. This is handled automatically if using this.addEvent and\n         * this.createElement.\n         *\n         * @sample highcharts/accessibility/custom-component\n         *         Custom accessibility component\n         *\n         * @requires modules/accessibility\n         * @class\n         * @name Highcharts.AccessibilityComponent\n         */\n        class AccessibilityComponent {\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Initialize the class\n             * @private\n             * @param {Highcharts.Chart} chart The chart object\n             * @param {Highcharts.ProxyProvider} proxyProvider The proxy provider of the accessibility module\n             */\n            initBase(chart, proxyProvider) {\n                this.chart = chart;\n                this.eventProvider = new EventProvider();\n                this.domElementProvider = new DOMElementProvider();\n                this.proxyProvider = proxyProvider;\n                // Key code enum for common keys\n                this.keyCodes = {\n                    left: 37,\n                    right: 39,\n                    up: 38,\n                    down: 40,\n                    enter: 13,\n                    space: 32,\n                    esc: 27,\n                    tab: 9,\n                    pageUp: 33,\n                    pageDown: 34,\n                    end: 35,\n                    home: 36\n                };\n            }\n            /**\n             * Add an event to an element and keep track of it for later removal.\n             * See EventProvider for details.\n             * @private\n             */\n            addEvent(el, type, fn, options) {\n                return this.eventProvider.addEvent(el, type, fn, options);\n            }\n            /**\n             * Create an element and keep track of it for later removal.\n             * See DOMElementProvider for details.\n             * @private\n             */\n            createElement(tagName, options) {\n                return this.domElementProvider.createElement(tagName, options);\n            }\n            /**\n             * Fire a fake click event on an element. It is useful to have this on\n             * AccessibilityComponent for users of custom components.\n             */\n            fakeClickEvent(el) {\n                const fakeEvent = getFakeMouseEvent('click');\n                fireEventOnWrappedOrUnwrappedElement(el, fakeEvent);\n            }\n            /**\n             * Remove traces of the component.\n             * @private\n             */\n            destroyBase() {\n                this.domElementProvider.destroyCreatedElements();\n                this.eventProvider.removeAddedEvents();\n            }\n        }\n        extend(AccessibilityComponent.prototype, \n        /** @lends Highcharts.AccessibilityComponent */\n        {\n            /**\n             * Called on component initialization.\n             */\n            init() { },\n            /**\n             * Get keyboard navigation handler for this component.\n             * @private\n             */\n            getKeyboardNavigation: function () { },\n            /**\n             * Called on updates to the chart, including options changes.\n             * Note that this is also called on first render of chart.\n             */\n            onChartUpdate() { },\n            /**\n             * Called on every chart render.\n             */\n            onChartRender() { },\n            /**\n             * Called when accessibility is disabled or chart is destroyed.\n             */\n            destroy() { }\n        });\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return AccessibilityComponent;\n    });\n    _registerModule(_modules, 'Accessibility/KeyboardNavigationHandler.js', [_modules['Core/Utilities.js']], function (U) {\n        /* *\n         *\n         *  (c) 2009-2024 Ã˜ystein Moseng\n         *\n         *  Keyboard navigation handler base class definition\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { find } = U;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * Define a keyboard navigation handler for use with a\n         * Highcharts.AccessibilityComponent instance. This functions as an abstraction\n         * layer for keyboard navigation, and defines a map of keyCodes to handler\n         * functions.\n         *\n         * @requires modules/accessibility\n         *\n         * @sample highcharts/accessibility/custom-component\n         *         Custom accessibility component\n         *\n         * @class\n         * @name Highcharts.KeyboardNavigationHandler\n         *\n         * @param {Highcharts.Chart} chart\n         * The chart this module should act on.\n         *\n         * @param {Highcharts.KeyboardNavigationHandlerOptionsObject} options\n         * Options for the keyboard navigation handler.\n         */\n        class KeyboardNavigationHandler {\n            /* *\n             *\n             *  Constructor\n             *\n             * */\n            constructor(chart, options) {\n                this.chart = chart;\n                this.keyCodeMap = options.keyCodeMap || [];\n                this.validate = options.validate;\n                this.init = options.init;\n                this.terminate = options.terminate;\n                // Response enum\n                this.response = {\n                    success: 1, // Keycode was handled\n                    prev: 2, // Move to prev module\n                    next: 3, // Move to next module\n                    noHandler: 4, // There is no handler for this keycode\n                    fail: 5 // Handler failed\n                };\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Find handler function(s) for key code in the keyCodeMap and run it.\n             *\n             * @function KeyboardNavigationHandler#run\n             * @param {global.KeyboardEvent} e\n             * @return {number} Returns a response code indicating whether the run was\n             *      a success/fail/unhandled, or if we should move to next/prev module.\n             */\n            run(e) {\n                const keyCode = e.which || e.keyCode;\n                let response = this.response.noHandler;\n                const handlerCodeSet = find(this.keyCodeMap, function (codeSet) {\n                    return codeSet[0].indexOf(keyCode) > -1;\n                });\n                if (handlerCodeSet) {\n                    response = handlerCodeSet[1].call(this, keyCode, e);\n                }\n                else if (keyCode === 9) {\n                    // Default tab handler, move to next/prev module\n                    response = this.response[e.shiftKey ? 'prev' : 'next'];\n                }\n                return response;\n            }\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Declarations\n         *\n         * */\n        /**\n         * Options for the keyboard navigation handler.\n         *\n         * @interface Highcharts.KeyboardNavigationHandlerOptionsObject\n         */ /**\n        * An array containing pairs of an array of keycodes, mapped to a handler\n        * function. When the keycode is received, the handler is called with the\n        * keycode as parameter.\n        * @name Highcharts.KeyboardNavigationHandlerOptionsObject#keyCodeMap\n        * @type {Array<Array<Array<number>, Function>>}\n        */ /**\n        * Function to run on initialization of module.\n        * @name Highcharts.KeyboardNavigationHandlerOptionsObject#init\n        * @type {Function}\n        */ /**\n        * Function to run before moving to next/prev module. Receives moving direction\n        * as parameter: +1 for next, -1 for previous.\n        * @name Highcharts.KeyboardNavigationHandlerOptionsObject#terminate\n        * @type {Function|undefined}\n        */ /**\n        * Function to run to validate module. Should return false if module should not\n        * run, true otherwise. Receives chart as parameter.\n        * @name Highcharts.KeyboardNavigationHandlerOptionsObject#validate\n        * @type {Function|undefined}\n        */\n        (''); // Keeps doclets above in JS file\n\n        return KeyboardNavigationHandler;\n    });\n    _registerModule(_modules, 'Accessibility/Components/ContainerComponent.js', [_modules['Accessibility/AccessibilityComponent.js'], _modules['Accessibility/KeyboardNavigationHandler.js'], _modules['Accessibility/Utils/ChartUtilities.js'], _modules['Core/Globals.js'], _modules['Accessibility/Utils/HTMLUtilities.js']], function (AccessibilityComponent, KeyboardNavigationHandler, CU, H, HU) {\n        /* *\n         *\n         *  (c) 2009-2024 Ã˜ystein Moseng\n         *\n         *  Accessibility component for chart container.\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { unhideChartElementFromAT, getChartTitle } = CU;\n        const { doc } = H;\n        const { stripHTMLTagsFromString: stripHTMLTags } = HU;\n        /**\n         * The ContainerComponent class\n         *\n         * @private\n         * @class\n         * @name Highcharts.ContainerComponent\n         */\n        class ContainerComponent extends AccessibilityComponent {\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /* eslint-disable valid-jsdoc */\n            /**\n             * Called on first render/updates to the chart, including options changes.\n             */\n            onChartUpdate() {\n                this.handleSVGTitleElement();\n                this.setSVGContainerLabel();\n                this.setGraphicContainerAttrs();\n                this.setRenderToAttrs();\n                this.makeCreditsAccessible();\n            }\n            /**\n             * @private\n             */\n            handleSVGTitleElement() {\n                const chart = this.chart, titleId = 'highcharts-title-' + chart.index, titleContents = stripHTMLTags(chart.langFormat('accessibility.svgContainerTitle', {\n                    chartTitle: getChartTitle(chart)\n                }));\n                if (titleContents.length) {\n                    const titleElement = this.svgTitleElement =\n                        this.svgTitleElement || doc.createElementNS('http://www.w3.org/2000/svg', 'title');\n                    titleElement.textContent = titleContents;\n                    titleElement.id = titleId;\n                    chart.renderTo.insertBefore(titleElement, chart.renderTo.firstChild);\n                }\n            }\n            /**\n             * @private\n             */\n            setSVGContainerLabel() {\n                const chart = this.chart, svgContainerLabel = chart.langFormat('accessibility.svgContainerLabel', {\n                    chartTitle: getChartTitle(chart)\n                });\n                if (chart.renderer.box && svgContainerLabel.length) {\n                    chart.renderer.box.setAttribute('aria-label', svgContainerLabel);\n                }\n            }\n            /**\n             * @private\n             */\n            setGraphicContainerAttrs() {\n                const chart = this.chart, label = chart.langFormat('accessibility.graphicContainerLabel', {\n                    chartTitle: getChartTitle(chart)\n                });\n                if (label.length) {\n                    chart.container.setAttribute('aria-label', label);\n                }\n            }\n            /**\n             * Set attributes on the chart container element.\n             * @private\n             */\n            setRenderToAttrs() {\n                const chart = this.chart, shouldHaveLandmark = chart.options.accessibility\n                    .landmarkVerbosity !== 'disabled', containerLabel = chart.langFormat('accessibility.chartContainerLabel', {\n                    title: getChartTitle(chart),\n                    chart: chart\n                });\n                if (containerLabel) {\n                    chart.renderTo.setAttribute('role', shouldHaveLandmark ? 'region' : 'group');\n                    chart.renderTo.setAttribute('aria-label', containerLabel);\n                }\n            }\n            /**\n             * @private\n             */\n            makeCreditsAccessible() {\n                const chart = this.chart, credits = chart.credits;\n                if (credits) {\n                    if (credits.textStr) {\n                        credits.element.setAttribute('aria-label', chart.langFormat('accessibility.credits', {\n                            creditsStr: stripHTMLTags(credits.textStr, chart.renderer.forExport)\n                        }));\n                    }\n                    unhideChartElementFromAT(chart, credits.element);\n                }\n            }\n            /**\n             * Empty handler to just set focus on chart\n             * @private\n             */\n            getKeyboardNavigation() {\n                const chart = this.chart;\n                return new KeyboardNavigationHandler(chart, {\n                    keyCodeMap: [],\n                    validate: function () {\n                        return true;\n                    },\n                    init: function () {\n                        const a11y = chart.accessibility;\n                        if (a11y) {\n                            a11y.keyboardNavigation.tabindexContainer.focus();\n                        }\n                    }\n                });\n            }\n            /**\n             * Accessibility disabled/chart destroyed.\n             */\n            destroy() {\n                this.chart.renderTo.setAttribute('aria-hidden', true);\n            }\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return ContainerComponent;\n    });\n    _registerModule(_modules, 'Accessibility/FocusBorder.js', [_modules['Core/Utilities.js']], function (U) {\n        /* *\n         *\n         *  (c) 2009-2024 Ã˜ystein Moseng\n         *\n         *  Extend SVG and Chart classes with focus border capabilities.\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { addEvent, pick } = U;\n        /* *\n         *\n         *  Composition\n         *\n         * */\n        var FocusBorderComposition;\n        (function (FocusBorderComposition) {\n            /* *\n             *\n             *  Declarations\n             *\n             * */\n            /* *\n             *\n             *  Constants\n             *\n             * */\n            // Attributes that trigger a focus border update\n            const svgElementBorderUpdateTriggers = [\n                'x', 'y', 'transform', 'width', 'height', 'r', 'd', 'stroke-width'\n            ];\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * @private\n             */\n            function compose(ChartClass, SVGElementClass) {\n                const chartProto = ChartClass.prototype, svgElementProto = SVGElementClass.prototype;\n                if (!chartProto.renderFocusBorder) {\n                    chartProto.renderFocusBorder = chartRenderFocusBorder;\n                    chartProto.setFocusToElement = chartSetFocusToElement;\n                }\n                if (!svgElementProto.addFocusBorder) {\n                    svgElementProto.addFocusBorder = svgElementAddFocusBorder;\n                    svgElementProto.removeFocusBorder = svgElementRemoveFocusBorder;\n                }\n            }\n            FocusBorderComposition.compose = compose;\n            /**\n             * Redraws the focus border on the currently focused element.\n             *\n             * @private\n             * @function Highcharts.Chart#renderFocusBorder\n             */\n            function chartRenderFocusBorder() {\n                const focusElement = this.focusElement, focusBorderOptions = this.options.accessibility.keyboardNavigation.focusBorder;\n                if (focusElement) {\n                    focusElement.removeFocusBorder();\n                    if (focusBorderOptions.enabled) {\n                        focusElement.addFocusBorder(focusBorderOptions.margin, {\n                            stroke: focusBorderOptions.style.color,\n                            strokeWidth: focusBorderOptions.style.lineWidth,\n                            r: focusBorderOptions.style.borderRadius\n                        });\n                    }\n                }\n            }\n            /**\n             * Set chart's focus to an SVGElement. Calls focus() on it, and draws the\n             * focus border. This is used by multiple components.\n             *\n             * @private\n             * @function Highcharts.Chart#setFocusToElement\n             *\n             * @param {Highcharts.SVGElement} svgElement\n             * Element to draw the border around.\n             *\n             * @param {SVGDOMElement|HTMLDOMElement} [focusElement]\n             * If supplied, it draws the border around svgElement and sets the focus to\n             * focusElement.\n             */\n            function chartSetFocusToElement(svgElement, focusElement) {\n                const focusBorderOptions = this.options.accessibility.keyboardNavigation.focusBorder, browserFocusElement = focusElement || svgElement.element;\n                // Set browser focus if possible\n                if (browserFocusElement &&\n                    browserFocusElement.focus) {\n                    // If there is no focusin-listener, add one to work around Edge\n                    // where Narrator is not reading out points despite calling focus().\n                    if (!(browserFocusElement.hcEvents &&\n                        browserFocusElement.hcEvents.focusin)) {\n                        addEvent(browserFocusElement, 'focusin', function () { });\n                    }\n                    browserFocusElement.focus();\n                    // Hide default focus ring\n                    if (focusBorderOptions.hideBrowserFocusOutline) {\n                        browserFocusElement.style.outline = 'none';\n                    }\n                }\n                if (this.focusElement) {\n                    this.focusElement.removeFocusBorder();\n                }\n                this.focusElement = svgElement;\n                this.renderFocusBorder();\n            }\n            /**\n             * Add hook to destroy focus border if SVG element is destroyed, unless\n             * hook already exists.\n             * @private\n             * @param el Element to add destroy hook to\n             */\n            function svgElementAddDestroyFocusBorderHook(el) {\n                if (el.focusBorderDestroyHook) {\n                    return;\n                }\n                const origDestroy = el.destroy;\n                el.destroy = function () {\n                    if (el.focusBorder && el.focusBorder.destroy) {\n                        el.focusBorder.destroy();\n                    }\n                    return origDestroy.apply(el, arguments);\n                };\n                el.focusBorderDestroyHook = origDestroy;\n            }\n            /**\n             * Add focus border functionality to SVGElements. Draws a new rect on top of\n             * element around its bounding box. This is used by multiple components.\n             *\n             * @private\n             * @function Highcharts.SVGElement#addFocusBorder\n             *\n             * @param {number} margin\n             *\n             * @param {SVGAttributes} attribs\n             */\n            function svgElementAddFocusBorder(margin, attribs) {\n                // Allow updating by just adding new border\n                if (this.focusBorder) {\n                    this.removeFocusBorder();\n                }\n                // Add the border rect\n                const bb = this.getBBox(), pad = pick(margin, 3), parent = this.parentGroup, scaleX = this.scaleX || parent && parent.scaleX, scaleY = this.scaleY || parent && parent.scaleY, oneDefined = scaleX ? !scaleY : scaleY, scaleBoth = oneDefined ? Math.abs(scaleX || scaleY || 1) :\n                    (Math.abs(scaleX || 1) + Math.abs(scaleY || 1)) / 2;\n                bb.x += this.translateX ? this.translateX : 0;\n                bb.y += this.translateY ? this.translateY : 0;\n                let borderPosX = bb.x - pad, borderPosY = bb.y - pad, borderWidth = bb.width + 2 * pad, borderHeight = bb.height + 2 * pad;\n                /**\n                 * For text elements, apply x and y offset, #11397.\n                 * @private\n                 */\n                function getTextAnchorCorrection(text) {\n                    let posXCorrection = 0, posYCorrection = 0;\n                    if (text.attr('text-anchor') === 'middle') {\n                        posXCorrection = posYCorrection = 0.5;\n                    }\n                    else if (!text.rotation) {\n                        posYCorrection = 0.75;\n                    }\n                    else {\n                        posXCorrection = 0.25;\n                    }\n                    return {\n                        x: posXCorrection,\n                        y: posYCorrection\n                    };\n                }\n                const isLabel = !!this.text;\n                if (this.element.nodeName === 'text' || isLabel) {\n                    const isRotated = !!this.rotation;\n                    const correction = !isLabel ? getTextAnchorCorrection(this) :\n                        {\n                            x: isRotated ? 1 : 0,\n                            y: 0\n                        };\n                    const attrX = +this.attr('x');\n                    const attrY = +this.attr('y');\n                    if (!isNaN(attrX)) {\n                        borderPosX = attrX - (bb.width * correction.x) - pad;\n                    }\n                    if (!isNaN(attrY)) {\n                        borderPosY = attrY - (bb.height * correction.y) - pad;\n                    }\n                    if (isLabel && isRotated) {\n                        const temp = borderWidth;\n                        borderWidth = borderHeight;\n                        borderHeight = temp;\n                        if (!isNaN(attrX)) {\n                            borderPosX = attrX - (bb.height * correction.x) - pad;\n                        }\n                        if (!isNaN(attrY)) {\n                            borderPosY = attrY - (bb.width * correction.y) - pad;\n                        }\n                    }\n                }\n                this.focusBorder = this.renderer.rect(borderPosX, borderPosY, borderWidth, borderHeight, parseInt((attribs && attribs.r || 0).toString(), 10) / scaleBoth)\n                    .addClass('highcharts-focus-border')\n                    .attr({\n                    zIndex: 99\n                })\n                    .add(parent);\n                if (!this.renderer.styledMode) {\n                    this.focusBorder.attr({\n                        stroke: attribs && attribs.stroke,\n                        'stroke-width': (attribs && attribs.strokeWidth || 0) / scaleBoth\n                    });\n                }\n                avgElementAddUpdateFocusBorderHooks(this, margin, attribs);\n                svgElementAddDestroyFocusBorderHook(this);\n            }\n            /**\n             * Add hooks to update the focus border of an element when the element\n             * size/position is updated, unless already added.\n             * @private\n             * @param el Element to add update hooks to\n             * @param updateParams Parameters to pass through to addFocusBorder when updating.\n             */\n            function avgElementAddUpdateFocusBorderHooks(el, ...updateParams) {\n                if (el.focusBorderUpdateHooks) {\n                    return;\n                }\n                el.focusBorderUpdateHooks = {};\n                svgElementBorderUpdateTriggers.forEach((trigger) => {\n                    const setterKey = trigger + 'Setter';\n                    const origSetter = el[setterKey] || el._defaultSetter;\n                    el.focusBorderUpdateHooks[setterKey] = origSetter;\n                    el[setterKey] = function () {\n                        const ret = origSetter.apply(el, arguments);\n                        el.addFocusBorder.apply(el, updateParams);\n                        return ret;\n                    };\n                });\n            }\n            /**\n             * Remove hook from SVG element added by addDestroyFocusBorderHook, if\n             * existing.\n             * @private\n             * @param el Element to remove destroy hook from\n             */\n            function svgElementRemoveDestroyFocusBorderHook(el) {\n                if (!el.focusBorderDestroyHook) {\n                    return;\n                }\n                el.destroy = el.focusBorderDestroyHook;\n                delete el.focusBorderDestroyHook;\n            }\n            /**\n             * Add focus border functionality to SVGElements. Draws a new rect on top of\n             * element around its bounding box. This is used by multiple components.\n             * @private\n             * @function Highcharts.SVGElement#removeFocusBorder\n             */\n            function svgElementRemoveFocusBorder() {\n                svgElementRemoveUpdateFocusBorderHooks(this);\n                svgElementRemoveDestroyFocusBorderHook(this);\n                if (this.focusBorder) {\n                    this.focusBorder.destroy();\n                    delete this.focusBorder;\n                }\n            }\n            /**\n             * Remove hooks from SVG element added by addUpdateFocusBorderHooks, if\n             * existing.\n             * @private\n             * @param el Element to remove update hooks from\n             */\n            function svgElementRemoveUpdateFocusBorderHooks(el) {\n                if (!el.focusBorderUpdateHooks) {\n                    return;\n                }\n                Object.keys(el.focusBorderUpdateHooks).forEach((setterKey) => {\n                    const origSetter = el.focusBorderUpdateHooks[setterKey];\n                    if (origSetter === el._defaultSetter) {\n                        delete el[setterKey];\n                    }\n                    else {\n                        el[setterKey] = origSetter;\n                    }\n                });\n                delete el.focusBorderUpdateHooks;\n            }\n        })(FocusBorderComposition || (FocusBorderComposition = {}));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return FocusBorderComposition;\n    });\n    _registerModule(_modules, 'Accessibility/Utils/Announcer.js', [_modules['Core/Renderer/HTML/AST.js'], _modules['Accessibility/Utils/DOMElementProvider.js'], _modules['Core/Globals.js'], _modules['Accessibility/Utils/HTMLUtilities.js'], _modules['Core/Utilities.js']], function (AST, DOMElementProvider, H, HU, U) {\n        /* *\n         *\n         *  (c) 2009-2024 Ã˜ystein Moseng\n         *\n         *  Create announcer to speak messages to screen readers and other AT.\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { doc } = H;\n        const { addClass, visuallyHideElement } = HU;\n        const { attr } = U;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        class Announcer {\n            /* *\n             *\n             *  Constructor\n             *\n             * */\n            constructor(chart, type) {\n                this.chart = chart;\n                this.domElementProvider = new DOMElementProvider();\n                this.announceRegion = this.addAnnounceRegion(type);\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            destroy() {\n                this.domElementProvider.destroyCreatedElements();\n            }\n            announce(message) {\n                AST.setElementHTML(this.announceRegion, message);\n                // Delete contents after a little while to avoid user finding the live\n                // region in the DOM.\n                if (this.clearAnnouncementRegionTimer) {\n                    clearTimeout(this.clearAnnouncementRegionTimer);\n                }\n                this.clearAnnouncementRegionTimer = setTimeout(() => {\n                    this.announceRegion.innerHTML = AST.emptyHTML;\n                    delete this.clearAnnouncementRegionTimer;\n                }, 3000);\n            }\n            addAnnounceRegion(type) {\n                const chartContainer = (this.chart.announcerContainer || this.createAnnouncerContainer()), div = this.domElementProvider.createElement('div');\n                attr(div, {\n                    'aria-hidden': false,\n                    'aria-live': type,\n                    'aria-atomic': true\n                });\n                if (this.chart.styledMode) {\n                    addClass(div, 'highcharts-visually-hidden');\n                }\n                else {\n                    visuallyHideElement(div);\n                }\n                chartContainer.appendChild(div);\n                return div;\n            }\n            createAnnouncerContainer() {\n                const chart = this.chart, container = doc.createElement('div');\n                attr(container, {\n                    'aria-hidden': false,\n                    'class': 'highcharts-announcer-container'\n                });\n                container.style.position = 'relative';\n                chart.renderTo.insertBefore(container, chart.renderTo.firstChild);\n                chart.announcerContainer = container;\n                return container;\n            }\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return Announcer;\n    });\n    _registerModule(_modules, 'Accessibility/Components/AnnotationsA11y.js', [_modules['Accessibility/Utils/HTMLUtilities.js']], function (HTMLUtilities) {\n        /* *\n         *\n         *  (c) 2009-2024 Ã˜ystein Moseng\n         *\n         *  Annotations accessibility code.\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { escapeStringForHTML, stripHTMLTagsFromString } = HTMLUtilities;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * Get list of all annotation labels in the chart.\n         *\n         * @private\n         * @param {Highcharts.Chart} chart The chart to get annotation info on.\n         * @return {Array<object>} The labels, or empty array if none.\n         */\n        function getChartAnnotationLabels(chart) {\n            const annotations = chart.annotations || [];\n            return annotations.reduce((acc, cur) => {\n                if (cur.options &&\n                    cur.options.visible !== false) {\n                    acc = acc.concat(cur.labels);\n                }\n                return acc;\n            }, []);\n        }\n        /**\n         * Get the text of an annotation label.\n         *\n         * @private\n         * @param {Object} label The annotation label object\n         * @return {string} The text in the label.\n         */\n        function getLabelText(label) {\n            return ((label.options &&\n                label.options.accessibility &&\n                label.options.accessibility.description) ||\n                (label.graphic &&\n                    label.graphic.text &&\n                    label.graphic.text.textStr) ||\n                '');\n        }\n        /**\n         * Describe an annotation label.\n         *\n         * @private\n         * @param {Object} label The annotation label object to describe\n         * @return {string} The description for the label.\n         */\n        function getAnnotationLabelDescription(label) {\n            const a11yDesc = (label.options &&\n                label.options.accessibility &&\n                label.options.accessibility.description);\n            if (a11yDesc) {\n                return a11yDesc;\n            }\n            const chart = label.chart;\n            const labelText = getLabelText(label);\n            const points = label.points;\n            const getAriaLabel = (point) => (point.graphic &&\n                point.graphic.element &&\n                point.graphic.element.getAttribute('aria-label') ||\n                '');\n            const getValueDesc = (point) => {\n                const valDesc = (point.accessibility &&\n                    point.accessibility.valueDescription ||\n                    getAriaLabel(point));\n                const seriesName = (point &&\n                    point.series.name ||\n                    '');\n                return (seriesName ? seriesName + ', ' : '') + 'data point ' + valDesc;\n            };\n            const pointValueDescriptions = points\n                .filter((p) => !!p.graphic) // Filter out mock points\n                .map(getValueDesc)\n                // Filter out points we can't describe\n                .filter((desc) => !!desc);\n            const numPoints = pointValueDescriptions.length;\n            const pointsSelector = numPoints > 1 ?\n                'MultiplePoints' : numPoints ?\n                'SinglePoint' : 'NoPoints';\n            const langFormatStr = ('accessibility.screenReaderSection.annotations.description' +\n                pointsSelector);\n            const context = {\n                annotationText: labelText,\n                annotation: label,\n                numPoints: numPoints,\n                annotationPoint: pointValueDescriptions[0],\n                additionalAnnotationPoints: pointValueDescriptions.slice(1)\n            };\n            return chart.langFormat(langFormatStr, context);\n        }\n        /**\n         * Return array of HTML strings for each annotation label in the chart.\n         *\n         * @private\n         * @param {Highcharts.Chart} chart The chart to get annotation info on.\n         * @return {Array<string>} Array of strings with HTML content for each annotation label.\n         */\n        function getAnnotationListItems(chart) {\n            const labels = getChartAnnotationLabels(chart);\n            return labels.map((label) => {\n                const desc = escapeStringForHTML(stripHTMLTagsFromString(getAnnotationLabelDescription(label), chart.renderer.forExport));\n                return desc ? `<li>${desc}</li>` : '';\n            });\n        }\n        /**\n         * Return the annotation info for a chart as string.\n         *\n         * @private\n         * @param {Highcharts.Chart} chart The chart to get annotation info on.\n         * @return {string} String with HTML content or empty string if no annotations.\n         */\n        function getAnnotationsInfoHTML(chart) {\n            const annotations = chart.annotations;\n            if (!(annotations && annotations.length)) {\n                return '';\n            }\n            const annotationItems = getAnnotationListItems(chart);\n            return `<ul style=\"list-style-type: none\">${annotationItems.join(' ')}</ul>`;\n        }\n        /**\n         * Return the texts for the annotation(s) connected to a point, or empty array\n         * if none.\n         *\n         * @private\n         * @param {Highcharts.Point} point The data point to get the annotation info from.\n         * @return {Array<string>} Annotation texts\n         */\n        function getPointAnnotationTexts(point) {\n            const labels = getChartAnnotationLabels(point.series.chart);\n            const pointLabels = labels\n                .filter((label) => label.points.indexOf(point) > -1);\n            if (!pointLabels.length) {\n                return [];\n            }\n            return pointLabels.map((label) => `${getLabelText(label)}`);\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        const AnnotationsA11y = {\n            getAnnotationsInfoHTML,\n            getAnnotationLabelDescription,\n            getAnnotationListItems,\n            getPointAnnotationTexts\n        };\n\n        return AnnotationsA11y;\n    });\n    _registerModule(_modules, 'Accessibility/Components/InfoRegionsComponent.js', [_modules['Accessibility/A11yI18n.js'], _modules['Accessibility/AccessibilityComponent.js'], _modules['Accessibility/Utils/Announcer.js'], _modules['Accessibility/Components/AnnotationsA11y.js'], _modules['Core/Renderer/HTML/AST.js'], _modules['Accessibility/Utils/ChartUtilities.js'], _modules['Core/Templating.js'], _modules['Core/Globals.js'], _modules['Accessibility/Utils/HTMLUtilities.js'], _modules['Core/Utilities.js']], function (A11yI18n, AccessibilityComponent, Announcer, AnnotationsA11y, AST, CU, F, H, HU, U) {\n        /* *\n         *\n         *  (c) 2009-2024 Ã˜ystein Moseng\n         *\n         *  Accessibility component for chart info region and table.\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { getAnnotationsInfoHTML } = AnnotationsA11y;\n        const { getAxisDescription, getAxisRangeDescription, getChartTitle, unhideChartElementFromAT } = CU;\n        const { format } = F;\n        const { doc } = H;\n        const { addClass, getElement, getHeadingTagNameForElement, stripHTMLTagsFromString, visuallyHideElement } = HU;\n        const { attr, pick, replaceNested } = U;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /* eslint-disable valid-jsdoc */\n        /**\n         * @private\n         */\n        function getTableSummary(chart) {\n            return chart.langFormat('accessibility.table.tableSummary', { chart: chart });\n        }\n        /**\n         * @private\n         */\n        function getTypeDescForMapChart(chart, formatContext) {\n            return formatContext.mapTitle ?\n                chart.langFormat('accessibility.chartTypes.mapTypeDescription', formatContext) :\n                chart.langFormat('accessibility.chartTypes.unknownMap', formatContext);\n        }\n        /**\n         * @private\n         */\n        function getTypeDescForCombinationChart(chart, formatContext) {\n            return chart.langFormat('accessibility.chartTypes.combinationChart', formatContext);\n        }\n        /**\n         * @private\n         */\n        function getTypeDescForEmptyChart(chart, formatContext) {\n            return chart.langFormat('accessibility.chartTypes.emptyChart', formatContext);\n        }\n        /**\n         * @private\n         */\n        function buildTypeDescriptionFromSeries(chart, types, context) {\n            const firstType = types[0], typeExplanation = chart.langFormat('accessibility.seriesTypeDescriptions.' + firstType, context), multi = chart.series && chart.series.length < 2 ? 'Single' : 'Multiple';\n            return (chart.langFormat('accessibility.chartTypes.' + firstType + multi, context) ||\n                chart.langFormat('accessibility.chartTypes.default' + multi, context)) + (typeExplanation ? ' ' + typeExplanation : '');\n        }\n        /**\n         * Return simplified explanation of chart type. Some types will not be\n         * familiar to most users, but in those cases we try to add an explanation\n         * of the type.\n         *\n         * @private\n         * @function Highcharts.Chart#getTypeDescription\n         * @param {Array<string>} types The series types in this chart.\n         * @return {string} The text description of the chart type.\n         */\n        function getTypeDescription(chart, types) {\n            const firstType = types[0], firstSeries = chart.series && chart.series[0] || {}, mapTitle = chart.mapView && chart.mapView.geoMap &&\n                chart.mapView.geoMap.title, formatContext = {\n                numSeries: chart.series.length,\n                numPoints: firstSeries.points && firstSeries.points.length,\n                chart,\n                mapTitle\n            };\n            if (!firstType) {\n                return getTypeDescForEmptyChart(chart, formatContext);\n            }\n            if (firstType === 'map' || firstType === 'tiledwebmap') {\n                return getTypeDescForMapChart(chart, formatContext);\n            }\n            if (chart.types.length > 1) {\n                return getTypeDescForCombinationChart(chart, formatContext);\n            }\n            return buildTypeDescriptionFromSeries(chart, types, formatContext);\n        }\n        /**\n         * @private\n         */\n        function stripEmptyHTMLTags(str) {\n            // Scan alert #[71]: Loop for nested patterns\n            return replaceNested(str, [/<([\\w\\-.:!]+)\\b[^<>]*>\\s*<\\/\\1>/g, '']);\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The InfoRegionsComponent class\n         *\n         * @private\n         * @class\n         * @name Highcharts.InfoRegionsComponent\n         */\n        class InfoRegionsComponent extends AccessibilityComponent {\n            constructor() {\n                /* *\n                 *\n                 *  Properties\n                 *\n                 * */\n                super(...arguments);\n                this.screenReaderSections = {};\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /* eslint-disable valid-jsdoc */\n            /**\n             * Init the component\n             * @private\n             */\n            init() {\n                const chart = this.chart;\n                const component = this;\n                this.initRegionsDefinitions();\n                this.addEvent(chart, 'aftergetTableAST', function (e) {\n                    component.onDataTableCreated(e);\n                });\n                this.addEvent(chart, 'afterViewData', function (e) {\n                    if (e.wasHidden) {\n                        component.dataTableDiv = e.element;\n                        // Use a small delay to give browsers & AT time to\n                        // register the new table.\n                        setTimeout(function () {\n                            component.focusDataTable();\n                        }, 300);\n                    }\n                });\n                this.addEvent(chart, 'afterHideData', function () {\n                    if (component.viewDataTableButton) {\n                        component.viewDataTableButton\n                            .setAttribute('aria-expanded', 'false');\n                    }\n                });\n                if (chart.exporting) {\n                    // Needed when print logic in exporting does not trigger\n                    // rerendering thus repositioning of screen reader DOM elements\n                    // (#21554)\n                    this.addEvent(chart, 'afterPrint', function () {\n                        component.updateAllScreenReaderSections();\n                    });\n                }\n                this.announcer = new Announcer(chart, 'assertive');\n            }\n            /**\n             * @private\n             */\n            initRegionsDefinitions() {\n                const component = this, accessibilityOptions = this.chart.options.accessibility;\n                this.screenReaderSections = {\n                    before: {\n                        element: null,\n                        buildContent: function (chart) {\n                            const formatter = accessibilityOptions.screenReaderSection\n                                .beforeChartFormatter;\n                            return formatter ? formatter(chart) :\n                                component.defaultBeforeChartFormatter(chart);\n                        },\n                        insertIntoDOM: function (el, chart) {\n                            chart.renderTo.insertBefore(el, chart.renderTo.firstChild);\n                        },\n                        afterInserted: function () {\n                            if (typeof component.sonifyButtonId !== 'undefined') {\n                                component.initSonifyButton(component.sonifyButtonId);\n                            }\n                            if (typeof component.dataTableButtonId !== 'undefined') {\n                                component.initDataTableButton(component.dataTableButtonId);\n                            }\n                        }\n                    },\n                    after: {\n                        element: null,\n                        buildContent: function (chart) {\n                            const formatter = accessibilityOptions.screenReaderSection\n                                .afterChartFormatter;\n                            return formatter ? formatter(chart) :\n                                component.defaultAfterChartFormatter();\n                        },\n                        insertIntoDOM: function (el, chart) {\n                            chart.renderTo.insertBefore(el, chart.container.nextSibling);\n                        },\n                        afterInserted: function () {\n                            if (component.chart.accessibility &&\n                                accessibilityOptions.keyboardNavigation.enabled) {\n                                component.chart.accessibility\n                                    .keyboardNavigation.updateExitAnchor(); // #15986\n                            }\n                        }\n                    }\n                };\n            }\n            /**\n             * Called on chart render. Have to update the sections on render, in order\n             * to get a11y info from series.\n             */\n            onChartRender() {\n                this.linkedDescriptionElement = this.getLinkedDescriptionElement();\n                this.setLinkedDescriptionAttrs();\n                this.updateAllScreenReaderSections();\n            }\n            updateAllScreenReaderSections() {\n                const component = this;\n                Object.keys(this.screenReaderSections).forEach(function (regionKey) {\n                    component.updateScreenReaderSection(regionKey);\n                });\n            }\n            /**\n             * @private\n             */\n            getLinkedDescriptionElement() {\n                const chartOptions = this.chart.options, linkedDescOption = chartOptions.accessibility.linkedDescription;\n                if (!linkedDescOption) {\n                    return;\n                }\n                if (typeof linkedDescOption !== 'string') {\n                    return linkedDescOption;\n                }\n                const query = format(linkedDescOption, this.chart), queryMatch = doc.querySelectorAll(query);\n                if (queryMatch.length === 1) {\n                    return queryMatch[0];\n                }\n            }\n            /**\n             * @private\n             */\n            setLinkedDescriptionAttrs() {\n                const el = this.linkedDescriptionElement;\n                if (el) {\n                    el.setAttribute('aria-hidden', 'true');\n                    addClass(el, 'highcharts-linked-description');\n                }\n            }\n            /**\n             * @private\n             * @param {string} regionKey\n             * The name/key of the region to update\n             */\n            updateScreenReaderSection(regionKey) {\n                const chart = this.chart;\n                const region = this.screenReaderSections[regionKey];\n                const content = region.buildContent(chart);\n                const sectionDiv = region.element = (region.element || this.createElement('div'));\n                const hiddenDiv = (sectionDiv.firstChild || this.createElement('div'));\n                if (content) {\n                    this.setScreenReaderSectionAttribs(sectionDiv, regionKey);\n                    AST.setElementHTML(hiddenDiv, content);\n                    sectionDiv.appendChild(hiddenDiv);\n                    region.insertIntoDOM(sectionDiv, chart);\n                    if (chart.styledMode) {\n                        addClass(hiddenDiv, 'highcharts-visually-hidden');\n                    }\n                    else {\n                        visuallyHideElement(hiddenDiv);\n                    }\n                    unhideChartElementFromAT(chart, hiddenDiv);\n                    if (region.afterInserted) {\n                        region.afterInserted();\n                    }\n                }\n                else {\n                    if (sectionDiv.parentNode) {\n                        sectionDiv.parentNode.removeChild(sectionDiv);\n                    }\n                    region.element = null;\n                }\n            }\n            /**\n             * Apply a11y attributes to a screen reader info section\n             * @private\n             * @param {Highcharts.HTMLDOMElement} sectionDiv The section element\n             * @param {string} regionKey Name/key of the region we are setting attrs for\n             */\n            setScreenReaderSectionAttribs(sectionDiv, regionKey) {\n                const chart = this.chart, labelText = chart.langFormat('accessibility.screenReaderSection.' + regionKey +\n                    'RegionLabel', { chart: chart, chartTitle: getChartTitle(chart) }), sectionId = `highcharts-screen-reader-region-${regionKey}-${chart.index}`;\n                attr(sectionDiv, {\n                    id: sectionId,\n                    'aria-label': labelText || void 0\n                });\n                // Sections are wrapped to be positioned relatively to chart in case\n                // elements inside are tabbed to.\n                sectionDiv.style.position = 'relative';\n                if (labelText) {\n                    sectionDiv.setAttribute('role', chart.options.accessibility.landmarkVerbosity === 'all' ?\n                        'region' : 'group');\n                }\n            }\n            /**\n             * @private\n             */\n            defaultBeforeChartFormatter() {\n                const chart = this.chart, format = chart.options.accessibility.screenReaderSection\n                    .beforeChartFormat;\n                if (!format) {\n                    return '';\n                }\n                const axesDesc = this.getAxesDescription(), shouldHaveSonifyBtn = (chart.sonify &&\n                    chart.options.sonification &&\n                    chart.options.sonification.enabled), sonifyButtonId = 'highcharts-a11y-sonify-data-btn-' +\n                    chart.index, dataTableButtonId = 'hc-linkto-highcharts-data-table-' +\n                    chart.index, annotationsList = getAnnotationsInfoHTML(chart), annotationsTitleStr = chart.langFormat('accessibility.screenReaderSection.annotations.heading', { chart: chart }), context = {\n                    headingTagName: getHeadingTagNameForElement(chart.renderTo),\n                    chartTitle: getChartTitle(chart),\n                    typeDescription: this.getTypeDescriptionText(),\n                    chartSubtitle: this.getSubtitleText(),\n                    chartLongdesc: this.getLongdescText(),\n                    xAxisDescription: axesDesc.xAxis,\n                    yAxisDescription: axesDesc.yAxis,\n                    playAsSoundButton: shouldHaveSonifyBtn ?\n                        this.getSonifyButtonText(sonifyButtonId) : '',\n                    viewTableButton: chart.getCSV ?\n                        this.getDataTableButtonText(dataTableButtonId) : '',\n                    annotationsTitle: annotationsList ? annotationsTitleStr : '',\n                    annotationsList: annotationsList\n                }, formattedString = A11yI18n.i18nFormat(format, context, chart);\n                this.dataTableButtonId = dataTableButtonId;\n                this.sonifyButtonId = sonifyButtonId;\n                return stripEmptyHTMLTags(formattedString);\n            }\n            /**\n             * @private\n             */\n            defaultAfterChartFormatter() {\n                const chart = this.chart;\n                const format = chart.options.accessibility.screenReaderSection\n                    .afterChartFormat;\n                if (!format) {\n                    return '';\n                }\n                const context = { endOfChartMarker: this.getEndOfChartMarkerText() };\n                const formattedString = A11yI18n.i18nFormat(format, context, chart);\n                return stripEmptyHTMLTags(formattedString);\n            }\n            /**\n             * @private\n             */\n            getLinkedDescription() {\n                const el = this.linkedDescriptionElement, content = el && el.innerHTML || '';\n                return stripHTMLTagsFromString(content, this.chart.renderer.forExport);\n            }\n            /**\n             * @private\n             */\n            getLongdescText() {\n                const chartOptions = this.chart.options, captionOptions = chartOptions.caption, captionText = captionOptions && captionOptions.text, linkedDescription = this.getLinkedDescription();\n                return (chartOptions.accessibility.description ||\n                    linkedDescription ||\n                    captionText ||\n                    '');\n            }\n            /**\n             * @private\n             */\n            getTypeDescriptionText() {\n                const chart = this.chart;\n                return chart.types ?\n                    chart.options.accessibility.typeDescription ||\n                        getTypeDescription(chart, chart.types) : '';\n            }\n            /**\n             * @private\n             */\n            getDataTableButtonText(buttonId) {\n                const chart = this.chart, buttonText = chart.langFormat('accessibility.table.viewAsDataTableButtonText', { chart: chart, chartTitle: getChartTitle(chart) });\n                return '<button id=\"' + buttonId + '\">' + buttonText + '</button>';\n            }\n            /**\n             * @private\n             */\n            getSonifyButtonText(buttonId) {\n                const chart = this.chart;\n                if (chart.options.sonification &&\n                    chart.options.sonification.enabled === false) {\n                    return '';\n                }\n                const buttonText = chart.langFormat('accessibility.sonification.playAsSoundButtonText', { chart: chart, chartTitle: getChartTitle(chart) });\n                return '<button id=\"' + buttonId + '\">' + buttonText + '</button>';\n            }\n            /**\n             * @private\n             */\n            getSubtitleText() {\n                const subtitle = (this.chart.options.subtitle);\n                return stripHTMLTagsFromString(subtitle && subtitle.text || '', this.chart.renderer.forExport);\n            }\n            /**\n             * @private\n             */\n            getEndOfChartMarkerText() {\n                const endMarkerId = `highcharts-end-of-chart-marker-${this.chart.index}`, endMarker = getElement(endMarkerId);\n                if (endMarker) {\n                    return endMarker.outerHTML;\n                }\n                const chart = this.chart, markerText = chart.langFormat('accessibility.screenReaderSection.endOfChartMarker', { chart: chart }), id = 'highcharts-end-of-chart-marker-' + chart.index;\n                return '<div id=\"' + id + '\">' + markerText + '</div>';\n            }\n            /**\n             * @private\n             * @param {Highcharts.Dictionary<string>} e\n             */\n            onDataTableCreated(e) {\n                const chart = this.chart;\n                if (chart.options.accessibility.enabled) {\n                    if (this.viewDataTableButton) {\n                        this.viewDataTableButton.setAttribute('aria-expanded', 'true');\n                    }\n                    const attributes = e.tree.attributes || {};\n                    attributes.tabindex = -1;\n                    attributes.summary = getTableSummary(chart);\n                    e.tree.attributes = attributes;\n                }\n            }\n            /**\n             * @private\n             */\n            focusDataTable() {\n                const tableDiv = this.dataTableDiv, table = tableDiv && tableDiv.getElementsByTagName('table')[0];\n                if (table && table.focus) {\n                    table.focus();\n                }\n            }\n            /**\n             * @private\n             * @param {string} sonifyButtonId\n             */\n            initSonifyButton(sonifyButtonId) {\n                const el = this.sonifyButton = getElement(sonifyButtonId);\n                const chart = this.chart;\n                const defaultHandler = (e) => {\n                    if (el) {\n                        el.setAttribute('aria-hidden', 'true');\n                        el.setAttribute('aria-label', '');\n                    }\n                    e.preventDefault();\n                    e.stopPropagation();\n                    const announceMsg = chart.langFormat('accessibility.sonification.playAsSoundClickAnnouncement', { chart: chart });\n                    this.announcer.announce(announceMsg);\n                    setTimeout(() => {\n                        if (el) {\n                            el.removeAttribute('aria-hidden');\n                            el.removeAttribute('aria-label');\n                        }\n                        if (chart.sonify) {\n                            chart.sonify();\n                        }\n                    }, 1000); // Delay to let screen reader speak the button press\n                };\n                if (el && chart) {\n                    el.setAttribute('tabindex', -1);\n                    el.onclick = function (e) {\n                        const onPlayAsSoundClick = (chart.options.accessibility &&\n                            chart.options.accessibility.screenReaderSection\n                                .onPlayAsSoundClick);\n                        (onPlayAsSoundClick || defaultHandler).call(this, e, chart);\n                    };\n                }\n            }\n            /**\n             * Set attribs and handlers for default viewAsDataTable button if exists.\n             * @private\n             * @param {string} tableButtonId\n             */\n            initDataTableButton(tableButtonId) {\n                const el = this.viewDataTableButton = getElement(tableButtonId), chart = this.chart, tableId = tableButtonId.replace('hc-linkto-', '');\n                if (el) {\n                    attr(el, {\n                        tabindex: -1,\n                        'aria-expanded': !!getElement(tableId)\n                    });\n                    el.onclick = chart.options.accessibility\n                        .screenReaderSection.onViewDataTableClick ||\n                        function () {\n                            chart.viewData();\n                        };\n                }\n            }\n            /**\n             * Return object with text description of each of the chart's axes.\n             * @private\n             */\n            getAxesDescription() {\n                const chart = this.chart, shouldDescribeColl = function (collectionKey, defaultCondition) {\n                    const axes = chart[collectionKey];\n                    return axes.length > 1 || axes[0] &&\n                        pick(axes[0].options.accessibility &&\n                            axes[0].options.accessibility.enabled, defaultCondition);\n                }, hasNoMap = !!chart.types &&\n                    chart.types.indexOf('map') < 0 &&\n                    chart.types.indexOf('treemap') < 0 &&\n                    chart.types.indexOf('tilemap') < 0, hasCartesian = !!chart.hasCartesianSeries, showXAxes = shouldDescribeColl('xAxis', !chart.angular && hasCartesian && hasNoMap), showYAxes = shouldDescribeColl('yAxis', hasCartesian && hasNoMap), desc = {};\n                if (showXAxes) {\n                    desc.xAxis = this.getAxisDescriptionText('xAxis');\n                }\n                if (showYAxes) {\n                    desc.yAxis = this.getAxisDescriptionText('yAxis');\n                }\n                return desc;\n            }\n            /**\n             * @private\n             */\n            getAxisDescriptionText(collectionKey) {\n                const chart = this.chart;\n                const axes = chart[collectionKey];\n                return chart.langFormat('accessibility.axis.' + collectionKey + 'Description' + (axes.length > 1 ? 'Plural' : 'Singular'), {\n                    chart: chart,\n                    names: axes.map(function (axis) {\n                        return getAxisDescription(axis);\n                    }),\n                    ranges: axes.map(function (axis) {\n                        return getAxisRangeDescription(axis);\n                    }),\n                    numAxes: axes.length\n                });\n            }\n            /**\n             * Remove component traces\n             */\n            destroy() {\n                if (this.announcer) {\n                    this.announcer.destroy();\n                }\n            }\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return InfoRegionsComponent;\n    });\n    _registerModule(_modules, 'Accessibility/Components/MenuComponent.js', [_modules['Core/Utilities.js'], _modules['Accessibility/AccessibilityComponent.js'], _modules['Accessibility/KeyboardNavigationHandler.js'], _modules['Accessibility/Utils/ChartUtilities.js'], _modules['Accessibility/Utils/HTMLUtilities.js']], function (U, AccessibilityComponent, KeyboardNavigationHandler, ChartUtilities, HTMLUtilities) {\n        /* *\n         *\n         *  (c) 2009-2024 Ã˜ystein Moseng\n         *\n         *  Accessibility component for exporting menu.\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { attr } = U;\n        const { getChartTitle, unhideChartElementFromAT } = ChartUtilities;\n        const { getFakeMouseEvent } = HTMLUtilities;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * Get the wrapped export button element of a chart.\n         * @private\n         */\n        function getExportMenuButtonElement(chart) {\n            return chart.exportSVGElements && chart.exportSVGElements[0];\n        }\n        /**\n         * @private\n         */\n        function exportingShouldHaveA11y(chart) {\n            const exportingOpts = chart.options.exporting, exportButton = getExportMenuButtonElement(chart);\n            return !!(exportingOpts &&\n                exportingOpts.enabled !== false &&\n                exportingOpts.accessibility &&\n                exportingOpts.accessibility.enabled &&\n                exportButton &&\n                exportButton.element);\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The MenuComponent class\n         *\n         * @private\n         * @class\n         * @name Highcharts.MenuComponent\n         */\n        class MenuComponent extends AccessibilityComponent {\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /* eslint-disable valid-jsdoc */\n            /**\n             * Init the component\n             */\n            init() {\n                const chart = this.chart, component = this;\n                this.addEvent(chart, 'exportMenuShown', function () {\n                    component.onMenuShown();\n                });\n                this.addEvent(chart, 'exportMenuHidden', function () {\n                    component.onMenuHidden();\n                });\n                this.createProxyGroup();\n            }\n            /**\n             * @private\n             */\n            onMenuHidden() {\n                const menu = this.chart.exportContextMenu;\n                if (menu) {\n                    menu.setAttribute('aria-hidden', 'true');\n                }\n                this.setExportButtonExpandedState('false');\n            }\n            /**\n             * @private\n             */\n            onMenuShown() {\n                const chart = this.chart, menu = chart.exportContextMenu;\n                if (menu) {\n                    this.addAccessibleContextMenuAttribs();\n                    unhideChartElementFromAT(chart, menu);\n                }\n                this.setExportButtonExpandedState('true');\n            }\n            /**\n             * @private\n             * @param {string} stateStr\n             */\n            setExportButtonExpandedState(stateStr) {\n                if (this.exportButtonProxy) {\n                    this.exportButtonProxy.innerElement.setAttribute('aria-expanded', stateStr);\n                }\n            }\n            /**\n             * Called on each render of the chart. We need to update positioning of the\n             * proxy overlay.\n             */\n            onChartRender() {\n                const chart = this.chart, focusEl = chart.focusElement, a11y = chart.accessibility;\n                this.proxyProvider.clearGroup('chartMenu');\n                this.proxyMenuButton();\n                if (this.exportButtonProxy &&\n                    focusEl &&\n                    focusEl === chart.exportingGroup) {\n                    if (focusEl.focusBorder) {\n                        chart.setFocusToElement(focusEl, this.exportButtonProxy.innerElement);\n                    }\n                    else if (a11y) {\n                        a11y.keyboardNavigation.tabindexContainer.focus();\n                    }\n                }\n            }\n            /**\n             * @private\n             */\n            proxyMenuButton() {\n                const chart = this.chart;\n                const proxyProvider = this.proxyProvider;\n                const buttonEl = getExportMenuButtonElement(chart);\n                if (exportingShouldHaveA11y(chart) && buttonEl) {\n                    this.exportButtonProxy = proxyProvider.addProxyElement('chartMenu', { click: buttonEl }, 'button', {\n                        'aria-label': chart.langFormat('accessibility.exporting.menuButtonLabel', {\n                            chart: chart,\n                            chartTitle: getChartTitle(chart)\n                        }),\n                        'aria-expanded': false,\n                        title: chart.options.lang.contextButtonTitle || null\n                    });\n                }\n            }\n            /**\n             * @private\n             */\n            createProxyGroup() {\n                const chart = this.chart;\n                if (chart && this.proxyProvider) {\n                    this.proxyProvider.addGroup('chartMenu');\n                }\n            }\n            /**\n             * @private\n             */\n            addAccessibleContextMenuAttribs() {\n                const chart = this.chart, exportList = chart.exportDivElements;\n                if (exportList && exportList.length) {\n                    // Set tabindex on the menu items to allow focusing by script\n                    // Set role to give screen readers a chance to pick up the contents\n                    exportList.forEach((item) => {\n                        if (item) {\n                            if (item.tagName === 'LI' &&\n                                !(item.children && item.children.length)) {\n                                item.setAttribute('tabindex', -1);\n                            }\n                            else {\n                                item.setAttribute('aria-hidden', 'true');\n                            }\n                        }\n                    });\n                    // Set accessibility properties on parent div\n                    const parentDiv = (exportList[0] && exportList[0].parentNode);\n                    if (parentDiv) {\n                        attr(parentDiv, {\n                            'aria-hidden': void 0,\n                            'aria-label': chart.langFormat('accessibility.exporting.chartMenuLabel', { chart }),\n                            role: 'list' // Needed for webkit/VO\n                        });\n                    }\n                }\n            }\n            /**\n             * Get keyboard navigation handler for this component.\n             * @private\n             */\n            getKeyboardNavigation() {\n                const keys = this.keyCodes, chart = this.chart, component = this;\n                return new KeyboardNavigationHandler(chart, {\n                    keyCodeMap: [\n                        // Arrow prev handler\n                        [\n                            [keys.left, keys.up],\n                            function () {\n                                return component.onKbdPrevious(this);\n                            }\n                        ],\n                        // Arrow next handler\n                        [\n                            [keys.right, keys.down],\n                            function () {\n                                return component.onKbdNext(this);\n                            }\n                        ],\n                        // Click handler\n                        [\n                            [keys.enter, keys.space],\n                            function () {\n                                return component.onKbdClick(this);\n                            }\n                        ]\n                    ],\n                    // Only run exporting navigation if exporting support exists and is\n                    // enabled on chart\n                    validate: function () {\n                        return !!chart.exporting &&\n                            chart.options.exporting.enabled !== false &&\n                            chart.options.exporting.accessibility.enabled !==\n                                false;\n                    },\n                    // Focus export menu button\n                    init: function () {\n                        const proxy = component.exportButtonProxy;\n                        const svgEl = component.chart.exportingGroup;\n                        if (proxy && svgEl) {\n                            chart.setFocusToElement(svgEl, proxy.innerElement);\n                        }\n                    },\n                    // Hide the menu\n                    terminate: function () {\n                        chart.hideExportMenu();\n                    }\n                });\n            }\n            /**\n             * @private\n             * @param {Highcharts.KeyboardNavigationHandler} keyboardNavigationHandler\n             * @return {number} Response code\n             */\n            onKbdPrevious(keyboardNavigationHandler) {\n                const chart = this.chart;\n                const a11yOptions = chart.options.accessibility;\n                const response = keyboardNavigationHandler.response;\n                // Try to highlight prev item in list. Highlighting e.g.\n                // separators will fail.\n                let i = chart.highlightedExportItemIx || 0;\n                while (i--) {\n                    if (chart.highlightExportItem(i)) {\n                        return response.success;\n                    }\n                }\n                // We failed, so wrap around or move to prev module\n                if (a11yOptions.keyboardNavigation.wrapAround) {\n                    chart.highlightLastExportItem();\n                    return response.success;\n                }\n                return response.prev;\n            }\n            /**\n             * @private\n             * @param {Highcharts.KeyboardNavigationHandler} keyboardNavigationHandler\n             * @return {number} Response code\n             */\n            onKbdNext(keyboardNavigationHandler) {\n                const chart = this.chart;\n                const a11yOptions = chart.options.accessibility;\n                const response = keyboardNavigationHandler.response;\n                // Try to highlight next item in list. Highlighting e.g.\n                // separators will fail.\n                for (let i = (chart.highlightedExportItemIx || 0) + 1; i < chart.exportDivElements.length; ++i) {\n                    if (chart.highlightExportItem(i)) {\n                        return response.success;\n                    }\n                }\n                // We failed, so wrap around or move to next module\n                if (a11yOptions.keyboardNavigation.wrapAround) {\n                    chart.highlightExportItem(0);\n                    return response.success;\n                }\n                return response.next;\n            }\n            /**\n             * @private\n             * @param {Highcharts.KeyboardNavigationHandler} keyboardNavigationHandler\n             * @return {number} Response code\n             */\n            onKbdClick(keyboardNavigationHandler) {\n                const chart = this.chart;\n                const curHighlightedItem = chart.exportDivElements[chart.highlightedExportItemIx];\n                const exportButtonElement = getExportMenuButtonElement(chart).element;\n                if (chart.openMenu) {\n                    this.fakeClickEvent(curHighlightedItem);\n                }\n                else {\n                    this.fakeClickEvent(exportButtonElement);\n                    chart.highlightExportItem(0);\n                }\n                return keyboardNavigationHandler.response.success;\n            }\n        }\n        /* *\n         *\n         *  Class Namespace\n         *\n         * */\n        (function (MenuComponent) {\n            /* *\n             *\n             *  Declarations\n             *\n             * */\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * @private\n             */\n            function compose(ChartClass) {\n                const chartProto = ChartClass.prototype;\n                if (!chartProto.hideExportMenu) {\n                    chartProto.hideExportMenu = chartHideExportMenu;\n                    chartProto.highlightExportItem = chartHighlightExportItem;\n                    chartProto.highlightLastExportItem = chartHighlightLastExportItem;\n                    chartProto.showExportMenu = chartShowExportMenu;\n                }\n            }\n            MenuComponent.compose = compose;\n            /**\n             * Show the export menu and focus the first item (if exists).\n             *\n             * @private\n             * @function Highcharts.Chart#showExportMenu\n             */\n            function chartShowExportMenu() {\n                const exportButton = getExportMenuButtonElement(this);\n                if (exportButton) {\n                    const el = exportButton.element;\n                    if (el.onclick) {\n                        el.onclick(getFakeMouseEvent('click'));\n                    }\n                }\n            }\n            /**\n             * @private\n             * @function Highcharts.Chart#hideExportMenu\n             */\n            function chartHideExportMenu() {\n                const chart = this, exportList = chart.exportDivElements;\n                if (exportList && chart.exportContextMenu && chart.openMenu) {\n                    // Reset hover states etc.\n                    exportList.forEach((el) => {\n                        if (el &&\n                            el.className === 'highcharts-menu-item' &&\n                            el.onmouseout) {\n                            el.onmouseout(getFakeMouseEvent('mouseout'));\n                        }\n                    });\n                    chart.highlightedExportItemIx = 0;\n                    // Hide the menu div\n                    chart.exportContextMenu.hideMenu();\n                    // Make sure the chart has focus and can capture keyboard events\n                    chart.container.focus();\n                }\n            }\n            /**\n             * Highlight export menu item by index.\n             *\n             * @private\n             * @function Highcharts.Chart#highlightExportItem\n             */\n            function chartHighlightExportItem(ix) {\n                const listItem = this.exportDivElements && this.exportDivElements[ix];\n                const curHighlighted = this.exportDivElements &&\n                    this.exportDivElements[this.highlightedExportItemIx];\n                if (listItem &&\n                    listItem.tagName === 'LI' &&\n                    !(listItem.children && listItem.children.length)) {\n                    // Test if we have focus support for SVG elements\n                    const hasSVGFocusSupport = !!(this.renderTo.getElementsByTagName('g')[0] || {}).focus;\n                    // Only focus if we can set focus back to the elements after\n                    // destroying the menu (#7422)\n                    if (listItem.focus && hasSVGFocusSupport) {\n                        listItem.focus();\n                    }\n                    if (curHighlighted && curHighlighted.onmouseout) {\n                        curHighlighted.onmouseout(getFakeMouseEvent('mouseout'));\n                    }\n                    if (listItem.onmouseover) {\n                        listItem.onmouseover(getFakeMouseEvent('mouseover'));\n                    }\n                    this.highlightedExportItemIx = ix;\n                    return true;\n                }\n                return false;\n            }\n            /**\n             * Try to highlight the last valid export menu item.\n             *\n             * @private\n             * @function Highcharts.Chart#highlightLastExportItem\n             */\n            function chartHighlightLastExportItem() {\n                const chart = this;\n                if (chart.exportDivElements) {\n                    let i = chart.exportDivElements.length;\n                    while (i--) {\n                        if (chart.highlightExportItem(i)) {\n                            return true;\n                        }\n                    }\n                }\n                return false;\n            }\n        })(MenuComponent || (MenuComponent = {}));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return MenuComponent;\n    });\n    _registerModule(_modules, 'Accessibility/KeyboardNavigation.js', [_modules['Core/Globals.js'], _modules['Accessibility/Components/MenuComponent.js'], _modules['Core/Utilities.js'], _modules['Accessibility/Utils/EventProvider.js'], _modules['Accessibility/Utils/HTMLUtilities.js']], function (H, MenuComponent, U, EventProvider, HTMLUtilities) {\n        /* *\n         *\n         *  (c) 2009-2024 Ã˜ystein Moseng\n         *\n         *  Main keyboard navigation handling.\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { doc, win } = H;\n        const { addEvent, defined, fireEvent } = U;\n        const { getElement, simulatedEventTarget } = HTMLUtilities;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The KeyboardNavigation class, containing the overall keyboard navigation\n         * logic for the chart.\n         *\n         * @requires modules/accessibility\n         *\n         * @private\n         * @class\n         * @param {Highcharts.Chart} chart\n         *        Chart object\n         * @param {Object} components\n         *        Map of component names to AccessibilityComponent objects.\n         * @name Highcharts.KeyboardNavigation\n         */\n        class KeyboardNavigation {\n            /* *\n             *\n             *  Constructor\n             *\n             * */\n            constructor(chart, components) {\n                this.currentModuleIx = NaN;\n                this.modules = [];\n                this.init(chart, components);\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Initialize the class\n             * @private\n             * @param {Highcharts.Chart} chart\n             *        Chart object\n             * @param {Object} components\n             *        Map of component names to AccessibilityComponent objects.\n             */\n            init(chart, components) {\n                const ep = this.eventProvider = new EventProvider();\n                this.chart = chart;\n                this.components = components;\n                this.modules = [];\n                this.currentModuleIx = 0;\n                this.update();\n                ep.addEvent(this.tabindexContainer, 'keydown', (e) => this.onKeydown(e));\n                ep.addEvent(this.tabindexContainer, 'focus', (e) => this.onFocus(e));\n                ['mouseup', 'touchend'].forEach((eventName) => ep.addEvent(doc, eventName, (e) => this.onMouseUp(e)));\n                ['mousedown', 'touchstart'].forEach((eventName) => ep.addEvent(chart.renderTo, eventName, () => {\n                    this.isClickingChart = true;\n                }));\n            }\n            /**\n             * Update the modules for the keyboard navigation.\n             * @param {Array<string>} [order]\n             *        Array specifying the tab order of the components.\n             */\n            update(order) {\n                const a11yOptions = this.chart.options.accessibility, keyboardOptions = a11yOptions && a11yOptions.keyboardNavigation, components = this.components;\n                this.updateContainerTabindex();\n                if (keyboardOptions &&\n                    keyboardOptions.enabled &&\n                    order &&\n                    order.length) {\n                    // We (still) have keyboard navigation. Update module list\n                    this.modules = order.reduce(function (modules, componentName) {\n                        const navModules = components[componentName]\n                            .getKeyboardNavigation();\n                        return modules.concat(navModules);\n                    }, []);\n                    this.updateExitAnchor();\n                }\n                else {\n                    this.modules = [];\n                    this.currentModuleIx = 0;\n                    this.removeExitAnchor();\n                }\n            }\n            /**\n             * We use an exit anchor to move focus out of chart whenever we want, by\n             * setting focus to this div and not preventing the default tab action. We\n             * also use this when users come back into the chart by tabbing back, in\n             * order to navigate from the end of the chart.\n             * @private\n             */\n            updateExitAnchor() {\n                const endMarkerId = `highcharts-end-of-chart-marker-${this.chart.index}`, endMarker = getElement(endMarkerId);\n                this.removeExitAnchor();\n                if (endMarker) {\n                    this.makeElementAnExitAnchor(endMarker);\n                    this.exitAnchor = endMarker;\n                }\n                else {\n                    this.createExitAnchor();\n                }\n            }\n            /**\n             * Move to prev/next module.\n             * @private\n             * @param {number} direction\n             * Direction to move. +1 for next, -1 for prev.\n             * @return {boolean}\n             * True if there was a valid module in direction.\n             */\n            move(direction) {\n                const curModule = this.modules && this.modules[this.currentModuleIx];\n                if (curModule && curModule.terminate) {\n                    curModule.terminate(direction);\n                }\n                // Remove existing focus border if any\n                if (this.chart.focusElement) {\n                    this.chart.focusElement.removeFocusBorder();\n                }\n                this.currentModuleIx += direction;\n                const newModule = this.modules && this.modules[this.currentModuleIx];\n                if (newModule) {\n                    if (newModule.validate && !newModule.validate()) {\n                        return this.move(direction); // Invalid module, recurse\n                    }\n                    if (newModule.init) {\n                        newModule.init(direction); // Valid module, init it\n                        return true;\n                    }\n                }\n                // No module\n                this.currentModuleIx = 0; // Reset counter\n                // Set focus to chart or exit anchor depending on direction\n                this.exiting = true;\n                if (direction > 0) {\n                    this.exitAnchor && this.exitAnchor.focus();\n                }\n                else {\n                    this.tabindexContainer.focus();\n                }\n                return false;\n            }\n            /**\n             * Function to run on container focus\n             * @private\n             * @param {global.FocusEvent} e Browser focus event.\n             */\n            onFocus(e) {\n                const chart = this.chart, focusComesFromChart = (e.relatedTarget &&\n                    chart.container.contains(e.relatedTarget)), a11yOptions = chart.options.accessibility, keyboardOptions = a11yOptions && a11yOptions.keyboardNavigation, enabled = keyboardOptions && keyboardOptions.enabled;\n                // Init keyboard nav if tabbing into chart\n                if (enabled &&\n                    !this.exiting &&\n                    !this.tabbingInBackwards &&\n                    !this.isClickingChart &&\n                    !focusComesFromChart) {\n                    const ix = this.getFirstValidModuleIx();\n                    if (ix !== null) {\n                        this.currentModuleIx = ix;\n                        this.modules[ix].init(1);\n                    }\n                }\n                this.keyboardReset = false;\n                this.exiting = false;\n            }\n            /**\n             * Reset chart navigation state if we mouse click and it's not already\n             * reset. Reset fully if outside the chart, otherwise just hide focus\n             * indicator.\n             * @private\n             */\n            onMouseUp(e) {\n                delete this.isClickingChart;\n                if (!this.keyboardReset &&\n                    e.relatedTarget !== simulatedEventTarget) {\n                    const chart = this.chart;\n                    if (!e.target ||\n                        !chart.container.contains(e.target)) {\n                        const curMod = this.modules &&\n                            this.modules[this.currentModuleIx || 0];\n                        if (curMod && curMod.terminate) {\n                            curMod.terminate();\n                        }\n                        this.currentModuleIx = 0;\n                    }\n                    if (chart.focusElement) {\n                        chart.focusElement.removeFocusBorder();\n                        delete chart.focusElement;\n                    }\n                    this.keyboardReset = true;\n                }\n            }\n            /**\n             * Function to run on keydown\n             * @private\n             * @param {global.KeyboardEvent} ev Browser keydown event.\n             */\n            onKeydown(ev) {\n                const e = ev || win.event, curNavModule = (this.modules &&\n                    this.modules.length &&\n                    this.modules[this.currentModuleIx]);\n                let preventDefault;\n                const target = e.target;\n                if (target &&\n                    target.nodeName === 'INPUT' &&\n                    !target.classList.contains('highcharts-a11y-proxy-element')) {\n                    return;\n                }\n                // Used for resetting nav state when clicking outside chart\n                this.keyboardReset = false;\n                // Used for sending focus out of the chart by the modules.\n                this.exiting = false;\n                // If there is a nav module for the current index, run it.\n                // Otherwise, we are outside of the chart in some direction.\n                if (curNavModule) {\n                    const response = curNavModule.run(e);\n                    if (response === curNavModule.response.success) {\n                        preventDefault = true;\n                    }\n                    else if (response === curNavModule.response.prev) {\n                        preventDefault = this.move(-1);\n                    }\n                    else if (response === curNavModule.response.next) {\n                        preventDefault = this.move(1);\n                    }\n                    if (preventDefault) {\n                        e.preventDefault();\n                        e.stopPropagation();\n                    }\n                }\n            }\n            /**\n             * Chart container should have tabindex if navigation is enabled.\n             * @private\n             */\n            updateContainerTabindex() {\n                const a11yOptions = this.chart.options.accessibility, keyboardOptions = a11yOptions && a11yOptions.keyboardNavigation, shouldHaveTabindex = !(keyboardOptions && keyboardOptions.enabled === false), chart = this.chart, container = chart.container;\n                let tabindexContainer;\n                if (chart.renderTo.hasAttribute('tabindex')) {\n                    container.removeAttribute('tabindex');\n                    tabindexContainer = chart.renderTo;\n                }\n                else {\n                    tabindexContainer = container;\n                }\n                this.tabindexContainer = tabindexContainer;\n                const curTabindex = tabindexContainer.getAttribute('tabindex');\n                if (shouldHaveTabindex && !curTabindex) {\n                    tabindexContainer.setAttribute('tabindex', '0');\n                }\n                else if (!shouldHaveTabindex) {\n                    chart.container.removeAttribute('tabindex');\n                }\n            }\n            /**\n             * Add new exit anchor to the chart.\n             * @private\n             */\n            createExitAnchor() {\n                const chart = this.chart, exitAnchor = this.exitAnchor = doc.createElement('div');\n                chart.renderTo.appendChild(exitAnchor);\n                this.makeElementAnExitAnchor(exitAnchor);\n            }\n            /**\n             * Add attributes and events to an element to make it function as an\n             * exit anchor.\n             * @private\n             */\n            makeElementAnExitAnchor(el) {\n                const chartTabindex = this.tabindexContainer.getAttribute('tabindex') || 0;\n                el.setAttribute('class', 'highcharts-exit-anchor');\n                el.setAttribute('tabindex', chartTabindex);\n                el.setAttribute('aria-hidden', false);\n                // Handle focus\n                this.addExitAnchorEventsToEl(el);\n            }\n            /**\n             * Destroy the exit anchor and remove from DOM.\n             * @private\n             */\n            removeExitAnchor() {\n                // Remove event from element and from eventRemovers array to prevent\n                // memory leak (#20329).\n                if (this.exitAnchor) {\n                    const el = this.eventProvider.eventRemovers.find((el) => el.element === this.exitAnchor);\n                    if (el && defined(el.remover)) {\n                        this.eventProvider.removeEvent(el.remover);\n                    }\n                    if (this.exitAnchor.parentNode) {\n                        this.exitAnchor.parentNode.removeChild(this.exitAnchor);\n                    }\n                    delete this.exitAnchor;\n                }\n            }\n            /**\n             * Add focus handler to exit anchor element.\n             * @private\n             */\n            addExitAnchorEventsToEl(element) {\n                const chart = this.chart, keyboardNavigation = this;\n                this.eventProvider.addEvent(element, 'focus', function (ev) {\n                    const e = ev || win.event, focusComesFromChart = (e.relatedTarget &&\n                        chart.container.contains(e.relatedTarget)), comingInBackwards = !(focusComesFromChart || keyboardNavigation.exiting);\n                    if (chart.focusElement) {\n                        delete chart.focusElement;\n                    }\n                    if (comingInBackwards) {\n                        // Focus the container instead\n                        keyboardNavigation.tabbingInBackwards = true;\n                        keyboardNavigation.tabindexContainer.focus();\n                        delete keyboardNavigation.tabbingInBackwards;\n                        e.preventDefault();\n                        // Move to last valid keyboard nav module\n                        // Note the we don't run it, just set the index\n                        if (keyboardNavigation.modules &&\n                            keyboardNavigation.modules.length) {\n                            keyboardNavigation.currentModuleIx =\n                                keyboardNavigation.modules.length - 1;\n                            const curModule = keyboardNavigation.modules[keyboardNavigation.currentModuleIx];\n                            // Validate the module\n                            if (curModule &&\n                                curModule.validate && !curModule.validate()) {\n                                // Invalid.\n                                // Try moving backwards to find next valid.\n                                keyboardNavigation.move(-1);\n                            }\n                            else if (curModule) {\n                                // We have a valid module, init it\n                                curModule.init(-1);\n                            }\n                        }\n                    }\n                    else {\n                        // Don't skip the next focus, we only skip once.\n                        keyboardNavigation.exiting = false;\n                    }\n                });\n            }\n            /**\n             * Get the ix of the first module that either does not require validation or\n             * validates positively.\n             * @private\n             */\n            getFirstValidModuleIx() {\n                const len = this.modules.length;\n                for (let i = 0; i < len; ++i) {\n                    const mod = this.modules[i];\n                    if (!mod.validate || mod.validate()) {\n                        return i;\n                    }\n                }\n                return null;\n            }\n            /**\n             * Remove all traces of keyboard navigation.\n             * @private\n             */\n            destroy() {\n                this.removeExitAnchor();\n                this.eventProvider.removeAddedEvents();\n                this.chart.container.removeAttribute('tabindex');\n            }\n        }\n        /* *\n         *\n         *  Class Namespace\n         *\n         * */\n        (function (KeyboardNavigation) {\n            /* *\n             *\n             *  Declarations\n             *\n             * */\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Composition function.\n             * @private\n             */\n            function compose(ChartClass) {\n                MenuComponent.compose(ChartClass);\n                const chartProto = ChartClass.prototype;\n                if (!chartProto.dismissPopupContent) {\n                    chartProto.dismissPopupContent = chartDismissPopupContent;\n                    addEvent(doc, 'keydown', documentOnKeydown);\n                }\n                return ChartClass;\n            }\n            KeyboardNavigation.compose = compose;\n            /**\n             * Dismiss popup content in chart, including export menu and tooltip.\n             * @private\n             */\n            function chartDismissPopupContent() {\n                const chart = this;\n                fireEvent(this, 'dismissPopupContent', {}, function () {\n                    if (chart.tooltip) {\n                        chart.tooltip.hide(0);\n                    }\n                    chart.hideExportMenu();\n                });\n            }\n            /**\n             * Add event listener to document to detect ESC key press and dismiss\n             * hover/popup content.\n             * @private\n             */\n            function documentOnKeydown(e) {\n                const keycode = e.which || e.keyCode;\n                const esc = 27;\n                if (keycode === esc && H.charts) {\n                    H.charts.forEach((chart) => {\n                        if (chart && chart.dismissPopupContent) {\n                            chart.dismissPopupContent();\n                        }\n                    });\n                }\n            }\n        })(KeyboardNavigation || (KeyboardNavigation = {}));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return KeyboardNavigation;\n    });\n    _registerModule(_modules, 'Accessibility/Components/LegendComponent.js', [_modules['Core/Animation/AnimationUtilities.js'], _modules['Core/Globals.js'], _modules['Core/Legend/Legend.js'], _modules['Core/Utilities.js'], _modules['Accessibility/AccessibilityComponent.js'], _modules['Accessibility/KeyboardNavigationHandler.js'], _modules['Accessibility/Utils/ChartUtilities.js'], _modules['Accessibility/Utils/HTMLUtilities.js']], function (A, H, Legend, U, AccessibilityComponent, KeyboardNavigationHandler, CU, HU) {\n        /* *\n         *\n         *  (c) 2009-2024 Ã˜ystein Moseng\n         *\n         *  Accessibility component for chart legend.\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { animObject } = A;\n        const { doc } = H;\n        const { addEvent, fireEvent, isNumber, pick, syncTimeout } = U;\n        const { getChartTitle } = CU;\n        const { stripHTMLTagsFromString: stripHTMLTags, addClass, removeClass } = HU;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * @private\n         */\n        function scrollLegendToItem(legend, itemIx) {\n            const itemPage = (legend.allItems[itemIx].legendItem || {}).pageIx, curPage = legend.currentPage;\n            if (typeof itemPage !== 'undefined' && itemPage + 1 !== curPage) {\n                legend.scroll(1 + itemPage - curPage);\n            }\n        }\n        /**\n         * @private\n         */\n        function shouldDoLegendA11y(chart) {\n            const items = chart.legend && chart.legend.allItems, legendA11yOptions = (chart.options.legend.accessibility || {}), unsupportedColorAxis = chart.colorAxis && chart.colorAxis.some((c) => !c.dataClasses || !c.dataClasses.length);\n            return !!(items && items.length &&\n                !unsupportedColorAxis &&\n                legendA11yOptions.enabled !== false);\n        }\n        /**\n         * @private\n         */\n        function setLegendItemHoverState(hoverActive, item) {\n            const legendItem = item.legendItem || {};\n            item.setState(hoverActive ? 'hover' : '', true);\n            for (const key of ['group', 'label', 'symbol']) {\n                const svgElement = legendItem[key];\n                const element = svgElement && svgElement.element || svgElement;\n                if (element) {\n                    fireEvent(element, hoverActive ? 'mouseover' : 'mouseout');\n                }\n            }\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The LegendComponent class\n         *\n         * @private\n         * @class\n         * @name Highcharts.LegendComponent\n         */\n        class LegendComponent extends AccessibilityComponent {\n            constructor() {\n                /* *\n                 *\n                 *  Properties\n                 *\n                 * */\n                super(...arguments);\n                this.highlightedLegendItemIx = NaN;\n                this.proxyGroup = null;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Init the component\n             * @private\n             */\n            init() {\n                const component = this;\n                this.recreateProxies();\n                // Note: Chart could create legend dynamically, so events cannot be\n                // tied to the component's chart's current legend.\n                // @todo 1. attach component to created legends\n                // @todo 2. move listeners to composition and access `this.component`\n                this.addEvent(Legend, 'afterScroll', function () {\n                    if (this.chart === component.chart) {\n                        component.proxyProvider.updateGroupProxyElementPositions('legend');\n                        component.updateLegendItemProxyVisibility();\n                        if (component.highlightedLegendItemIx > -1) {\n                            this.chart.highlightLegendItem(component.highlightedLegendItemIx);\n                        }\n                    }\n                });\n                this.addEvent(Legend, 'afterPositionItem', function (e) {\n                    if (this.chart === component.chart && this.chart.renderer) {\n                        component.updateProxyPositionForItem(e.item);\n                    }\n                });\n                this.addEvent(Legend, 'afterRender', function () {\n                    if (this.chart === component.chart &&\n                        this.chart.renderer &&\n                        component.recreateProxies()) {\n                        syncTimeout(() => component.proxyProvider\n                            .updateGroupProxyElementPositions('legend'), animObject(pick(this.chart.renderer.globalAnimation, true)).duration);\n                    }\n                });\n            }\n            /**\n             * Update visibility of legend items when using paged legend\n             * @private\n             */\n            updateLegendItemProxyVisibility() {\n                const chart = this.chart;\n                const legend = chart.legend;\n                const items = legend.allItems || [];\n                const curPage = legend.currentPage || 1;\n                const clipHeight = legend.clipHeight || 0;\n                let legendItem;\n                items.forEach((item) => {\n                    if (item.a11yProxyElement) {\n                        const hasPages = legend.pages && legend.pages.length;\n                        const proxyEl = item.a11yProxyElement.element;\n                        let hide = false;\n                        legendItem = item.legendItem || {};\n                        if (hasPages) {\n                            const itemPage = legendItem.pageIx || 0;\n                            const y = legendItem.y || 0;\n                            const h = legendItem.label ?\n                                Math.round(legendItem.label.getBBox().height) :\n                                0;\n                            hide = y + h - legend.pages[itemPage] > clipHeight ||\n                                itemPage !== curPage - 1;\n                        }\n                        if (hide) {\n                            if (chart.styledMode) {\n                                addClass(proxyEl, 'highcharts-a11y-invisible');\n                            }\n                            else {\n                                proxyEl.style.visibility = 'hidden';\n                            }\n                        }\n                        else {\n                            removeClass(proxyEl, 'highcharts-a11y-invisible');\n                            proxyEl.style.visibility = '';\n                        }\n                    }\n                });\n            }\n            /**\n             * @private\n             */\n            onChartRender() {\n                if (!shouldDoLegendA11y(this.chart)) {\n                    this.removeProxies();\n                }\n            }\n            /**\n             * @private\n             */\n            highlightAdjacentLegendPage(direction) {\n                const chart = this.chart;\n                const legend = chart.legend;\n                const curPageIx = legend.currentPage || 1;\n                const newPageIx = curPageIx + direction;\n                const pages = legend.pages || [];\n                if (newPageIx > 0 && newPageIx <= pages.length) {\n                    let i = 0, res;\n                    for (const item of legend.allItems) {\n                        if (((item.legendItem || {}).pageIx || 0) + 1 === newPageIx) {\n                            res = chart.highlightLegendItem(i);\n                            if (res) {\n                                this.highlightedLegendItemIx = i;\n                            }\n                        }\n                        ++i;\n                    }\n                }\n            }\n            /**\n             * @private\n             */\n            updateProxyPositionForItem(item) {\n                if (item.a11yProxyElement) {\n                    item.a11yProxyElement.refreshPosition();\n                }\n            }\n            /**\n             * Returns false if legend a11y is disabled and proxies were not created,\n             * true otherwise.\n             * @private\n             */\n            recreateProxies() {\n                const focusedElement = doc.activeElement;\n                const proxyGroup = this.proxyGroup;\n                const shouldRestoreFocus = focusedElement && proxyGroup &&\n                    proxyGroup.contains(focusedElement);\n                this.removeProxies();\n                if (shouldDoLegendA11y(this.chart)) {\n                    this.addLegendProxyGroup();\n                    this.proxyLegendItems();\n                    this.updateLegendItemProxyVisibility();\n                    this.updateLegendTitle();\n                    if (shouldRestoreFocus) {\n                        this.chart.highlightLegendItem(this.highlightedLegendItemIx);\n                    }\n                    return true;\n                }\n                return false;\n            }\n            /**\n             * @private\n             */\n            removeProxies() {\n                this.proxyProvider.removeGroup('legend');\n            }\n            /**\n             * @private\n             */\n            updateLegendTitle() {\n                const chart = this.chart;\n                const legendTitle = stripHTMLTags((chart.legend &&\n                    chart.legend.options.title &&\n                    chart.legend.options.title.text ||\n                    '').replace(/<br ?\\/?>/g, ' '), chart.renderer.forExport);\n                const legendLabel = chart.langFormat('accessibility.legend.legendLabel' + (legendTitle ? '' : 'NoTitle'), {\n                    chart,\n                    legendTitle,\n                    chartTitle: getChartTitle(chart)\n                });\n                this.proxyProvider.updateGroupAttrs('legend', {\n                    'aria-label': legendLabel\n                });\n            }\n            /**\n             * @private\n             */\n            addLegendProxyGroup() {\n                const a11yOptions = this.chart.options.accessibility;\n                const groupRole = a11yOptions.landmarkVerbosity === 'all' ?\n                    'region' : null;\n                this.proxyGroup = this.proxyProvider.addGroup('legend', 'ul', {\n                    // Filled by updateLegendTitle, to keep up to date without\n                    // recreating group\n                    'aria-label': '_placeholder_',\n                    role: groupRole\n                });\n            }\n            /**\n             * @private\n             */\n            proxyLegendItems() {\n                const component = this, items = (this.chart.legend || {}).allItems || [];\n                let legendItem;\n                items.forEach((item) => {\n                    legendItem = item.legendItem || {};\n                    if (legendItem.label && legendItem.label.element) {\n                        component.proxyLegendItem(item);\n                    }\n                });\n            }\n            /**\n             * @private\n             * @param {Highcharts.BubbleLegendItem|Point|Highcharts.Series} item\n             */\n            proxyLegendItem(item) {\n                const legendItem = item.legendItem || {};\n                if (!legendItem.label || !legendItem.group) {\n                    return;\n                }\n                const itemLabel = this.chart.langFormat('accessibility.legend.legendItem', {\n                    chart: this.chart,\n                    itemName: stripHTMLTags(item.name, this.chart.renderer.forExport),\n                    item\n                });\n                const attribs = {\n                    tabindex: -1,\n                    'aria-pressed': item.visible,\n                    'aria-label': itemLabel\n                };\n                // Considers useHTML\n                const proxyPositioningElement = legendItem.group.div ?\n                    legendItem.label :\n                    legendItem.group;\n                item.a11yProxyElement = this.proxyProvider.addProxyElement('legend', {\n                    click: legendItem.label,\n                    visual: proxyPositioningElement.element\n                }, 'button', attribs);\n            }\n            /**\n             * Get keyboard navigation handler for this component.\n             * @private\n             */\n            getKeyboardNavigation() {\n                const keys = this.keyCodes, component = this, chart = this.chart;\n                return new KeyboardNavigationHandler(chart, {\n                    keyCodeMap: [\n                        [\n                            [keys.left, keys.right, keys.up, keys.down],\n                            function (keyCode) {\n                                return component.onKbdArrowKey(this, keyCode);\n                            }\n                        ],\n                        [\n                            [keys.enter, keys.space],\n                            function () {\n                                return component.onKbdClick(this);\n                            }\n                        ],\n                        [\n                            [keys.pageDown, keys.pageUp],\n                            function (keyCode) {\n                                const direction = keyCode === keys.pageDown ? 1 : -1;\n                                component.highlightAdjacentLegendPage(direction);\n                                return this.response.success;\n                            }\n                        ]\n                    ],\n                    validate: function () {\n                        return component.shouldHaveLegendNavigation();\n                    },\n                    init: function () {\n                        chart.highlightLegendItem(0);\n                        component.highlightedLegendItemIx = 0;\n                    },\n                    terminate: function () {\n                        component.highlightedLegendItemIx = -1;\n                        chart.legend.allItems.forEach((item) => setLegendItemHoverState(false, item));\n                    }\n                });\n            }\n            /**\n             * Arrow key navigation\n             * @private\n             */\n            onKbdArrowKey(keyboardNavigationHandler, key) {\n                const { keyCodes: { left, up }, highlightedLegendItemIx, chart } = this, numItems = chart.legend.allItems.length, wrapAround = chart.options.accessibility\n                    .keyboardNavigation.wrapAround, direction = (key === left || key === up) ? -1 : 1, res = chart.highlightLegendItem(highlightedLegendItemIx + direction);\n                if (res) {\n                    this.highlightedLegendItemIx += direction;\n                }\n                else if (wrapAround && numItems > 1) {\n                    this.highlightedLegendItemIx = direction > 0 ?\n                        0 : numItems - 1;\n                    chart.highlightLegendItem(this.highlightedLegendItemIx);\n                }\n                return keyboardNavigationHandler.response.success;\n            }\n            /**\n             * @private\n             * @param {Highcharts.KeyboardNavigationHandler} keyboardNavigationHandler\n             * @return {number} Response code\n             */\n            onKbdClick(keyboardNavigationHandler) {\n                const legendItem = this.chart.legend.allItems[this.highlightedLegendItemIx];\n                if (legendItem && legendItem.a11yProxyElement) {\n                    legendItem.a11yProxyElement.click();\n                }\n                return keyboardNavigationHandler.response.success;\n            }\n            /**\n             * @private\n             */\n            shouldHaveLegendNavigation() {\n                if (!shouldDoLegendA11y(this.chart)) {\n                    return false;\n                }\n                const chart = this.chart, legendOptions = chart.options.legend || {}, legendA11yOptions = (legendOptions.accessibility || {});\n                return !!(chart.legend.display &&\n                    legendA11yOptions.keyboardNavigation &&\n                    legendA11yOptions.keyboardNavigation.enabled);\n            }\n            /**\n             * Clean up\n             * @private\n             */\n            destroy() {\n                this.removeProxies();\n            }\n        }\n        /* *\n         *\n         *  Class Namespace\n         *\n         * */\n        (function (LegendComponent) {\n            /* *\n             *\n             *  Declarations\n             *\n             * */\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Highlight legend item by index.\n             * @private\n             */\n            function chartHighlightLegendItem(ix) {\n                const items = this.legend.allItems;\n                const oldIx = this.accessibility &&\n                    this.accessibility.components.legend.highlightedLegendItemIx;\n                const itemToHighlight = items[ix], legendItem = itemToHighlight?.legendItem || {};\n                if (itemToHighlight) {\n                    if (isNumber(oldIx) && items[oldIx]) {\n                        setLegendItemHoverState(false, items[oldIx]);\n                    }\n                    scrollLegendToItem(this.legend, ix);\n                    const legendItemProp = legendItem.label;\n                    const proxyBtn = itemToHighlight.a11yProxyElement &&\n                        itemToHighlight.a11yProxyElement.innerElement;\n                    if (legendItemProp && legendItemProp.element && proxyBtn) {\n                        this.setFocusToElement(legendItemProp, proxyBtn);\n                    }\n                    setLegendItemHoverState(true, itemToHighlight);\n                    return true;\n                }\n                return false;\n            }\n            /**\n             * @private\n             */\n            function compose(ChartClass, LegendClass) {\n                const chartProto = ChartClass.prototype;\n                if (!chartProto.highlightLegendItem) {\n                    chartProto.highlightLegendItem = chartHighlightLegendItem;\n                    addEvent(LegendClass, 'afterColorizeItem', legendOnAfterColorizeItem);\n                }\n            }\n            LegendComponent.compose = compose;\n            /**\n             * Keep track of pressed state for legend items.\n             * @private\n             */\n            function legendOnAfterColorizeItem(e) {\n                const chart = this.chart, a11yOptions = chart.options.accessibility, legendItem = e.item;\n                if (a11yOptions.enabled && legendItem && legendItem.a11yProxyElement) {\n                    legendItem.a11yProxyElement.innerElement.setAttribute('aria-pressed', e.visible ? 'true' : 'false');\n                }\n            }\n        })(LegendComponent || (LegendComponent = {}));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return LegendComponent;\n    });\n    _registerModule(_modules, 'Stock/Navigator/ChartNavigatorComposition.js', [_modules['Core/Globals.js'], _modules['Core/Utilities.js']], function (H, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { isTouchDevice } = H;\n        const { addEvent, merge, pick } = U;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        const composedMembers = [];\n        /* *\n         *\n         *  Variables\n         *\n         * */\n        let NavigatorConstructor;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * @private\n         */\n        function compose(ChartClass, NavigatorClass) {\n            if (U.pushUnique(composedMembers, ChartClass)) {\n                const chartProto = ChartClass.prototype;\n                NavigatorConstructor = NavigatorClass;\n                chartProto.callbacks.push(onChartCallback);\n                addEvent(ChartClass, 'afterAddSeries', onChartAfterAddSeries);\n                addEvent(ChartClass, 'afterSetChartSize', onChartAfterSetChartSize);\n                addEvent(ChartClass, 'afterUpdate', onChartAfterUpdate);\n                addEvent(ChartClass, 'beforeRender', onChartBeforeRender);\n                addEvent(ChartClass, 'beforeShowResetZoom', onChartBeforeShowResetZoom);\n                addEvent(ChartClass, 'update', onChartUpdate);\n            }\n        }\n        /**\n         * Handle adding new series.\n         * @private\n         */\n        function onChartAfterAddSeries() {\n            if (this.navigator) {\n                // Recompute which series should be shown in navigator, and add them\n                this.navigator.setBaseSeries(null, false);\n            }\n        }\n        /**\n         * For stock charts, extend the Chart.setChartSize method so that we can set the\n         * final top position of the navigator once the height of the chart, including\n         * the legend, is determined. #367. We can't use Chart.getMargins, because\n         * labels offsets are not calculated yet.\n         * @private\n         */\n        function onChartAfterSetChartSize() {\n            const legend = this.legend, navigator = this.navigator;\n            let legendOptions, xAxis, yAxis;\n            if (navigator) {\n                legendOptions = legend && legend.options;\n                xAxis = navigator.xAxis;\n                yAxis = navigator.yAxis;\n                const { scrollbarHeight, scrollButtonSize } = navigator;\n                // Compute the top position\n                if (this.inverted) {\n                    navigator.left = navigator.opposite ?\n                        this.chartWidth - scrollbarHeight -\n                            navigator.height :\n                        this.spacing[3] + scrollbarHeight;\n                    navigator.top = this.plotTop + scrollButtonSize;\n                }\n                else {\n                    navigator.left = pick(xAxis.left, this.plotLeft + scrollButtonSize);\n                    navigator.top = navigator.navigatorOptions.top ||\n                        this.chartHeight -\n                            navigator.height -\n                            scrollbarHeight -\n                            (this.scrollbar?.options.margin || 0) -\n                            this.spacing[2] -\n                            (this.rangeSelector && this.extraBottomMargin ?\n                                this.rangeSelector.getHeight() :\n                                0) -\n                            ((legendOptions &&\n                                legendOptions.verticalAlign === 'bottom' &&\n                                legendOptions.layout !== 'proximate' && // #13392\n                                legendOptions.enabled &&\n                                !legendOptions.floating) ?\n                                legend.legendHeight +\n                                    pick(legendOptions.margin, 10) :\n                                0) -\n                            (this.titleOffset ? this.titleOffset[2] : 0);\n                }\n                if (xAxis && yAxis) { // False if navigator is disabled (#904)\n                    if (this.inverted) {\n                        xAxis.options.left = yAxis.options.left = navigator.left;\n                    }\n                    else {\n                        xAxis.options.top = yAxis.options.top = navigator.top;\n                    }\n                    xAxis.setAxisSize();\n                    yAxis.setAxisSize();\n                }\n            }\n        }\n        /**\n         * Initialize navigator, if no scrolling exists yet.\n         * @private\n         */\n        function onChartAfterUpdate(event) {\n            if (!this.navigator && !this.scroller &&\n                (this.options.navigator.enabled ||\n                    this.options.scrollbar.enabled)) {\n                this.scroller = this.navigator = new NavigatorConstructor(this);\n                if (pick(event.redraw, true)) {\n                    this.redraw(event.animation); // #7067\n                }\n            }\n        }\n        /**\n         * Initialize navigator for stock charts\n         * @private\n         */\n        function onChartBeforeRender() {\n            const options = this.options;\n            if (options.navigator.enabled ||\n                options.scrollbar.enabled) {\n                this.scroller = this.navigator = new NavigatorConstructor(this);\n            }\n        }\n        /**\n         * For Stock charts. For x only zooming, do not to create the zoom button\n         * because X axis zooming is already allowed by the Navigator and Range\n         * selector. (#9285)\n         * @private\n         */\n        function onChartBeforeShowResetZoom() {\n            const chartOptions = this.options, navigator = chartOptions.navigator, rangeSelector = chartOptions.rangeSelector;\n            if (((navigator && navigator.enabled) ||\n                (rangeSelector && rangeSelector.enabled)) &&\n                ((!isTouchDevice &&\n                    this.zooming.type === 'x') ||\n                    (isTouchDevice && this.zooming.pinchType === 'x'))) {\n                return false;\n            }\n        }\n        /**\n         * @private\n         */\n        function onChartCallback(chart) {\n            const navigator = chart.navigator;\n            // Initialize the navigator\n            if (navigator && chart.xAxis[0]) {\n                const extremes = chart.xAxis[0].getExtremes();\n                navigator.render(extremes.min, extremes.max);\n            }\n        }\n        /**\n         * Merge options, if no scrolling exists yet\n         * @private\n         */\n        function onChartUpdate(e) {\n            const navigatorOptions = (e.options.navigator || {}), scrollbarOptions = (e.options.scrollbar || {});\n            if (!this.navigator && !this.scroller &&\n                (navigatorOptions.enabled || scrollbarOptions.enabled)) {\n                merge(true, this.options.navigator, navigatorOptions);\n                merge(true, this.options.scrollbar, scrollbarOptions);\n                delete e.options.navigator;\n                delete e.options.scrollbar;\n            }\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        const ChartNavigatorComposition = {\n            compose\n        };\n\n        return ChartNavigatorComposition;\n    });\n    _registerModule(_modules, 'Core/Axis/NavigatorAxisComposition.js', [_modules['Core/Globals.js'], _modules['Core/Utilities.js']], function (H, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { isTouchDevice } = H;\n        const { addEvent, correctFloat, defined, isNumber, pick } = U;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * @private\n         */\n        function onAxisInit() {\n            const axis = this;\n            if (!axis.navigatorAxis) {\n                axis.navigatorAxis = new NavigatorAxisAdditions(axis);\n            }\n        }\n        /**\n         * For Stock charts, override selection zooming with some special features\n         * because X axis zooming is already allowed by the Navigator and Range\n         * selector.\n         * @private\n         */\n        function onAxisSetExtremes(e) {\n            const axis = this, chart = axis.chart, chartOptions = chart.options, navigator = chartOptions.navigator, navigatorAxis = axis.navigatorAxis, pinchType = chart.zooming.pinchType, rangeSelector = chartOptions.rangeSelector, zoomType = chart.zooming.type;\n            let zoomed;\n            if (axis.isXAxis &&\n                (navigator?.enabled || rangeSelector?.enabled)) {\n                // For y only zooming, ignore the X axis completely\n                if (zoomType === 'y' && e.trigger === 'zoom') {\n                    zoomed = false;\n                    // For xy zooming, record the state of the zoom before zoom selection,\n                    // then when the reset button is pressed, revert to this state. This\n                    // should apply only if the chart is initialized with a range (#6612),\n                    // otherwise zoom all the way out.\n                }\n                else if (((e.trigger === 'zoom' && zoomType === 'xy') ||\n                    (isTouchDevice && pinchType === 'xy')) &&\n                    axis.options.range) {\n                    const previousZoom = navigatorAxis.previousZoom;\n                    // Minimum defined, zooming in\n                    if (defined(e.min)) {\n                        navigatorAxis.previousZoom = [axis.min, axis.max];\n                        // Minimum undefined, resetting zoom\n                    }\n                    else if (previousZoom) {\n                        e.min = previousZoom[0];\n                        e.max = previousZoom[1];\n                        navigatorAxis.previousZoom = void 0;\n                    }\n                }\n            }\n            if (typeof zoomed !== 'undefined') {\n                e.preventDefault();\n            }\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * @private\n         * @class\n         */\n        class NavigatorAxisAdditions {\n            /* *\n             *\n             *  Static Functions\n             *\n             * */\n            /**\n             * @private\n             */\n            static compose(AxisClass) {\n                if (!AxisClass.keepProps.includes('navigatorAxis')) {\n                    AxisClass.keepProps.push('navigatorAxis');\n                    addEvent(AxisClass, 'init', onAxisInit);\n                    addEvent(AxisClass, 'setExtremes', onAxisSetExtremes);\n                }\n            }\n            /* *\n             *\n             *  Constructors\n             *\n             * */\n            constructor(axis) {\n                this.axis = axis;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * @private\n             */\n            destroy() {\n                this.axis = void 0;\n            }\n            /**\n             * Add logic to normalize the zoomed range in order to preserve the pressed\n             * state of range selector buttons\n             *\n             * @private\n             * @function Highcharts.Axis#toFixedRange\n             */\n            toFixedRange(pxMin, pxMax, fixedMin, fixedMax) {\n                const axis = this.axis, halfPointRange = (axis.pointRange || 0) / 2;\n                let newMin = pick(fixedMin, axis.translate(pxMin, true, !axis.horiz)), newMax = pick(fixedMax, axis.translate(pxMax, true, !axis.horiz));\n                // Add/remove half point range to/from the extremes (#1172)\n                if (!defined(fixedMin)) {\n                    newMin = correctFloat(newMin + halfPointRange);\n                }\n                if (!defined(fixedMax)) {\n                    newMax = correctFloat(newMax - halfPointRange);\n                }\n                if (!isNumber(newMin) || !isNumber(newMax)) { // #1195, #7411\n                    newMin = newMax = void 0;\n                }\n                return {\n                    min: newMin,\n                    max: newMax\n                };\n            }\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return NavigatorAxisAdditions;\n    });\n    _registerModule(_modules, 'Stock/Navigator/NavigatorDefaults.js', [_modules['Core/Color/Color.js'], _modules['Core/Series/SeriesRegistry.js']], function (Color, SeriesRegistry) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { parse: color } = Color;\n        const { seriesTypes } = SeriesRegistry;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        /**\n         * The navigator is a small series below the main series, displaying\n         * a view of the entire data set. It provides tools to zoom in and\n         * out on parts of the data as well as panning across the dataset.\n         *\n         * @product      highstock gantt\n         * @optionparent navigator\n         */\n        const NavigatorDefaults = {\n            /**\n             * Whether the navigator and scrollbar should adapt to updated data\n             * in the base X axis. When loading data async, as in the demo below,\n             * this should be `false`. Otherwise new data will trigger navigator\n             * redraw, which will cause unwanted looping. In the demo below, the\n             * data in the navigator is set only once. On navigating, only the main\n             * chart content is updated.\n             *\n             * @sample {highstock} stock/demo/lazy-loading/\n             *         Set to false with async data loading\n             *\n             * @type      {boolean}\n             * @default   true\n             * @apioption navigator.adaptToUpdatedData\n             */\n            /**\n             * An integer identifying the index to use for the base series, or a\n             * string representing the id of the series.\n             *\n             * **Note**: As of Highcharts 5.0, this is now a deprecated option.\n             * Prefer [series.showInNavigator](#plotOptions.series.showInNavigator).\n             *\n             * @see [series.showInNavigator](#plotOptions.series.showInNavigator)\n             *\n             * @deprecated\n             * @type      {number|string}\n             * @default   0\n             * @apioption navigator.baseSeries\n             */\n            /**\n             * Enable or disable the navigator.\n             *\n             * @sample {highstock} stock/navigator/enabled/\n             *         Disable the navigator\n             *\n             * @type      {boolean}\n             * @default   true\n             * @apioption navigator.enabled\n             */\n            /**\n             * When the chart is inverted, whether to draw the navigator on the\n             * opposite side.\n             *\n             * @type      {boolean}\n             * @default   false\n             * @since     5.0.8\n             * @apioption navigator.opposite\n             */\n            /**\n             * The height of the navigator.\n             *\n             * @sample {highstock} stock/navigator/height/\n             *         A higher navigator\n             */\n            height: 40,\n            /**\n             * The distance from the nearest element, the X axis or X axis labels.\n             *\n             * @sample {highstock} stock/navigator/margin/\n             *         A margin of 2 draws the navigator closer to the X axis labels\n             */\n            margin: 25,\n            /**\n             * Whether the mask should be inside the range marking the zoomed\n             * range, or outside. In Highcharts Stock 1.x it was always `false`.\n             *\n             * @sample {highstock} stock/demo/maskinside-false/\n             *         False, mask outside\n             *\n             * @since   2.0\n             */\n            maskInside: true,\n            /**\n             * Options for the handles for dragging the zoomed area.\n             *\n             * @sample {highstock} stock/navigator/handles/\n             *         Colored handles\n             */\n            handles: {\n                /**\n                 * Width for handles.\n                 *\n                 * @sample {highstock} stock/navigator/styled-handles/\n                 *         Styled handles\n                 *\n                 * @since   6.0.0\n                 */\n                width: 7,\n                /**\n                 * Border radius of the handles.\n                 *\n                 * @sample {highstock} stock/navigator/handles-border-radius/\n                 *      Border radius on the navigator handles.\n                 *\n                 * @since 11.4.2\n                 */\n                borderRadius: 0,\n                /**\n                 * Height for handles.\n                 *\n                 * @sample {highstock} stock/navigator/styled-handles/\n                 *         Styled handles\n                 *\n                 * @since   6.0.0\n                 */\n                height: 15,\n                /**\n                 * Array to define shapes of handles. 0-index for left, 1-index for\n                 * right.\n                 *\n                 * Additionally, the URL to a graphic can be given on this form:\n                 * `url(graphic.png)`. Note that for the image to be applied to\n                 * exported charts, its URL needs to be accessible by the export\n                 * server.\n                 *\n                 * Custom callbacks for symbol path generation can also be added to\n                 * `Highcharts.SVGRenderer.prototype.symbols`. The callback is then\n                 * used by its method name, as shown in the demo.\n                 *\n                 * @sample {highstock} stock/navigator/styled-handles/\n                 *         Styled handles\n                 *\n                 * @type    {Array<string>}\n                 * @default [\"navigator-handle\", \"navigator-handle\"]\n                 * @since   6.0.0\n                 */\n                symbols: ['navigator-handle', 'navigator-handle'],\n                /**\n                 * Allows to enable/disable handles.\n                 *\n                 * @since   6.0.0\n                 */\n                enabled: true,\n                /**\n                 * The width for the handle border and the stripes inside.\n                 *\n                 * @sample {highstock} stock/navigator/styled-handles/\n                 *         Styled handles\n                 *\n                 * @since     6.0.0\n                 * @apioption navigator.handles.lineWidth\n                 */\n                lineWidth: 1,\n                /**\n                 * The fill for the handle.\n                 *\n                 * @type    {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n                 */\n                backgroundColor: \"#f2f2f2\" /* Palette.neutralColor5 */,\n                /**\n                 * The stroke for the handle border and the stripes inside.\n                 *\n                 * @type    {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n                 */\n                borderColor: \"#999999\" /* Palette.neutralColor40 */\n            },\n            /**\n             * The color of the mask covering the areas of the navigator series\n             * that are currently not visible in the main series. The default\n             * color is bluish with an opacity of 0.3 to see the series below.\n             *\n             * @see In styled mode, the mask is styled with the\n             *      `.highcharts-navigator-mask` and\n             *      `.highcharts-navigator-mask-inside` classes.\n             *\n             * @sample {highstock} stock/navigator/maskfill/\n             *         Blue, semi transparent mask\n             *\n             * @type    {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             * @default rgba(102,133,194,0.3)\n             */\n            maskFill: color(\"#667aff\" /* Palette.highlightColor60 */).setOpacity(0.3).get(),\n            /**\n             * The color of the line marking the currently zoomed area in the\n             * navigator.\n             *\n             * @sample {highstock} stock/navigator/outline/\n             *         2px blue outline\n             *\n             * @type    {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             * @default #cccccc\n             */\n            outlineColor: \"#999999\" /* Palette.neutralColor40 */,\n            /**\n             * The width of the line marking the currently zoomed area in the\n             * navigator.\n             *\n             * @see In styled mode, the outline stroke width is set with the\n             *      `.highcharts-navigator-outline` class.\n             *\n             * @sample {highstock} stock/navigator/outline/\n             *         2px blue outline\n             *\n             * @type    {number}\n             */\n            outlineWidth: 1,\n            /**\n             * Options for the navigator series. Available options are the same\n             * as any series, documented at [plotOptions](#plotOptions.series)\n             * and [series](#series).\n             *\n             * Unless data is explicitly defined on navigator.series, the data\n             * is borrowed from the first series in the chart.\n             *\n             * Default series options for the navigator series are:\n             * ```js\n             * series: {\n             *     type: 'areaspline',\n             *     fillOpacity: 0.05,\n             *     dataGrouping: {\n             *         smoothed: true\n             *     },\n             *     lineWidth: 1,\n             *     marker: {\n             *         enabled: false\n             *     }\n             * }\n             * ```\n             *\n             * @see In styled mode, the navigator series is styled with the\n             *      `.highcharts-navigator-series` class.\n             *\n             * @sample {highstock} stock/navigator/series-data/\n             *         Using a separate data set for the navigator\n             * @sample {highstock} stock/navigator/series/\n             *         A green navigator series\n             *\n             * @type {*|Array<*>|Highcharts.SeriesOptionsType|Array<Highcharts.SeriesOptionsType>}\n             */\n            series: {\n                /**\n                 * The type of the navigator series.\n                 *\n                 * Heads up:\n                 * In column-type navigator, zooming is limited to at least one\n                 * point with its `pointRange`.\n                 *\n                 * @sample {highstock} stock/navigator/column/\n                 *         Column type navigator\n                 *\n                 * @type    {string}\n                 * @default {highstock} `areaspline` if defined, otherwise `line`\n                 * @default {gantt} gantt\n                 */\n                type: (typeof seriesTypes.areaspline === 'undefined' ?\n                    'line' :\n                    'areaspline'),\n                /**\n                 * The fill opacity of the navigator series.\n                 */\n                fillOpacity: 0.05,\n                /**\n                 * The pixel line width of the navigator series.\n                 */\n                lineWidth: 1,\n                /**\n                 * @ignore-option\n                 */\n                compare: null,\n                /**\n                 * @ignore-option\n                 */\n                sonification: {\n                    enabled: false\n                },\n                /**\n                 * Unless data is explicitly defined, the data is borrowed from the\n                 * first series in the chart.\n                 *\n                 * @type      {Array<number|Array<number|string|null>|object|null>}\n                 * @product   highstock\n                 * @apioption navigator.series.data\n                 */\n                /**\n                 * Data grouping options for the navigator series.\n                 *\n                 * @extends plotOptions.series.dataGrouping\n                 */\n                dataGrouping: {\n                    approximation: 'average',\n                    enabled: true,\n                    groupPixelWidth: 2,\n                    // Replace smoothed property by anchors, #12455.\n                    firstAnchor: 'firstPoint',\n                    anchor: 'middle',\n                    lastAnchor: 'lastPoint',\n                    // Day and week differs from plotOptions.series.dataGrouping\n                    units: [\n                        ['millisecond', [1, 2, 5, 10, 20, 25, 50, 100, 200, 500]],\n                        ['second', [1, 2, 5, 10, 15, 30]],\n                        ['minute', [1, 2, 5, 10, 15, 30]],\n                        ['hour', [1, 2, 3, 4, 6, 8, 12]],\n                        ['day', [1, 2, 3, 4]],\n                        ['week', [1, 2, 3]],\n                        ['month', [1, 3, 6]],\n                        ['year', null]\n                    ]\n                },\n                /**\n                 * Data label options for the navigator series. Data labels are\n                 * disabled by default on the navigator series.\n                 *\n                 * @extends plotOptions.series.dataLabels\n                 */\n                dataLabels: {\n                    enabled: false,\n                    zIndex: 2 // #1839\n                },\n                id: 'highcharts-navigator-series',\n                className: 'highcharts-navigator-series',\n                /**\n                 * Sets the fill color of the navigator series.\n                 *\n                 * @type      {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n                 * @apioption navigator.series.color\n                 */\n                /**\n                 * Line color for the navigator series. Allows setting the color\n                 * while disallowing the default candlestick setting.\n                 *\n                 * @type {Highcharts.ColorString|null}\n                 */\n                lineColor: null, // #4602\n                marker: {\n                    enabled: false\n                },\n                /**\n                 * Since Highcharts Stock v8, default value is the same as default\n                 * `pointRange` defined for a specific type (e.g. `null` for\n                 * column type).\n                 *\n                 * In Highcharts Stock version < 8, defaults to 0.\n                 *\n                 * @extends plotOptions.series.pointRange\n                 * @type {number|null}\n                 * @apioption navigator.series.pointRange\n                 */\n                /**\n                 * The threshold option. Setting it to 0 will make the default\n                 * navigator area series draw its area from the 0 value and up.\n                 *\n                 * @type {number|null}\n                 */\n                threshold: null\n            },\n            /**\n             * Enable or disable navigator sticking to right, while adding new\n             * points. If `undefined`, the navigator sticks to the axis maximum only\n             * if it was already at the maximum prior to adding points.\n             *\n             * @type      {boolean}\n             * @default   undefined\n             * @since 10.2.1\n             * @sample {highstock} stock/navigator/sticktomax-false/\n             * stickToMax set to false\n             * @apioption navigator.stickToMax\n             */\n            /**\n             * Options for the navigator X axis. Default series options for the\n             * navigator xAxis are:\n             * ```js\n             * xAxis: {\n             *     tickWidth: 0,\n             *     lineWidth: 0,\n             *     gridLineWidth: 1,\n             *     tickPixelInterval: 200,\n             *     labels: {\n             *            align: 'left',\n             *         style: {\n             *             color: '#888'\n             *         },\n             *         x: 3,\n             *         y: -4\n             *     }\n             * }\n             * ```\n             *\n             * @extends   xAxis\n             * @excluding linkedTo, maxZoom, minRange, opposite, range, scrollbar,\n             *            showEmpty, maxRange\n             */\n            xAxis: {\n                /**\n                 * Additional range on the right side of the xAxis. Works similar to\n                 * `xAxis.maxPadding`, but the value is set in terms of axis values,\n                 * percentage or pixels.\n                 *\n                 * If it's a number, it is interpreted as axis values, which in a\n                 * datetime axis equals milliseconds.\n                 *\n                 * If it's a percentage string, is interpreted as percentages of the\n                 * axis length. An overscroll of 50% will make a 100px axis 50px longer.\n                 *\n                 * If it's a pixel string, it is interpreted as a fixed pixel value, but\n                 * limited to 90% of the axis length.\n                 *\n                 * If it's undefined, the value is inherited from `xAxis.overscroll`.\n                 *\n                 * Can be set for both, main xAxis and navigator's xAxis.\n                 *\n                 * @type    {number | string | undefined}\n                 * @since   6.0.0\n                 * @apioption navigator.xAxis.overscroll\n                 */\n                className: 'highcharts-navigator-xaxis',\n                tickLength: 0,\n                lineWidth: 0,\n                gridLineColor: \"#e6e6e6\" /* Palette.neutralColor10 */,\n                id: 'navigator-x-axis',\n                gridLineWidth: 1,\n                tickPixelInterval: 200,\n                labels: {\n                    align: 'left',\n                    /**\n                     * @type {Highcharts.CSSObject}\n                     */\n                    style: {\n                        /** @ignore */\n                        color: \"#000000\" /* Palette.neutralColor100 */,\n                        /** @ignore */\n                        fontSize: '0.7em',\n                        /** @ignore */\n                        opacity: 0.6,\n                        /** @ignore */\n                        textOutline: '2px contrast'\n                    },\n                    x: 3,\n                    y: -4\n                },\n                crosshair: false\n            },\n            /**\n             * Options for the navigator Y axis. Default series options for the\n             * navigator yAxis are:\n             * ```js\n             * yAxis: {\n             *     gridLineWidth: 0,\n             *     startOnTick: false,\n             *     endOnTick: false,\n             *     minPadding: 0.1,\n             *     maxPadding: 0.1,\n             *     labels: {\n             *         enabled: false\n             *     },\n             *     title: {\n             *         text: null\n             *     },\n             *     tickWidth: 0\n             * }\n             * ```\n             *\n             * @extends   yAxis\n             * @excluding height, linkedTo, maxZoom, minRange, ordinal, range,\n             *            showEmpty, scrollbar, top, units, maxRange, minLength,\n             *            maxLength, resize\n             */\n            yAxis: {\n                className: 'highcharts-navigator-yaxis',\n                gridLineWidth: 0,\n                startOnTick: false,\n                endOnTick: false,\n                minPadding: 0.1,\n                id: 'navigator-y-axis',\n                maxPadding: 0.1,\n                labels: {\n                    enabled: false\n                },\n                crosshair: false,\n                title: {\n                    text: null\n                },\n                tickLength: 0,\n                tickWidth: 0\n            }\n        };\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * Maximum range which can be set using the navigator's handles.\n         * Opposite of [xAxis.minRange](#xAxis.minRange).\n         *\n         * @sample {highstock} stock/navigator/maxrange/\n         *         Defined max and min range\n         *\n         * @type      {number}\n         * @since     6.0.0\n         * @product   highstock gantt\n         * @apioption xAxis.maxRange\n         */\n        (''); // Keeps doclets above in JS file\n\n        return NavigatorDefaults;\n    });\n    _registerModule(_modules, 'Stock/Navigator/NavigatorSymbols.js', [_modules['Core/Renderer/SVG/Symbols.js'], _modules['Core/Utilities.js']], function (rect, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { relativeLength } = U;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        /**\n         * Draw one of the handles on the side of the zoomed range in the navigator.\n         * @private\n         */\n        function navigatorHandle(_x, _y, width, height, options = {}) {\n            const halfWidth = options.width ? options.width / 2 : width, markerPosition = 1.5, r = relativeLength(options.borderRadius || 0, Math.min(halfWidth * 2, height));\n            height = options.height || height;\n            return [\n                ['M', -markerPosition, height / 2 - 3.5],\n                ['L', -markerPosition, height / 2 + 4.5],\n                ['M', markerPosition - 1, height / 2 - 3.5],\n                ['L', markerPosition - 1, height / 2 + 4.5],\n                ...rect.rect(-halfWidth - 1, 0.5, halfWidth * 2 + 1, height, { r })\n            ];\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        const NavigatorSymbols = {\n            'navigator-handle': navigatorHandle\n        };\n\n        return NavigatorSymbols;\n    });\n    _registerModule(_modules, 'Stock/Utilities/StockUtilities.js', [_modules['Core/Utilities.js']], function (U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { defined } = U;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * Sets the chart.fixedRange to the specified value. If the value is larger\n         * than actual range, sets it to the maximum possible range. (#20327)\n         *\n         * @private\n         * @function Highcharts.StockChart#setFixedRange\n         * @param {number|undefined} range\n         *        Range to set in axis units.\n         */\n        function setFixedRange(range) {\n            const xAxis = this.xAxis[0];\n            if (defined(xAxis.dataMax) &&\n                defined(xAxis.dataMin) &&\n                range) {\n                this.fixedRange = Math.min(range, xAxis.dataMax - xAxis.dataMin);\n            }\n            else {\n                this.fixedRange = range;\n            }\n        }\n        const StockUtilities = {\n            setFixedRange\n        };\n\n        return StockUtilities;\n    });\n    _registerModule(_modules, 'Stock/Navigator/NavigatorComposition.js', [_modules['Core/Defaults.js'], _modules['Core/Globals.js'], _modules['Core/Axis/NavigatorAxisComposition.js'], _modules['Stock/Navigator/NavigatorDefaults.js'], _modules['Stock/Navigator/NavigatorSymbols.js'], _modules['Core/Renderer/RendererRegistry.js'], _modules['Stock/Utilities/StockUtilities.js'], _modules['Core/Utilities.js']], function (D, H, NavigatorAxisAdditions, NavigatorDefaults, NavigatorSymbols, RendererRegistry, StockUtilities, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { setOptions } = D;\n        const { composed } = H;\n        const { getRendererType } = RendererRegistry;\n        const { setFixedRange } = StockUtilities;\n        const { addEvent, extend, pushUnique } = U;\n        /* *\n         *\n         *  Variables\n         *\n         * */\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * @private\n         */\n        function compose(ChartClass, AxisClass, SeriesClass) {\n            NavigatorAxisAdditions.compose(AxisClass);\n            if (pushUnique(composed, 'Navigator')) {\n                ChartClass.prototype.setFixedRange = setFixedRange;\n                extend(getRendererType().prototype.symbols, NavigatorSymbols);\n                addEvent(SeriesClass, 'afterUpdate', onSeriesAfterUpdate);\n                setOptions({ navigator: NavigatorDefaults });\n            }\n        }\n        /**\n         * Handle updating series\n         * @private\n         */\n        function onSeriesAfterUpdate() {\n            if (this.chart.navigator && !this.options.isInternal) {\n                this.chart.navigator.setBaseSeries(null, false);\n            }\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        const NavigatorComposition = {\n            compose\n        };\n\n        return NavigatorComposition;\n    });\n    _registerModule(_modules, 'Core/Axis/ScrollbarAxis.js', [_modules['Core/Globals.js'], _modules['Core/Utilities.js']], function (H, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { composed } = H;\n        const { addEvent, defined, pick, pushUnique } = U;\n        /* *\n         *\n         *  Composition\n         *\n         * */\n        var ScrollbarAxis;\n        (function (ScrollbarAxis) {\n            /* *\n             *\n             *  Variables\n             *\n             * */\n            let Scrollbar;\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Attaches to axis events to create scrollbars if enabled.\n             *\n             * @private\n             *\n             * @param {Highcharts.Axis} AxisClass\n             * Axis class to extend.\n             *\n             * @param {Highcharts.Scrollbar} ScrollbarClass\n             * Scrollbar class to use.\n             */\n            function compose(AxisClass, ScrollbarClass) {\n                if (pushUnique(composed, 'Axis.Scrollbar')) {\n                    Scrollbar = ScrollbarClass;\n                    addEvent(AxisClass, 'afterGetOffset', onAxisAfterGetOffset);\n                    addEvent(AxisClass, 'afterInit', onAxisAfterInit);\n                    addEvent(AxisClass, 'afterRender', onAxisAfterRender);\n                }\n            }\n            ScrollbarAxis.compose = compose;\n            /** @private */\n            function getExtremes(axis) {\n                const axisMin = pick(axis.options && axis.options.min, axis.min);\n                const axisMax = pick(axis.options && axis.options.max, axis.max);\n                return {\n                    axisMin,\n                    axisMax,\n                    scrollMin: defined(axis.dataMin) ?\n                        Math.min(axisMin, axis.min, axis.dataMin, pick(axis.threshold, Infinity)) : axisMin,\n                    scrollMax: defined(axis.dataMax) ?\n                        Math.max(axisMax, axis.max, axis.dataMax, pick(axis.threshold, -Infinity)) : axisMax\n                };\n            }\n            /**\n             * Make space for a scrollbar.\n             * @private\n             */\n            function onAxisAfterGetOffset() {\n                const axis = this, scrollbar = axis.scrollbar, opposite = scrollbar && !scrollbar.options.opposite, index = axis.horiz ? 2 : opposite ? 3 : 1;\n                if (scrollbar) {\n                    // Reset scrollbars offsets\n                    axis.chart.scrollbarsOffsets = [0, 0];\n                    axis.chart.axisOffset[index] +=\n                        scrollbar.size + (scrollbar.options.margin || 0);\n                }\n            }\n            /**\n             * Wrap axis initialization and create scrollbar if enabled.\n             * @private\n             */\n            function onAxisAfterInit() {\n                const axis = this;\n                if (axis.options &&\n                    axis.options.scrollbar &&\n                    axis.options.scrollbar.enabled) {\n                    // Predefined options:\n                    axis.options.scrollbar.vertical = !axis.horiz;\n                    axis.options.startOnTick = axis.options.endOnTick = false;\n                    axis.scrollbar = new Scrollbar(axis.chart.renderer, axis.options.scrollbar, axis.chart);\n                    addEvent(axis.scrollbar, 'changed', function (e) {\n                        const { axisMin, axisMax, scrollMin: unitedMin, scrollMax: unitedMax } = getExtremes(axis), range = unitedMax - unitedMin;\n                        let to, from;\n                        // #12834, scroll when show/hide series, wrong extremes\n                        if (!defined(axisMin) || !defined(axisMax)) {\n                            return;\n                        }\n                        if ((axis.horiz && !axis.reversed) ||\n                            (!axis.horiz && axis.reversed)) {\n                            to = unitedMin + range * this.to;\n                            from = unitedMin + range * this.from;\n                        }\n                        else {\n                            // Y-values in browser are reversed, but this also\n                            // applies for reversed horizontal axis:\n                            to = unitedMin + range * (1 - this.from);\n                            from = unitedMin + range * (1 - this.to);\n                        }\n                        if (this.shouldUpdateExtremes(e.DOMType)) {\n                            // #17977, set animation to undefined instead of true\n                            const animate = e.DOMType === 'mousemove' ||\n                                e.DOMType === 'touchmove' ? false : void 0;\n                            axis.setExtremes(from, to, true, animate, e);\n                        }\n                        else {\n                            // When live redraw is disabled, don't change extremes\n                            // Only change the position of the scrollbar thumb\n                            this.setRange(this.from, this.to);\n                        }\n                    });\n                }\n            }\n            /**\n             * Wrap rendering axis, and update scrollbar if one is created.\n             * @private\n             */\n            function onAxisAfterRender() {\n                const axis = this, { scrollMin, scrollMax } = getExtremes(axis), scrollbar = axis.scrollbar, offset = (axis.axisTitleMargin + (axis.titleOffset || 0)), scrollbarsOffsets = axis.chart.scrollbarsOffsets, axisMargin = axis.options.margin || 0;\n                let offsetsIndex, from, to;\n                if (scrollbar && scrollbarsOffsets) {\n                    if (axis.horiz) {\n                        // Reserve space for labels/title\n                        if (!axis.opposite) {\n                            scrollbarsOffsets[1] += offset;\n                        }\n                        scrollbar.position(axis.left, (axis.top +\n                            axis.height +\n                            2 +\n                            scrollbarsOffsets[1] -\n                            (axis.opposite ? axisMargin : 0)), axis.width, axis.height);\n                        // Next scrollbar should reserve space for margin (if set)\n                        if (!axis.opposite) {\n                            scrollbarsOffsets[1] += axisMargin;\n                        }\n                        offsetsIndex = 1;\n                    }\n                    else {\n                        // Reserve space for labels/title\n                        if (axis.opposite) {\n                            scrollbarsOffsets[0] += offset;\n                        }\n                        let xPosition;\n                        if (!scrollbar.options.opposite) {\n                            xPosition = axis.opposite ? 0 : axisMargin;\n                        }\n                        else {\n                            xPosition = axis.left +\n                                axis.width +\n                                2 +\n                                scrollbarsOffsets[0] -\n                                (axis.opposite ? 0 : axisMargin);\n                        }\n                        scrollbar.position(xPosition, axis.top, axis.width, axis.height);\n                        // Next scrollbar should reserve space for margin (if set)\n                        if (axis.opposite) {\n                            scrollbarsOffsets[0] += axisMargin;\n                        }\n                        offsetsIndex = 0;\n                    }\n                    scrollbarsOffsets[offsetsIndex] += scrollbar.size +\n                        (scrollbar.options.margin || 0);\n                    if (isNaN(scrollMin) ||\n                        isNaN(scrollMax) ||\n                        !defined(axis.min) ||\n                        !defined(axis.max) ||\n                        axis.min === axis.max // #10733\n                    ) {\n                        // Default action: when extremes are the same or there is\n                        // not extremes on the axis, but scrollbar exists, make it\n                        // full size\n                        scrollbar.setRange(0, 1);\n                    }\n                    else {\n                        from = ((axis.min - scrollMin) /\n                            (scrollMax - scrollMin));\n                        to = ((axis.max - scrollMin) /\n                            (scrollMax - scrollMin));\n                        if ((axis.horiz && !axis.reversed) ||\n                            (!axis.horiz && axis.reversed)) {\n                            scrollbar.setRange(from, to);\n                        }\n                        else {\n                            // Inverse vertical axis\n                            scrollbar.setRange(1 - to, 1 - from);\n                        }\n                    }\n                }\n            }\n        })(ScrollbarAxis || (ScrollbarAxis = {}));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return ScrollbarAxis;\n    });\n    _registerModule(_modules, 'Stock/Scrollbar/ScrollbarDefaults.js', [], function () {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        /* *\n         *\n         *  Constant\n         *\n         * */\n        /**\n         *\n         * The scrollbar is a means of panning over the X axis of a stock chart.\n         * Scrollbars can also be applied to other types of axes.\n         *\n         * Another approach to scrollable charts is the [chart.scrollablePlotArea](\n         * https://api.highcharts.com/highcharts/chart.scrollablePlotArea) option that\n         * is especially suitable for simpler cartesian charts on mobile.\n         *\n         * In styled mode, all the presentational options for the\n         * scrollbar are replaced by the classes `.highcharts-scrollbar-thumb`,\n         * `.highcharts-scrollbar-arrow`, `.highcharts-scrollbar-button`,\n         * `.highcharts-scrollbar-rifles` and `.highcharts-scrollbar-track`.\n         *\n         * @sample stock/yaxis/inverted-bar-scrollbar/\n         *         A scrollbar on a simple bar chart\n         *\n         * @product highstock gantt\n         * @optionparent scrollbar\n         *\n         * @private\n         */\n        const ScrollbarDefaults = {\n            /**\n             * The height of the scrollbar. If `buttonsEnabled` is true , the height\n             * also applies to the width of the scroll arrows so that they are always\n             * squares.\n             *\n             * @sample stock/scrollbar/style/\n             *         Non-default height\n             *\n             * @type    {number}\n             */\n            height: 10,\n            /**\n             * The border rounding radius of the bar.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             */\n            barBorderRadius: 5,\n            /**\n             * The corner radius of the scrollbar buttons.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             */\n            buttonBorderRadius: 0,\n            /**\n             * Enable or disable the buttons at the end of the scrollbar.\n             *\n             * @since 11.0.0\n             */\n            buttonsEnabled: false,\n            /**\n             * Enable or disable the scrollbar.\n             *\n             * @sample stock/scrollbar/enabled/\n             *         Disable the scrollbar, only use navigator\n             *\n             * @type      {boolean}\n             * @default   true\n             * @apioption scrollbar.enabled\n             */\n            /**\n             * Whether to redraw the main chart as the scrollbar or the navigator\n             * zoomed window is moved. Defaults to `true` for modern browsers and\n             * `false` for legacy IE browsers as well as mobile devices.\n             *\n             * @sample stock/scrollbar/liveredraw\n             *         Setting live redraw to false\n             *\n             * @type  {boolean}\n             * @since 1.3\n             */\n            liveRedraw: void 0,\n            /**\n             * The margin between the scrollbar and its axis when the scrollbar is\n             * applied directly to an axis, or the navigator in case that is enabled.\n             * Defaults to 10 for axis, 0 for navigator.\n             *\n             * @type {number|undefined}\n             */\n            margin: void 0,\n            /**\n             * The minimum width of the scrollbar.\n             *\n             * @since 1.2.5\n             */\n            minWidth: 6,\n            /** @ignore-option */\n            opposite: true,\n            /**\n             * Whether to show or hide the scrollbar when the scrolled content is\n             * zoomed out to it full extent.\n             *\n             * @type      {boolean}\n             * @default   true\n             * @apioption scrollbar.showFull\n             */\n            step: 0.2,\n            /**\n             * The z index of the scrollbar group.\n             */\n            zIndex: 3,\n            /**\n             * The background color of the scrollbar itself.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             *\n             * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             */\n            barBackgroundColor: \"#cccccc\" /* Palette.neutralColor20 */,\n            /**\n             * The width of the bar's border.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             */\n            barBorderWidth: 0,\n            /**\n             * The color of the scrollbar's border.\n             *\n             * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             */\n            barBorderColor: \"#cccccc\" /* Palette.neutralColor20 */,\n            /**\n             * The color of the small arrow inside the scrollbar buttons.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             *\n             * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             */\n            buttonArrowColor: \"#333333\" /* Palette.neutralColor80 */,\n            /**\n             * The color of scrollbar buttons.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             *\n             * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             */\n            buttonBackgroundColor: \"#e6e6e6\" /* Palette.neutralColor10 */,\n            /**\n             * The color of the border of the scrollbar buttons.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             *\n             * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             */\n            buttonBorderColor: \"#cccccc\" /* Palette.neutralColor20 */,\n            /**\n             * The border width of the scrollbar buttons.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             */\n            buttonBorderWidth: 1,\n            /**\n             * The color of the small rifles in the middle of the scrollbar.\n             *\n             * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             */\n            rifleColor: 'none',\n            /**\n             * The color of the track background.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             *\n             * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             */\n            trackBackgroundColor: 'rgba(255, 255, 255, 0.001)', // #18922\n            /**\n             * The color of the border of the scrollbar track.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             *\n             * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             */\n            trackBorderColor: \"#cccccc\" /* Palette.neutralColor20 */,\n            /**\n             * The corner radius of the border of the scrollbar track.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             */\n            trackBorderRadius: 5,\n            /**\n             * The width of the border of the scrollbar track.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             */\n            trackBorderWidth: 1\n        };\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return ScrollbarDefaults;\n    });\n    _registerModule(_modules, 'Stock/Scrollbar/Scrollbar.js', [_modules['Core/Defaults.js'], _modules['Core/Globals.js'], _modules['Core/Axis/ScrollbarAxis.js'], _modules['Stock/Scrollbar/ScrollbarDefaults.js'], _modules['Core/Utilities.js']], function (D, H, ScrollbarAxis, ScrollbarDefaults, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { defaultOptions } = D;\n        const { addEvent, correctFloat, crisp, defined, destroyObjectProperties, fireEvent, merge, pick, removeEvent } = U;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        /* eslint-disable no-invalid-this, valid-jsdoc */\n        /**\n         * A reusable scrollbar, internally used in Highcharts Stock's\n         * navigator and optionally on individual axes.\n         *\n         * @private\n         * @class\n         * @name Highcharts.Scrollbar\n         * @param {Highcharts.SVGRenderer} renderer\n         * @param {Highcharts.ScrollbarOptions} options\n         * @param {Highcharts.Chart} chart\n         */\n        class Scrollbar {\n            /* *\n             *\n             *  Static Functions\n             *\n             * */\n            static compose(AxisClass) {\n                ScrollbarAxis.compose(AxisClass, Scrollbar);\n            }\n            /**\n             * When we have vertical scrollbar, rifles and arrow in buttons should be\n             * rotated. The same method is used in Navigator's handles, to rotate them.\n             *\n             * @function Highcharts.swapXY\n             *\n             * @param {Highcharts.SVGPathArray} path\n             * Path to be rotated.\n             *\n             * @param {boolean} [vertical]\n             * If vertical scrollbar, swap x-y values.\n             *\n             * @return {Highcharts.SVGPathArray}\n             * Rotated path.\n             *\n             * @requires modules/stock\n             */\n            static swapXY(path, vertical) {\n                if (vertical) {\n                    path.forEach((seg) => {\n                        const len = seg.length;\n                        let temp;\n                        for (let i = 0; i < len; i += 2) {\n                            temp = seg[i + 1];\n                            if (typeof temp === 'number') {\n                                seg[i + 1] = seg[i + 2];\n                                seg[i + 2] = temp;\n                            }\n                        }\n                    });\n                }\n                return path;\n            }\n            /* *\n             *\n             *  Constructors\n             *\n             * */\n            constructor(renderer, options, chart) {\n                /* *\n                 *\n                 *  Properties\n                 *\n                 * */\n                this._events = [];\n                this.chartX = 0;\n                this.chartY = 0;\n                this.from = 0;\n                this.scrollbarButtons = [];\n                this.scrollbarLeft = 0;\n                this.scrollbarStrokeWidth = 1;\n                this.scrollbarTop = 0;\n                this.size = 0;\n                this.to = 0;\n                this.trackBorderWidth = 1;\n                this.x = 0;\n                this.y = 0;\n                this.init(renderer, options, chart);\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Set up the mouse and touch events for the Scrollbar\n             *\n             * @private\n             * @function Highcharts.Scrollbar#addEvents\n             */\n            addEvents() {\n                const buttonsOrder = this.options.inverted ? [1, 0] : [0, 1], buttons = this.scrollbarButtons, bar = this.scrollbarGroup.element, track = this.track.element, mouseDownHandler = this.mouseDownHandler.bind(this), mouseMoveHandler = this.mouseMoveHandler.bind(this), mouseUpHandler = this.mouseUpHandler.bind(this);\n                const _events = [\n                    // Mouse events\n                    [\n                        buttons[buttonsOrder[0]].element,\n                        'click',\n                        this.buttonToMinClick.bind(this)\n                    ],\n                    [\n                        buttons[buttonsOrder[1]].element,\n                        'click',\n                        this.buttonToMaxClick.bind(this)\n                    ],\n                    [track, 'click', this.trackClick.bind(this)],\n                    [bar, 'mousedown', mouseDownHandler],\n                    [bar.ownerDocument, 'mousemove', mouseMoveHandler],\n                    [bar.ownerDocument, 'mouseup', mouseUpHandler],\n                    // Touch events\n                    [bar, 'touchstart', mouseDownHandler],\n                    [bar.ownerDocument, 'touchmove', mouseMoveHandler],\n                    [bar.ownerDocument, 'touchend', mouseUpHandler]\n                ];\n                // Add them all\n                _events.forEach(function (args) {\n                    addEvent.apply(null, args);\n                });\n                this._events = _events;\n            }\n            buttonToMaxClick(e) {\n                const scroller = this;\n                const range = ((scroller.to - scroller.from) *\n                    pick(scroller.options.step, 0.2));\n                scroller.updatePosition(scroller.from + range, scroller.to + range);\n                fireEvent(scroller, 'changed', {\n                    from: scroller.from,\n                    to: scroller.to,\n                    trigger: 'scrollbar',\n                    DOMEvent: e\n                });\n            }\n            buttonToMinClick(e) {\n                const scroller = this;\n                const range = correctFloat(scroller.to - scroller.from) *\n                    pick(scroller.options.step, 0.2);\n                scroller.updatePosition(correctFloat(scroller.from - range), correctFloat(scroller.to - range));\n                fireEvent(scroller, 'changed', {\n                    from: scroller.from,\n                    to: scroller.to,\n                    trigger: 'scrollbar',\n                    DOMEvent: e\n                });\n            }\n            /**\n             * Get normalized (0-1) cursor position over the scrollbar\n             *\n             * @private\n             * @function Highcharts.Scrollbar#cursorToScrollbarPosition\n             *\n             * @param  {*} normalizedEvent\n             *         normalized event, with chartX and chartY values\n             *\n             * @return {Highcharts.Dictionary<number>}\n             *         Local position {chartX, chartY}\n             */\n            cursorToScrollbarPosition(normalizedEvent) {\n                const scroller = this, options = scroller.options, minWidthDifference = options.minWidth > scroller.calculatedWidth ?\n                    options.minWidth :\n                    0; // `minWidth` distorts translation\n                return {\n                    chartX: (normalizedEvent.chartX - scroller.x -\n                        scroller.xOffset) /\n                        (scroller.barWidth - minWidthDifference),\n                    chartY: (normalizedEvent.chartY - scroller.y -\n                        scroller.yOffset) /\n                        (scroller.barWidth - minWidthDifference)\n                };\n            }\n            /**\n             * Destroys allocated elements.\n             *\n             * @private\n             * @function Highcharts.Scrollbar#destroy\n             */\n            destroy() {\n                const scroller = this, navigator = scroller.chart.scroller;\n                // Disconnect events added in addEvents\n                scroller.removeEvents();\n                // Destroy properties\n                [\n                    'track',\n                    'scrollbarRifles',\n                    'scrollbar',\n                    'scrollbarGroup',\n                    'group'\n                ].forEach(function (prop) {\n                    if (scroller[prop] && scroller[prop].destroy) {\n                        scroller[prop] = scroller[prop].destroy();\n                    }\n                });\n                // #6421, chart may have more scrollbars\n                if (navigator && scroller === navigator.scrollbar) {\n                    navigator.scrollbar = null;\n                    // Destroy elements in collection\n                    destroyObjectProperties(navigator.scrollbarButtons);\n                }\n            }\n            /**\n             * Draw the scrollbar buttons with arrows\n             *\n             * @private\n             * @function Highcharts.Scrollbar#drawScrollbarButton\n             * @param {number} index\n             *        0 is left, 1 is right\n             */\n            drawScrollbarButton(index) {\n                const scroller = this, renderer = scroller.renderer, scrollbarButtons = scroller.scrollbarButtons, options = scroller.options, size = scroller.size, group = renderer.g().add(scroller.group);\n                scrollbarButtons.push(group);\n                if (options.buttonsEnabled) {\n                    // Create a rectangle for the scrollbar button\n                    const rect = renderer.rect()\n                        .addClass('highcharts-scrollbar-button')\n                        .add(group);\n                    // Presentational attributes\n                    if (!scroller.chart.styledMode) {\n                        rect.attr({\n                            stroke: options.buttonBorderColor,\n                            'stroke-width': options.buttonBorderWidth,\n                            fill: options.buttonBackgroundColor\n                        });\n                    }\n                    // Place the rectangle based on the rendered stroke width\n                    rect.attr(rect.crisp({\n                        x: -0.5,\n                        y: -0.5,\n                        width: size,\n                        height: size,\n                        r: options.buttonBorderRadius\n                    }, rect.strokeWidth()));\n                    // Button arrow\n                    const arrow = renderer\n                        .path(Scrollbar.swapXY([[\n                            'M',\n                            size / 2 + (index ? -1 : 1),\n                            size / 2 - 3\n                        ], [\n                            'L',\n                            size / 2 + (index ? -1 : 1),\n                            size / 2 + 3\n                        ], [\n                            'L',\n                            size / 2 + (index ? 2 : -2),\n                            size / 2\n                        ]], options.vertical))\n                        .addClass('highcharts-scrollbar-arrow')\n                        .add(scrollbarButtons[index]);\n                    if (!scroller.chart.styledMode) {\n                        arrow.attr({\n                            fill: options.buttonArrowColor\n                        });\n                    }\n                }\n            }\n            /**\n             * @private\n             * @function Highcharts.Scrollbar#init\n             * @param {Highcharts.SVGRenderer} renderer\n             * @param {Highcharts.ScrollbarOptions} options\n             * @param {Highcharts.Chart} chart\n             */\n            init(renderer, options, chart) {\n                const scroller = this;\n                scroller.scrollbarButtons = [];\n                scroller.renderer = renderer;\n                scroller.userOptions = options;\n                scroller.options = merge(ScrollbarDefaults, defaultOptions.scrollbar, options);\n                scroller.options.margin = pick(scroller.options.margin, 10);\n                scroller.chart = chart;\n                // Backward compatibility\n                scroller.size = pick(scroller.options.size, scroller.options.height);\n                // Init\n                if (options.enabled) {\n                    scroller.render();\n                    scroller.addEvents();\n                }\n            }\n            mouseDownHandler(e) {\n                const scroller = this, normalizedEvent = scroller.chart.pointer?.normalize(e) || e, mousePosition = scroller.cursorToScrollbarPosition(normalizedEvent);\n                scroller.chartX = mousePosition.chartX;\n                scroller.chartY = mousePosition.chartY;\n                scroller.initPositions = [scroller.from, scroller.to];\n                scroller.grabbedCenter = true;\n            }\n            /**\n             * Event handler for the mouse move event.\n             * @private\n             */\n            mouseMoveHandler(e) {\n                const scroller = this, normalizedEvent = scroller.chart.pointer?.normalize(e) || e, options = scroller.options, direction = options.vertical ?\n                    'chartY' : 'chartX', initPositions = scroller.initPositions || [];\n                let scrollPosition, chartPosition, change;\n                // In iOS, a mousemove event with e.pageX === 0 is fired when\n                // holding the finger down in the center of the scrollbar. This\n                // should be ignored.\n                if (scroller.grabbedCenter &&\n                    // #4696, scrollbar failed on Android\n                    (!e.touches || e.touches[0][direction] !== 0)) {\n                    chartPosition = scroller.cursorToScrollbarPosition(normalizedEvent)[direction];\n                    scrollPosition = scroller[direction];\n                    change = chartPosition - scrollPosition;\n                    scroller.hasDragged = true;\n                    scroller.updatePosition(initPositions[0] + change, initPositions[1] + change);\n                    if (scroller.hasDragged) {\n                        fireEvent(scroller, 'changed', {\n                            from: scroller.from,\n                            to: scroller.to,\n                            trigger: 'scrollbar',\n                            DOMType: e.type,\n                            DOMEvent: e\n                        });\n                    }\n                }\n            }\n            /**\n             * Event handler for the mouse up event.\n             * @private\n             */\n            mouseUpHandler(e) {\n                const scroller = this;\n                if (scroller.hasDragged) {\n                    fireEvent(scroller, 'changed', {\n                        from: scroller.from,\n                        to: scroller.to,\n                        trigger: 'scrollbar',\n                        DOMType: e.type,\n                        DOMEvent: e\n                    });\n                }\n                scroller.grabbedCenter =\n                    scroller.hasDragged =\n                        scroller.chartX =\n                            scroller.chartY = null;\n            }\n            /**\n             * Position the scrollbar, method called from a parent with defined\n             * dimensions.\n             *\n             * @private\n             * @function Highcharts.Scrollbar#position\n             * @param {number} x\n             *        x-position on the chart\n             * @param {number} y\n             *        y-position on the chart\n             * @param {number} width\n             *        width of the scrollbar\n             * @param {number} height\n             *        height of the scrollbar\n             */\n            position(x, y, width, height) {\n                const scroller = this, options = scroller.options, { buttonsEnabled, margin = 0, vertical } = options, method = scroller.rendered ? 'animate' : 'attr';\n                let xOffset = height, yOffset = 0;\n                // Make the scrollbar visible when it is repositioned, #15763.\n                scroller.group.show();\n                scroller.x = x;\n                scroller.y = y + this.trackBorderWidth;\n                scroller.width = width; // Width with buttons\n                scroller.height = height;\n                scroller.xOffset = xOffset;\n                scroller.yOffset = yOffset;\n                // If Scrollbar is a vertical type, swap options:\n                if (vertical) {\n                    scroller.width = scroller.yOffset = width = yOffset = scroller.size;\n                    scroller.xOffset = xOffset = 0;\n                    scroller.yOffset = yOffset = buttonsEnabled ? scroller.size : 0;\n                    // Width without buttons\n                    scroller.barWidth = height - (buttonsEnabled ? width * 2 : 0);\n                    scroller.x = x = x + margin;\n                }\n                else {\n                    scroller.height = height = scroller.size;\n                    scroller.xOffset = xOffset = buttonsEnabled ? scroller.size : 0;\n                    // Width without buttons\n                    scroller.barWidth = width - (buttonsEnabled ? height * 2 : 0);\n                    scroller.y = scroller.y + margin;\n                }\n                // Set general position for a group:\n                scroller.group[method]({\n                    translateX: x,\n                    translateY: scroller.y\n                });\n                // Resize background/track:\n                scroller.track[method]({\n                    width: width,\n                    height: height\n                });\n                // Move right/bottom button to its place:\n                scroller.scrollbarButtons[1][method]({\n                    translateX: vertical ? 0 : width - xOffset,\n                    translateY: vertical ? height - yOffset : 0\n                });\n            }\n            /**\n             * Removes the event handlers attached previously with addEvents.\n             *\n             * @private\n             * @function Highcharts.Scrollbar#removeEvents\n             */\n            removeEvents() {\n                this._events.forEach(function (args) {\n                    removeEvent.apply(null, args);\n                });\n                this._events.length = 0;\n            }\n            /**\n             * Render scrollbar with all required items.\n             *\n             * @private\n             * @function Highcharts.Scrollbar#render\n             */\n            render() {\n                const scroller = this, renderer = scroller.renderer, options = scroller.options, size = scroller.size, styledMode = scroller.chart.styledMode, group = renderer.g('scrollbar')\n                    .attr({\n                    zIndex: options.zIndex\n                })\n                    .hide() // Initially hide the scrollbar #15863\n                    .add();\n                // Draw the scrollbar group\n                scroller.group = group;\n                // Draw the scrollbar track:\n                scroller.track = renderer.rect()\n                    .addClass('highcharts-scrollbar-track')\n                    .attr({\n                    r: options.trackBorderRadius || 0,\n                    height: size,\n                    width: size\n                }).add(group);\n                if (!styledMode) {\n                    scroller.track.attr({\n                        fill: options.trackBackgroundColor,\n                        stroke: options.trackBorderColor,\n                        'stroke-width': options.trackBorderWidth\n                    });\n                }\n                const trackBorderWidth = scroller.trackBorderWidth =\n                    scroller.track.strokeWidth();\n                scroller.track.attr({\n                    x: -crisp(0, trackBorderWidth),\n                    y: -crisp(0, trackBorderWidth)\n                });\n                // Draw the scrollbar itself\n                scroller.scrollbarGroup = renderer.g().add(group);\n                scroller.scrollbar = renderer.rect()\n                    .addClass('highcharts-scrollbar-thumb')\n                    .attr({\n                    height: size - trackBorderWidth,\n                    width: size - trackBorderWidth,\n                    r: options.barBorderRadius || 0\n                }).add(scroller.scrollbarGroup);\n                scroller.scrollbarRifles = renderer\n                    .path(Scrollbar.swapXY([\n                    ['M', -3, size / 4],\n                    ['L', -3, 2 * size / 3],\n                    ['M', 0, size / 4],\n                    ['L', 0, 2 * size / 3],\n                    ['M', 3, size / 4],\n                    ['L', 3, 2 * size / 3]\n                ], options.vertical))\n                    .addClass('highcharts-scrollbar-rifles')\n                    .add(scroller.scrollbarGroup);\n                if (!styledMode) {\n                    scroller.scrollbar.attr({\n                        fill: options.barBackgroundColor,\n                        stroke: options.barBorderColor,\n                        'stroke-width': options.barBorderWidth\n                    });\n                    scroller.scrollbarRifles.attr({\n                        stroke: options.rifleColor,\n                        'stroke-width': 1\n                    });\n                }\n                scroller.scrollbarStrokeWidth = scroller.scrollbar.strokeWidth();\n                scroller.scrollbarGroup.translate(-crisp(0, scroller.scrollbarStrokeWidth), -crisp(0, scroller.scrollbarStrokeWidth));\n                // Draw the buttons:\n                scroller.drawScrollbarButton(0);\n                scroller.drawScrollbarButton(1);\n            }\n            /**\n             * Set scrollbar size, with a given scale.\n             *\n             * @private\n             * @function Highcharts.Scrollbar#setRange\n             * @param {number} from\n             *        scale (0-1) where bar should start\n             * @param {number} to\n             *        scale (0-1) where bar should end\n             */\n            setRange(from, to) {\n                const scroller = this, options = scroller.options, vertical = options.vertical, minWidth = options.minWidth, fullWidth = scroller.barWidth, method = (this.rendered &&\n                    !this.hasDragged &&\n                    !(this.chart.navigator && this.chart.navigator.hasDragged)) ? 'animate' : 'attr';\n                if (!defined(fullWidth)) {\n                    return;\n                }\n                const toPX = fullWidth * Math.min(to, 1);\n                let fromPX, newSize;\n                from = Math.max(from, 0);\n                fromPX = Math.ceil(fullWidth * from);\n                scroller.calculatedWidth = newSize = correctFloat(toPX - fromPX);\n                // We need to recalculate position, if minWidth is used\n                if (newSize < minWidth) {\n                    fromPX = (fullWidth - minWidth + newSize) * from;\n                    newSize = minWidth;\n                }\n                const newPos = Math.floor(fromPX + scroller.xOffset + scroller.yOffset);\n                const newRiflesPos = newSize / 2 - 0.5; // -0.5 -> rifle line width / 2\n                // Store current position:\n                scroller.from = from;\n                scroller.to = to;\n                if (!vertical) {\n                    scroller.scrollbarGroup[method]({\n                        translateX: newPos\n                    });\n                    scroller.scrollbar[method]({\n                        width: newSize\n                    });\n                    scroller.scrollbarRifles[method]({\n                        translateX: newRiflesPos\n                    });\n                    scroller.scrollbarLeft = newPos;\n                    scroller.scrollbarTop = 0;\n                }\n                else {\n                    scroller.scrollbarGroup[method]({\n                        translateY: newPos\n                    });\n                    scroller.scrollbar[method]({\n                        height: newSize\n                    });\n                    scroller.scrollbarRifles[method]({\n                        translateY: newRiflesPos\n                    });\n                    scroller.scrollbarTop = newPos;\n                    scroller.scrollbarLeft = 0;\n                }\n                if (newSize <= 12) {\n                    scroller.scrollbarRifles.hide();\n                }\n                else {\n                    scroller.scrollbarRifles.show();\n                }\n                // Show or hide the scrollbar based on the showFull setting\n                if (options.showFull === false) {\n                    if (from <= 0 && to >= 1) {\n                        scroller.group.hide();\n                    }\n                    else {\n                        scroller.group.show();\n                    }\n                }\n                scroller.rendered = true;\n            }\n            /**\n             * Checks if the extremes should be updated in response to a scrollbar\n             * change event.\n             *\n             * @private\n             * @function Highcharts.Scrollbar#shouldUpdateExtremes\n             */\n            shouldUpdateExtremes(eventType) {\n                return (pick(this.options.liveRedraw, H.svg &&\n                    !H.isTouchDevice &&\n                    !this.chart.boosted) ||\n                    // Mouseup always should change extremes\n                    eventType === 'mouseup' ||\n                    eventType === 'touchend' ||\n                    // Internal events\n                    !defined(eventType));\n            }\n            trackClick(e) {\n                const scroller = this;\n                const normalizedEvent = scroller.chart.pointer?.normalize(e) || e, range = scroller.to - scroller.from, top = scroller.y + scroller.scrollbarTop, left = scroller.x + scroller.scrollbarLeft;\n                if ((scroller.options.vertical && normalizedEvent.chartY > top) ||\n                    (!scroller.options.vertical && normalizedEvent.chartX > left)) {\n                    // On the top or on the left side of the track:\n                    scroller.updatePosition(scroller.from + range, scroller.to + range);\n                }\n                else {\n                    // On the bottom or the right side of the track:\n                    scroller.updatePosition(scroller.from - range, scroller.to - range);\n                }\n                fireEvent(scroller, 'changed', {\n                    from: scroller.from,\n                    to: scroller.to,\n                    trigger: 'scrollbar',\n                    DOMEvent: e\n                });\n            }\n            /**\n             * Update the scrollbar with new options\n             *\n             * @private\n             * @function Highcharts.Scrollbar#update\n             * @param  {Highcharts.ScrollbarOptions} options\n             */\n            update(options) {\n                this.destroy();\n                this.init(this.chart.renderer, merge(true, this.options, options), this.chart);\n            }\n            /**\n             * Update position option in the Scrollbar, with normalized 0-1 scale\n             *\n             * @private\n             * @function Highcharts.Scrollbar#updatePosition\n             * @param  {number} from\n             * @param  {number} to\n             */\n            updatePosition(from, to) {\n                if (to > 1) {\n                    from = correctFloat(1 - correctFloat(to - from));\n                    to = 1;\n                }\n                if (from < 0) {\n                    to = correctFloat(to - from);\n                    from = 0;\n                }\n                this.from = from;\n                this.to = to;\n            }\n        }\n        /* *\n         *\n         *  Static Properties\n         *\n         * */\n        Scrollbar.defaultOptions = ScrollbarDefaults;\n        /* *\n         *\n         *  Registry\n         *\n         * */\n        defaultOptions.scrollbar = merge(true, Scrollbar.defaultOptions, defaultOptions.scrollbar);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return Scrollbar;\n    });\n    _registerModule(_modules, 'Stock/Navigator/Navigator.js', [_modules['Core/Axis/Axis.js'], _modules['Stock/Navigator/ChartNavigatorComposition.js'], _modules['Core/Defaults.js'], _modules['Core/Globals.js'], _modules['Core/Axis/NavigatorAxisComposition.js'], _modules['Stock/Navigator/NavigatorComposition.js'], _modules['Stock/Scrollbar/Scrollbar.js'], _modules['Core/Renderer/SVG/SVGRenderer.js'], _modules['Core/Utilities.js']], function (Axis, ChartNavigatorComposition, D, H, NavigatorAxisAdditions, NavigatorComposition, Scrollbar, SVGRenderer, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { defaultOptions } = D;\n        const { isTouchDevice } = H;\n        const { prototype: { symbols } } = SVGRenderer;\n        const { addEvent, clamp, correctFloat, defined, destroyObjectProperties, erase, extend, find, fireEvent, isArray, isNumber, merge, pick, removeEvent, splat } = U;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * Finding the min or max of a set of variables where we don't know if they are\n         * defined, is a pattern that is repeated several places in Highcharts. Consider\n         * making this a global utility method.\n         * @private\n         */\n        function numExt(extreme, ...args) {\n            const numbers = [].filter.call(args, isNumber);\n            if (numbers.length) {\n                return Math[extreme].apply(0, numbers);\n            }\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The Navigator class\n         *\n         * @private\n         * @class\n         * @name Highcharts.Navigator\n         *\n         * @param {Highcharts.Chart} chart\n         *        Chart object\n         */\n        class Navigator {\n            /* *\n             *\n             *  Static Properties\n             *\n             * */\n            static compose(ChartClass, AxisClass, SeriesClass) {\n                ChartNavigatorComposition.compose(ChartClass, Navigator);\n                NavigatorComposition.compose(ChartClass, AxisClass, SeriesClass);\n            }\n            /* *\n             *\n             *  Constructor\n             *\n             * */\n            constructor(chart) {\n                this.isDirty = false;\n                this.scrollbarHeight = 0;\n                this.init(chart);\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Draw one of the handles on the side of the zoomed range in the navigator.\n             *\n             * @private\n             * @function Highcharts.Navigator#drawHandle\n             *\n             * @param {number} x\n             *        The x center for the handle\n             *\n             * @param {number} index\n             *        0 for left and 1 for right\n             *\n             * @param {boolean|undefined} inverted\n             *        Flag for chart.inverted\n             *\n             * @param {string} verb\n             *        Use 'animate' or 'attr'\n             */\n            drawHandle(x, index, inverted, verb) {\n                const navigator = this, height = navigator.navigatorOptions.handles.height;\n                // Place it\n                navigator.handles[index][verb](inverted ? {\n                    translateX: Math.round(navigator.left + navigator.height / 2),\n                    translateY: Math.round(navigator.top + parseInt(x, 10) + 0.5 - height)\n                } : {\n                    translateX: Math.round(navigator.left + parseInt(x, 10)),\n                    translateY: Math.round(navigator.top + navigator.height / 2 - height / 2 - 1)\n                });\n            }\n            /**\n             * Render outline around the zoomed range\n             *\n             * @private\n             * @function Highcharts.Navigator#drawOutline\n             *\n             * @param {number} zoomedMin\n             *        in pixels position where zoomed range starts\n             *\n             * @param {number} zoomedMax\n             *        in pixels position where zoomed range ends\n             *\n             * @param {boolean|undefined} inverted\n             *        flag if chart is inverted\n             *\n             * @param {string} verb\n             *        use 'animate' or 'attr'\n             */\n            drawOutline(zoomedMin, zoomedMax, inverted, verb) {\n                const navigator = this, maskInside = navigator.navigatorOptions.maskInside, outlineWidth = navigator.outline.strokeWidth(), halfOutline = outlineWidth / 2, outlineCorrection = (outlineWidth % 2) / 2, // #5800\n                scrollButtonSize = navigator.scrollButtonSize, navigatorSize = navigator.size, navigatorTop = navigator.top, height = navigator.height, lineTop = navigatorTop - halfOutline, lineBtm = navigatorTop + height;\n                let left = navigator.left, verticalMin, path;\n                if (inverted) {\n                    verticalMin = navigatorTop + zoomedMax + outlineCorrection;\n                    zoomedMax = navigatorTop + zoomedMin + outlineCorrection;\n                    path = [\n                        [\n                            'M',\n                            left + height,\n                            navigatorTop - scrollButtonSize - outlineCorrection\n                        ],\n                        // Top right of zoomed range\n                        ['L', left + height, verticalMin],\n                        ['L', left, verticalMin], // Top left of z.r.\n                        ['M', left, zoomedMax], // Bottom left of z.r.\n                        ['L', left + height, zoomedMax], // Bottom right of z.r.\n                        [\n                            'L',\n                            left + height,\n                            navigatorTop + navigatorSize + scrollButtonSize\n                        ]\n                    ];\n                    if (maskInside) {\n                        path.push(\n                        // Upper left of zoomed range\n                        ['M', left + height, verticalMin - halfOutline], \n                        // Upper right of z.r.\n                        [\n                            'L',\n                            left + height,\n                            zoomedMax + halfOutline\n                        ]);\n                    }\n                }\n                else {\n                    left -= scrollButtonSize;\n                    zoomedMin += left + scrollButtonSize - outlineCorrection;\n                    zoomedMax += left + scrollButtonSize - outlineCorrection;\n                    path = [\n                        // Left\n                        ['M', left, lineTop],\n                        // Upper left of zoomed range\n                        ['L', zoomedMin, lineTop],\n                        // Lower left of z.r.\n                        ['L', zoomedMin, lineBtm],\n                        // Lower right of z.r.\n                        ['M', zoomedMax, lineBtm],\n                        // Upper right of z.r.\n                        ['L', zoomedMax, lineTop],\n                        // Right\n                        [\n                            'L',\n                            left + navigatorSize + scrollButtonSize * 2,\n                            lineTop\n                        ]\n                    ];\n                    if (maskInside) {\n                        path.push(\n                        // Upper left of zoomed range\n                        ['M', zoomedMin - halfOutline, lineTop], \n                        // Upper right of z.r.\n                        ['L', zoomedMax + halfOutline, lineTop]);\n                    }\n                }\n                navigator.outline[verb]({\n                    d: path\n                });\n            }\n            /**\n             * Render outline around the zoomed range\n             *\n             * @private\n             * @function Highcharts.Navigator#drawMasks\n             *\n             * @param {number} zoomedMin\n             *        in pixels position where zoomed range starts\n             *\n             * @param {number} zoomedMax\n             *        in pixels position where zoomed range ends\n             *\n             * @param {boolean|undefined} inverted\n             *        flag if chart is inverted\n             *\n             * @param {string} verb\n             *        use 'animate' or 'attr'\n             */\n            drawMasks(zoomedMin, zoomedMax, inverted, verb) {\n                const navigator = this, left = navigator.left, top = navigator.top, navigatorHeight = navigator.height;\n                let height, width, x, y;\n                // Determine rectangle position & size\n                // According to (non)inverted position:\n                if (inverted) {\n                    x = [left, left, left];\n                    y = [top, top + zoomedMin, top + zoomedMax];\n                    width = [navigatorHeight, navigatorHeight, navigatorHeight];\n                    height = [\n                        zoomedMin,\n                        zoomedMax - zoomedMin,\n                        navigator.size - zoomedMax\n                    ];\n                }\n                else {\n                    x = [left, left + zoomedMin, left + zoomedMax];\n                    y = [top, top, top];\n                    width = [\n                        zoomedMin,\n                        zoomedMax - zoomedMin,\n                        navigator.size - zoomedMax\n                    ];\n                    height = [navigatorHeight, navigatorHeight, navigatorHeight];\n                }\n                navigator.shades.forEach((shade, i) => {\n                    shade[verb]({\n                        x: x[i],\n                        y: y[i],\n                        width: width[i],\n                        height: height[i]\n                    });\n                });\n            }\n            /**\n             * Generate and update DOM elements for a navigator:\n             *\n             * - main navigator group\n             *\n             * - all shades\n             *\n             * - outline\n             *\n             * - handles\n             *\n             * @private\n             * @function Highcharts.Navigator#renderElements\n             */\n            renderElements() {\n                const navigator = this, navigatorOptions = navigator.navigatorOptions, maskInside = navigatorOptions.maskInside, chart = navigator.chart, inverted = chart.inverted, renderer = chart.renderer, mouseCursor = {\n                    cursor: inverted ? 'ns-resize' : 'ew-resize'\n                }, \n                // Create the main navigator group\n                navigatorGroup = navigator.navigatorGroup ??\n                    (navigator.navigatorGroup = renderer\n                        .g('navigator')\n                        .attr({\n                        zIndex: 8,\n                        visibility: 'hidden'\n                    })\n                        .add());\n                // Create masks, each mask will get events and fill:\n                [\n                    !maskInside,\n                    maskInside,\n                    !maskInside\n                ].forEach((hasMask, index) => {\n                    const shade = navigator.shades[index] ??\n                        (navigator.shades[index] = renderer.rect()\n                            .addClass('highcharts-navigator-mask' +\n                            (index === 1 ? '-inside' : '-outside'))\n                            .add(navigatorGroup));\n                    if (!chart.styledMode) {\n                        shade.attr({\n                            fill: hasMask ? navigatorOptions.maskFill : 'rgba(0,0,0,0)'\n                        });\n                        if (index === 1) {\n                            shade.css(mouseCursor);\n                        }\n                    }\n                });\n                // Create the outline:\n                if (!navigator.outline) {\n                    navigator.outline = renderer.path()\n                        .addClass('highcharts-navigator-outline')\n                        .add(navigatorGroup);\n                }\n                if (!chart.styledMode) {\n                    navigator.outline.attr({\n                        'stroke-width': navigatorOptions.outlineWidth,\n                        stroke: navigatorOptions.outlineColor\n                    });\n                }\n                // Create the handlers:\n                if (navigatorOptions.handles?.enabled) {\n                    const handlesOptions = navigatorOptions.handles, { height, width } = handlesOptions;\n                    [0, 1].forEach((index) => {\n                        const symbolName = handlesOptions.symbols[index];\n                        if (!navigator.handles[index]) {\n                            navigator.handles[index] = renderer.symbol(symbolName, -width / 2 - 1, 0, width, height, handlesOptions);\n                            // Z index is 6 for right handle, 7 for left. Can't be 10,\n                            // because of the tooltip in inverted chart (#2908).\n                            navigator.handles[index].attr({ zIndex: 7 - index })\n                                .addClass('highcharts-navigator-handle ' +\n                                'highcharts-navigator-handle-' +\n                                ['left', 'right'][index]).add(navigatorGroup);\n                            // If the navigator symbol changed, update its path and name\n                        }\n                        else if (symbolName !== navigator.handles[index].symbolName) {\n                            const symbolFn = symbols[symbolName], path = symbolFn.call(symbols, -width / 2 - 1, 0, width, height);\n                            navigator.handles[index].attr({\n                                d: path\n                            });\n                            navigator.handles[index].symbolName = symbolName;\n                        }\n                        if (chart.inverted) {\n                            navigator.handles[index].attr({\n                                rotation: 90,\n                                rotationOriginX: Math.floor(-width / 2),\n                                rotationOriginY: (height + width) / 2\n                            });\n                        }\n                        if (!chart.styledMode) {\n                            navigator.handles[index]\n                                .attr({\n                                fill: handlesOptions.backgroundColor,\n                                stroke: handlesOptions.borderColor,\n                                'stroke-width': handlesOptions.lineWidth,\n                                width: handlesOptions.width,\n                                height: handlesOptions.height,\n                                x: -width / 2 - 1,\n                                y: 0\n                            })\n                                .css(mouseCursor);\n                        }\n                    });\n                }\n            }\n            /**\n             * Update navigator\n             *\n             * @private\n             * @function Highcharts.Navigator#update\n             *\n             * @param {Highcharts.NavigatorOptions} options\n             *        Options to merge in when updating navigator\n             */\n            update(options, redraw = false) {\n                const chart = this.chart, invertedUpdate = chart.options.chart.inverted !==\n                    chart.scrollbar?.options.vertical;\n                merge(true, chart.options.navigator, options);\n                this.navigatorOptions = chart.options.navigator || {};\n                this.setOpposite();\n                // Revert to destroy/init for navigator/scrollbar enabled toggle\n                if (defined(options.enabled) || invertedUpdate) {\n                    this.destroy();\n                    this.navigatorEnabled = options.enabled || this.navigatorEnabled;\n                    return this.init(chart);\n                }\n                if (this.navigatorEnabled) {\n                    this.isDirty = true;\n                    if (options.adaptToUpdatedData === false) {\n                        this.baseSeries.forEach((series) => {\n                            removeEvent(series, 'updatedData', this.updatedDataHandler);\n                        }, this);\n                    }\n                    if (options.adaptToUpdatedData) {\n                        this.baseSeries.forEach((series) => {\n                            series.eventsToUnbind.push(addEvent(series, 'updatedData', this.updatedDataHandler));\n                        }, this);\n                    }\n                    // Update navigator series\n                    if (options.series || options.baseSeries) {\n                        this.setBaseSeries(void 0, false);\n                    }\n                    // Update navigator axis\n                    if (options.height || options.xAxis || options.yAxis) {\n                        this.height = options.height ?? this.height;\n                        const offsets = this.getXAxisOffsets();\n                        this.xAxis.update({\n                            ...options.xAxis,\n                            offsets,\n                            [chart.inverted ? 'width' : 'height']: this.height,\n                            [chart.inverted ? 'height' : 'width']: void 0\n                        }, false);\n                        this.yAxis.update({\n                            ...options.yAxis,\n                            [chart.inverted ? 'width' : 'height']: this.height\n                        }, false);\n                    }\n                }\n                if (redraw) {\n                    chart.redraw();\n                }\n            }\n            /**\n             * Render the navigator\n             *\n             * @private\n             * @function Highcharts.Navigator#render\n             * @param {number} min\n             *        X axis value minimum\n             * @param {number} max\n             *        X axis value maximum\n             * @param {number} [pxMin]\n             *        Pixel value minimum\n             * @param {number} [pxMax]\n             *        Pixel value maximum\n             */\n            render(min, max, pxMin, pxMax) {\n                const navigator = this, chart = navigator.chart, xAxis = navigator.xAxis, pointRange = xAxis.pointRange || 0, scrollbarXAxis = xAxis.navigatorAxis.fake ? chart.xAxis[0] : xAxis, navigatorEnabled = navigator.navigatorEnabled, rendered = navigator.rendered, inverted = chart.inverted, minRange = chart.xAxis[0].minRange, maxRange = chart.xAxis[0].options.maxRange, scrollButtonSize = navigator.scrollButtonSize;\n                let navigatorWidth, scrollbarLeft, scrollbarTop, scrollbarHeight = navigator.scrollbarHeight, navigatorSize, verb;\n                // Don't redraw while moving the handles (#4703).\n                if (this.hasDragged && !defined(pxMin)) {\n                    return;\n                }\n                if (this.isDirty) {\n                    // Update DOM navigator elements\n                    this.renderElements();\n                }\n                min = correctFloat(min - pointRange / 2);\n                max = correctFloat(max + pointRange / 2);\n                // Don't render the navigator until we have data (#486, #4202, #5172).\n                if (!isNumber(min) || !isNumber(max)) {\n                    // However, if navigator was already rendered, we may need to resize\n                    // it. For example hidden series, but visible navigator (#6022).\n                    if (rendered) {\n                        pxMin = 0;\n                        pxMax = pick(xAxis.width, scrollbarXAxis.width);\n                    }\n                    else {\n                        return;\n                    }\n                }\n                navigator.left = pick(xAxis.left, \n                // In case of scrollbar only, without navigator\n                chart.plotLeft + scrollButtonSize +\n                    (inverted ? chart.plotWidth : 0));\n                let zoomedMax = navigator.size = navigatorSize = pick(xAxis.len, (inverted ? chart.plotHeight : chart.plotWidth) -\n                    2 * scrollButtonSize);\n                if (inverted) {\n                    navigatorWidth = scrollbarHeight;\n                }\n                else {\n                    navigatorWidth = navigatorSize + 2 * scrollButtonSize;\n                }\n                // Get the pixel position of the handles\n                pxMin = pick(pxMin, xAxis.toPixels(min, true));\n                pxMax = pick(pxMax, xAxis.toPixels(max, true));\n                // Verify (#1851, #2238)\n                if (!isNumber(pxMin) || Math.abs(pxMin) === Infinity) {\n                    pxMin = 0;\n                    pxMax = navigatorWidth;\n                }\n                // Are we below the minRange? (#2618, #6191)\n                const newMin = xAxis.toValue(pxMin, true), newMax = xAxis.toValue(pxMax, true), currentRange = Math.abs(correctFloat(newMax - newMin));\n                if (currentRange < minRange) {\n                    if (this.grabbedLeft) {\n                        pxMin = xAxis.toPixels(newMax - minRange - pointRange, true);\n                    }\n                    else if (this.grabbedRight) {\n                        pxMax = xAxis.toPixels(newMin + minRange + pointRange, true);\n                    }\n                }\n                else if (defined(maxRange) &&\n                    correctFloat(currentRange - pointRange) > maxRange) {\n                    if (this.grabbedLeft) {\n                        pxMin = xAxis.toPixels(newMax - maxRange - pointRange, true);\n                    }\n                    else if (this.grabbedRight) {\n                        pxMax = xAxis.toPixels(newMin + maxRange + pointRange, true);\n                    }\n                }\n                // Handles are allowed to cross, but never exceed the plot area\n                navigator.zoomedMax = clamp(Math.max(pxMin, pxMax), 0, zoomedMax);\n                navigator.zoomedMin = clamp(navigator.fixedWidth ?\n                    navigator.zoomedMax - navigator.fixedWidth :\n                    Math.min(pxMin, pxMax), 0, zoomedMax);\n                navigator.range = navigator.zoomedMax - navigator.zoomedMin;\n                zoomedMax = Math.round(navigator.zoomedMax);\n                const zoomedMin = Math.round(navigator.zoomedMin);\n                if (navigatorEnabled) {\n                    navigator.navigatorGroup.attr({\n                        visibility: 'inherit'\n                    });\n                    // Place elements\n                    verb = rendered && !navigator.hasDragged ? 'animate' : 'attr';\n                    navigator.drawMasks(zoomedMin, zoomedMax, inverted, verb);\n                    navigator.drawOutline(zoomedMin, zoomedMax, inverted, verb);\n                    if (navigator.navigatorOptions.handles.enabled) {\n                        navigator.drawHandle(zoomedMin, 0, inverted, verb);\n                        navigator.drawHandle(zoomedMax, 1, inverted, verb);\n                    }\n                }\n                if (navigator.scrollbar) {\n                    if (inverted) {\n                        scrollbarTop = navigator.top - scrollButtonSize;\n                        scrollbarLeft = navigator.left - scrollbarHeight +\n                            (navigatorEnabled || !scrollbarXAxis.opposite ? 0 :\n                                // Multiple axes has offsets:\n                                (scrollbarXAxis.titleOffset || 0) +\n                                    // Self margin from the axis.title\n                                    scrollbarXAxis.axisTitleMargin);\n                        scrollbarHeight = navigatorSize + 2 * scrollButtonSize;\n                    }\n                    else {\n                        scrollbarTop = navigator.top + (navigatorEnabled ?\n                            navigator.height :\n                            -scrollbarHeight);\n                        scrollbarLeft = navigator.left - scrollButtonSize;\n                    }\n                    // Reposition scrollbar\n                    navigator.scrollbar.position(scrollbarLeft, scrollbarTop, navigatorWidth, scrollbarHeight);\n                    // Keep scale 0-1\n                    navigator.scrollbar.setRange(\n                    // Use real value, not rounded because range can be very small\n                    // (#1716)\n                    navigator.zoomedMin / (navigatorSize || 1), navigator.zoomedMax / (navigatorSize || 1));\n                }\n                navigator.rendered = true;\n                this.isDirty = false;\n                fireEvent(this, 'afterRender');\n            }\n            /**\n             * Set up the mouse and touch events for the navigator\n             *\n             * @private\n             * @function Highcharts.Navigator#addMouseEvents\n             */\n            addMouseEvents() {\n                const navigator = this, chart = navigator.chart, container = chart.container;\n                let eventsToUnbind = [], mouseMoveHandler, mouseUpHandler;\n                /**\n                 * Create mouse events' handlers.\n                 * Make them as separate functions to enable wrapping them:\n                 */\n                navigator.mouseMoveHandler = mouseMoveHandler = function (e) {\n                    navigator.onMouseMove(e);\n                };\n                navigator.mouseUpHandler = mouseUpHandler = function (e) {\n                    navigator.onMouseUp(e);\n                };\n                // Add shades and handles mousedown events\n                eventsToUnbind = navigator.getPartsEvents('mousedown');\n                eventsToUnbind.push(\n                // Add mouse move and mouseup events. These are bind to doc/div,\n                // because Navigator.grabbedSomething flags are stored in mousedown\n                // events\n                addEvent(chart.renderTo, 'mousemove', mouseMoveHandler), addEvent(container.ownerDocument, 'mouseup', mouseUpHandler), \n                // Touch events\n                addEvent(chart.renderTo, 'touchmove', mouseMoveHandler), addEvent(container.ownerDocument, 'touchend', mouseUpHandler));\n                eventsToUnbind.concat(navigator.getPartsEvents('touchstart'));\n                navigator.eventsToUnbind = eventsToUnbind;\n                // Data events\n                if (navigator.series && navigator.series[0]) {\n                    eventsToUnbind.push(addEvent(navigator.series[0].xAxis, 'foundExtremes', function () {\n                        chart.navigator.modifyNavigatorAxisExtremes();\n                    }));\n                }\n            }\n            /**\n             * Generate events for handles and masks\n             *\n             * @private\n             * @function Highcharts.Navigator#getPartsEvents\n             *\n             * @param {string} eventName\n             *        Event name handler, 'mousedown' or 'touchstart'\n             *\n             * @return {Array<Function>}\n             *         An array of functions to remove navigator functions from the\n             *         events again.\n             */\n            getPartsEvents(eventName) {\n                const navigator = this, events = [];\n                ['shades', 'handles'].forEach(function (name) {\n                    navigator[name].forEach(function (navigatorItem, index) {\n                        events.push(addEvent(navigatorItem.element, eventName, function (e) {\n                            navigator[name + 'Mousedown'](e, index);\n                        }));\n                    });\n                });\n                return events;\n            }\n            /**\n             * Mousedown on a shaded mask, either:\n             *\n             * - will be stored for future drag&drop\n             *\n             * - will directly shift to a new range\n             *\n             * @private\n             * @function Highcharts.Navigator#shadesMousedown\n             *\n             * @param {Highcharts.PointerEventObject} e\n             *        Mouse event\n             *\n             * @param {number} index\n             *        Index of a mask in Navigator.shades array\n             */\n            shadesMousedown(e, index) {\n                e = this.chart.pointer?.normalize(e) || e;\n                const navigator = this, chart = navigator.chart, xAxis = navigator.xAxis, zoomedMin = navigator.zoomedMin, navigatorSize = navigator.size, range = navigator.range;\n                let navigatorPosition = navigator.left, chartX = e.chartX, fixedMax, fixedMin, ext, left;\n                // For inverted chart, swap some options:\n                if (chart.inverted) {\n                    chartX = e.chartY;\n                    navigatorPosition = navigator.top;\n                }\n                if (index === 1) {\n                    // Store information for drag&drop\n                    navigator.grabbedCenter = chartX;\n                    navigator.fixedWidth = range;\n                    navigator.dragOffset = chartX - zoomedMin;\n                }\n                else {\n                    // Shift the range by clicking on shaded areas\n                    left = chartX - navigatorPosition - range / 2;\n                    if (index === 0) {\n                        left = Math.max(0, left);\n                    }\n                    else if (index === 2 && left + range >= navigatorSize) {\n                        left = navigatorSize - range;\n                        if (navigator.reversedExtremes) {\n                            // #7713\n                            left -= range;\n                            fixedMin = navigator.getUnionExtremes().dataMin;\n                        }\n                        else {\n                            // #2293, #3543\n                            fixedMax = navigator.getUnionExtremes().dataMax;\n                        }\n                    }\n                    if (left !== zoomedMin) { // It has actually moved\n                        navigator.fixedWidth = range; // #1370\n                        ext = xAxis.navigatorAxis.toFixedRange(left, left + range, fixedMin, fixedMax);\n                        if (defined(ext.min)) { // #7411\n                            fireEvent(this, 'setRange', {\n                                min: Math.min(ext.min, ext.max),\n                                max: Math.max(ext.min, ext.max),\n                                redraw: true,\n                                eventArguments: {\n                                    trigger: 'navigator'\n                                }\n                            });\n                        }\n                    }\n                }\n            }\n            /**\n             * Mousedown on a handle mask.\n             * Will store necessary information for drag&drop.\n             *\n             * @private\n             * @function Highcharts.Navigator#handlesMousedown\n             * @param {Highcharts.PointerEventObject} e\n             *        Mouse event\n             * @param {number} index\n             *        Index of a handle in Navigator.handles array\n             */\n            handlesMousedown(e, index) {\n                e = this.chart.pointer?.normalize(e) || e;\n                const navigator = this, chart = navigator.chart, baseXAxis = chart.xAxis[0], \n                // For reversed axes, min and max are changed,\n                // so the other extreme should be stored\n                reverse = navigator.reversedExtremes;\n                if (index === 0) {\n                    // Grab the left handle\n                    navigator.grabbedLeft = true;\n                    navigator.otherHandlePos = navigator.zoomedMax;\n                    navigator.fixedExtreme = reverse ? baseXAxis.min : baseXAxis.max;\n                }\n                else {\n                    // Grab the right handle\n                    navigator.grabbedRight = true;\n                    navigator.otherHandlePos = navigator.zoomedMin;\n                    navigator.fixedExtreme = reverse ? baseXAxis.max : baseXAxis.min;\n                }\n                chart.setFixedRange(void 0);\n            }\n            /**\n             * Mouse move event based on x/y mouse position.\n             *\n             * @private\n             * @function Highcharts.Navigator#onMouseMove\n             *\n             * @param {Highcharts.PointerEventObject} e\n             *        Mouse event\n             */\n            onMouseMove(e) {\n                const navigator = this, chart = navigator.chart, navigatorSize = navigator.navigatorSize, range = navigator.range, dragOffset = navigator.dragOffset, inverted = chart.inverted;\n                let left = navigator.left, chartX;\n                // In iOS, a mousemove event with e.pageX === 0 is fired when holding\n                // the finger down in the center of the scrollbar. This should be\n                // ignored.\n                if (!e.touches || e.touches[0].pageX !== 0) { // #4696\n                    e = chart.pointer?.normalize(e) || e;\n                    chartX = e.chartX;\n                    // Swap some options for inverted chart\n                    if (inverted) {\n                        left = navigator.top;\n                        chartX = e.chartY;\n                    }\n                    // Drag left handle or top handle\n                    if (navigator.grabbedLeft) {\n                        navigator.hasDragged = true;\n                        navigator.render(0, 0, chartX - left, navigator.otherHandlePos);\n                        // Drag right handle or bottom handle\n                    }\n                    else if (navigator.grabbedRight) {\n                        navigator.hasDragged = true;\n                        navigator.render(0, 0, navigator.otherHandlePos, chartX - left);\n                        // Drag scrollbar or open area in navigator\n                    }\n                    else if (navigator.grabbedCenter) {\n                        navigator.hasDragged = true;\n                        if (chartX < dragOffset) { // Outside left\n                            chartX = dragOffset;\n                            // Outside right\n                        }\n                        else if (chartX >\n                            navigatorSize + dragOffset - range) {\n                            chartX = navigatorSize + dragOffset - range;\n                        }\n                        navigator.render(0, 0, chartX - dragOffset, chartX - dragOffset + range);\n                    }\n                    if (navigator.hasDragged &&\n                        navigator.scrollbar &&\n                        pick(navigator.scrollbar.options.liveRedraw, \n                        // By default, don't run live redraw on touch\n                        // devices or if the chart is in boost.\n                        !isTouchDevice &&\n                            !this.chart.boosted)) {\n                        e.DOMType = e.type;\n                        setTimeout(function () {\n                            navigator.onMouseUp(e);\n                        }, 0);\n                    }\n                }\n            }\n            /**\n             * Mouse up event based on x/y mouse position.\n             *\n             * @private\n             * @function Highcharts.Navigator#onMouseUp\n             * @param {Highcharts.PointerEventObject} e\n             *        Mouse event\n             */\n            onMouseUp(e) {\n                const navigator = this, chart = navigator.chart, xAxis = navigator.xAxis, scrollbar = navigator.scrollbar, DOMEvent = e.DOMEvent || e, inverted = chart.inverted, verb = navigator.rendered && !navigator.hasDragged ?\n                    'animate' : 'attr';\n                let zoomedMax, zoomedMin, unionExtremes, fixedMin, fixedMax, ext;\n                if (\n                // MouseUp is called for both, navigator and scrollbar (that order),\n                // which causes calling afterSetExtremes twice. Prevent first call\n                // by checking if scrollbar is going to set new extremes (#6334)\n                (navigator.hasDragged && (!scrollbar || !scrollbar.hasDragged)) ||\n                    e.trigger === 'scrollbar') {\n                    unionExtremes = navigator.getUnionExtremes();\n                    // When dragging one handle, make sure the other one doesn't change\n                    if (navigator.zoomedMin === navigator.otherHandlePos) {\n                        fixedMin = navigator.fixedExtreme;\n                    }\n                    else if (navigator.zoomedMax === navigator.otherHandlePos) {\n                        fixedMax = navigator.fixedExtreme;\n                    }\n                    // Snap to right edge (#4076)\n                    if (navigator.zoomedMax === navigator.size) {\n                        fixedMax = navigator.reversedExtremes ?\n                            unionExtremes.dataMin :\n                            unionExtremes.dataMax;\n                    }\n                    // Snap to left edge (#7576)\n                    if (navigator.zoomedMin === 0) {\n                        fixedMin = navigator.reversedExtremes ?\n                            unionExtremes.dataMax :\n                            unionExtremes.dataMin;\n                    }\n                    ext = xAxis.navigatorAxis.toFixedRange(navigator.zoomedMin, navigator.zoomedMax, fixedMin, fixedMax);\n                    if (defined(ext.min)) {\n                        fireEvent(this, 'setRange', {\n                            min: Math.min(ext.min, ext.max),\n                            max: Math.max(ext.min, ext.max),\n                            redraw: true,\n                            animation: navigator.hasDragged ? false : null,\n                            eventArguments: {\n                                trigger: 'navigator',\n                                triggerOp: 'navigator-drag',\n                                DOMEvent: DOMEvent // #1838\n                            }\n                        });\n                    }\n                }\n                if (e.DOMType !== 'mousemove' &&\n                    e.DOMType !== 'touchmove') {\n                    navigator.grabbedLeft = navigator.grabbedRight =\n                        navigator.grabbedCenter = navigator.fixedWidth =\n                            navigator.fixedExtreme = navigator.otherHandlePos =\n                                navigator.hasDragged = navigator.dragOffset = null;\n                }\n                // Update position of navigator shades, outline and handles (#12573)\n                if (navigator.navigatorEnabled &&\n                    isNumber(navigator.zoomedMin) &&\n                    isNumber(navigator.zoomedMax)) {\n                    zoomedMin = Math.round(navigator.zoomedMin);\n                    zoomedMax = Math.round(navigator.zoomedMax);\n                    if (navigator.shades) {\n                        navigator.drawMasks(zoomedMin, zoomedMax, inverted, verb);\n                    }\n                    if (navigator.outline) {\n                        navigator.drawOutline(zoomedMin, zoomedMax, inverted, verb);\n                    }\n                    if (navigator.navigatorOptions.handles.enabled &&\n                        Object.keys(navigator.handles).length ===\n                            navigator.handles.length) {\n                        navigator.drawHandle(zoomedMin, 0, inverted, verb);\n                        navigator.drawHandle(zoomedMax, 1, inverted, verb);\n                    }\n                }\n            }\n            /**\n             * Removes the event handlers attached previously with addEvents.\n             *\n             * @private\n             * @function Highcharts.Navigator#removeEvents\n             */\n            removeEvents() {\n                if (this.eventsToUnbind) {\n                    this.eventsToUnbind.forEach(function (unbind) {\n                        unbind();\n                    });\n                    this.eventsToUnbind = void 0;\n                }\n                this.removeBaseSeriesEvents();\n            }\n            /**\n             * Remove data events.\n             *\n             * @private\n             * @function Highcharts.Navigator#removeBaseSeriesEvents\n             */\n            removeBaseSeriesEvents() {\n                const baseSeries = this.baseSeries || [];\n                if (this.navigatorEnabled && baseSeries[0]) {\n                    if (this.navigatorOptions.adaptToUpdatedData !== false) {\n                        baseSeries.forEach(function (series) {\n                            removeEvent(series, 'updatedData', this.updatedDataHandler);\n                        }, this);\n                    }\n                    // We only listen for extremes-events on the first baseSeries\n                    if (baseSeries[0].xAxis) {\n                        removeEvent(baseSeries[0].xAxis, 'foundExtremes', this.modifyBaseAxisExtremes);\n                    }\n                }\n            }\n            /**\n             * Calculate the navigator xAxis offsets\n             *\n             * @private\n             */\n            getXAxisOffsets() {\n                return (this.chart.inverted ?\n                    [this.scrollButtonSize, 0, -this.scrollButtonSize, 0] :\n                    [0, -this.scrollButtonSize, 0, this.scrollButtonSize]);\n            }\n            /**\n             * Initialize the Navigator object\n             *\n             * @private\n             * @function Highcharts.Navigator#init\n             */\n            init(chart) {\n                const chartOptions = chart.options, navigatorOptions = chartOptions.navigator || {}, navigatorEnabled = navigatorOptions.enabled, scrollbarOptions = chartOptions.scrollbar || {}, scrollbarEnabled = scrollbarOptions.enabled, height = navigatorEnabled && navigatorOptions.height || 0, scrollbarHeight = scrollbarEnabled && scrollbarOptions.height || 0, scrollButtonSize = scrollbarOptions.buttonsEnabled && scrollbarHeight || 0;\n                this.handles = [];\n                this.shades = [];\n                this.chart = chart;\n                this.setBaseSeries();\n                this.height = height;\n                this.scrollbarHeight = scrollbarHeight;\n                this.scrollButtonSize = scrollButtonSize;\n                this.scrollbarEnabled = scrollbarEnabled;\n                this.navigatorEnabled = navigatorEnabled;\n                this.navigatorOptions = navigatorOptions;\n                this.scrollbarOptions = scrollbarOptions;\n                this.setOpposite();\n                const navigator = this, baseSeries = navigator.baseSeries, xAxisIndex = chart.xAxis.length, yAxisIndex = chart.yAxis.length, baseXaxis = baseSeries && baseSeries[0] && baseSeries[0].xAxis ||\n                    chart.xAxis[0] || { options: {} };\n                chart.isDirtyBox = true;\n                if (navigator.navigatorEnabled) {\n                    const offsets = this.getXAxisOffsets();\n                    // An x axis is required for scrollbar also\n                    navigator.xAxis = new Axis(chart, merge({\n                        // Inherit base xAxis' break, ordinal options and overscroll\n                        breaks: baseXaxis.options.breaks,\n                        ordinal: baseXaxis.options.ordinal,\n                        overscroll: baseXaxis.options.overscroll\n                    }, navigatorOptions.xAxis, {\n                        type: 'datetime',\n                        yAxis: navigatorOptions.yAxis?.id,\n                        index: xAxisIndex,\n                        isInternal: true,\n                        offset: 0,\n                        keepOrdinalPadding: true, // #2436\n                        startOnTick: false,\n                        endOnTick: false,\n                        // Inherit base xAxis' padding when ordinal is false (#16915).\n                        minPadding: baseXaxis.options.ordinal ? 0 :\n                            baseXaxis.options.minPadding,\n                        maxPadding: baseXaxis.options.ordinal ? 0 :\n                            baseXaxis.options.maxPadding,\n                        zoomEnabled: false\n                    }, chart.inverted ? {\n                        offsets,\n                        width: height\n                    } : {\n                        offsets,\n                        height\n                    }), 'xAxis');\n                    navigator.yAxis = new Axis(chart, merge(navigatorOptions.yAxis, {\n                        alignTicks: false,\n                        offset: 0,\n                        index: yAxisIndex,\n                        isInternal: true,\n                        reversed: pick((navigatorOptions.yAxis &&\n                            navigatorOptions.yAxis.reversed), (chart.yAxis[0] && chart.yAxis[0].reversed), false), // #14060\n                        zoomEnabled: false\n                    }, chart.inverted ? {\n                        width: height\n                    } : {\n                        height: height\n                    }), 'yAxis');\n                    // If we have a base series, initialize the navigator series\n                    if (baseSeries || navigatorOptions.series.data) {\n                        navigator.updateNavigatorSeries(false);\n                        // If not, set up an event to listen for added series\n                    }\n                    else if (chart.series.length === 0) {\n                        navigator.unbindRedraw = addEvent(chart, 'beforeRedraw', function () {\n                            // We've got one, now add it as base\n                            if (chart.series.length > 0 && !navigator.series) {\n                                navigator.setBaseSeries();\n                                navigator.unbindRedraw(); // Reset\n                            }\n                        });\n                    }\n                    navigator.reversedExtremes = (chart.inverted && !navigator.xAxis.reversed) || (!chart.inverted && navigator.xAxis.reversed);\n                    // Render items, so we can bind events to them:\n                    navigator.renderElements();\n                    // Add mouse events\n                    navigator.addMouseEvents();\n                    // In case of scrollbar only, fake an x axis to get translation\n                }\n                else {\n                    navigator.xAxis = {\n                        chart,\n                        navigatorAxis: {\n                            fake: true\n                        },\n                        translate: function (value, reverse) {\n                            const axis = chart.xAxis[0], ext = axis.getExtremes(), scrollTrackWidth = axis.len - 2 * scrollButtonSize, min = numExt('min', axis.options.min, ext.dataMin), valueRange = numExt('max', axis.options.max, ext.dataMax) - min;\n                            return reverse ?\n                                // From pixel to value\n                                (value * valueRange / scrollTrackWidth) + min :\n                                // From value to pixel\n                                scrollTrackWidth * (value - min) / valueRange;\n                        },\n                        toPixels: function (value) {\n                            return this.translate(value);\n                        },\n                        toValue: function (value) {\n                            return this.translate(value, true);\n                        }\n                    };\n                    navigator.xAxis.navigatorAxis.axis = navigator.xAxis;\n                    navigator.xAxis.navigatorAxis.toFixedRange = (NavigatorAxisAdditions.prototype.toFixedRange.bind(navigator.xAxis.navigatorAxis));\n                }\n                // Initialize the scrollbar\n                if (chart.options.scrollbar.enabled) {\n                    const options = merge(chart.options.scrollbar, { vertical: chart.inverted });\n                    if (!isNumber(options.margin) && navigator.navigatorEnabled) {\n                        options.margin = chart.inverted ? -3 : 3;\n                    }\n                    chart.scrollbar = navigator.scrollbar = new Scrollbar(chart.renderer, options, chart);\n                    addEvent(navigator.scrollbar, 'changed', function (e) {\n                        const range = navigator.size, to = range * this.to, from = range * this.from;\n                        navigator.hasDragged = navigator.scrollbar.hasDragged;\n                        navigator.render(0, 0, from, to);\n                        if (this.shouldUpdateExtremes(e.DOMType)) {\n                            setTimeout(function () {\n                                navigator.onMouseUp(e);\n                            });\n                        }\n                    });\n                }\n                // Add data events\n                navigator.addBaseSeriesEvents();\n                // Add redraw events\n                navigator.addChartEvents();\n            }\n            /**\n             * Set the opposite property on navigator\n             *\n             * @private\n             */\n            setOpposite() {\n                const navigatorOptions = this.navigatorOptions, navigatorEnabled = this.navigatorEnabled, chart = this.chart;\n                this.opposite = pick(navigatorOptions.opposite, Boolean(!navigatorEnabled && chart.inverted)); // #6262\n            }\n            /**\n             * Get the union data extremes of the chart - the outer data extremes of the\n             * base X axis and the navigator axis.\n             *\n             * @private\n             * @function Highcharts.Navigator#getUnionExtremes\n             */\n            getUnionExtremes(returnFalseOnNoBaseSeries) {\n                const baseAxis = this.chart.xAxis[0], navAxis = this.xAxis, navAxisOptions = navAxis.options, baseAxisOptions = baseAxis.options;\n                let ret;\n                if (!returnFalseOnNoBaseSeries || baseAxis.dataMin !== null) {\n                    ret = {\n                        dataMin: pick(// #4053\n                        navAxisOptions && navAxisOptions.min, numExt('min', baseAxisOptions.min, baseAxis.dataMin, navAxis.dataMin, navAxis.min)),\n                        dataMax: pick(navAxisOptions && navAxisOptions.max, numExt('max', baseAxisOptions.max, baseAxis.dataMax, navAxis.dataMax, navAxis.max))\n                    };\n                }\n                return ret;\n            }\n            /**\n             * Set the base series and update the navigator series from this. With a bit\n             * of modification we should be able to make this an API method to be called\n             * from the outside\n             *\n             * @private\n             * @function Highcharts.Navigator#setBaseSeries\n             * @param {Highcharts.SeriesOptionsType} [baseSeriesOptions]\n             *        Additional series options for a navigator\n             * @param {boolean} [redraw]\n             *        Whether to redraw after update.\n             */\n            setBaseSeries(baseSeriesOptions, redraw) {\n                const chart = this.chart, baseSeries = this.baseSeries = [];\n                baseSeriesOptions = (baseSeriesOptions ||\n                    chart.options && chart.options.navigator.baseSeries ||\n                    (chart.series.length ?\n                        // Find the first non-navigator series (#8430)\n                        find(chart.series, (s) => (!s.options.isInternal)).index :\n                        0));\n                // Iterate through series and add the ones that should be shown in\n                // navigator.\n                (chart.series || []).forEach((series, i) => {\n                    if (\n                    // Don't include existing nav series\n                    !series.options.isInternal &&\n                        (series.options.showInNavigator ||\n                            (i === baseSeriesOptions ||\n                                series.options.id === baseSeriesOptions) &&\n                                series.options.showInNavigator !== false)) {\n                        baseSeries.push(series);\n                    }\n                });\n                // When run after render, this.xAxis already exists\n                if (this.xAxis && !this.xAxis.navigatorAxis.fake) {\n                    this.updateNavigatorSeries(true, redraw);\n                }\n            }\n            /**\n             * Update series in the navigator from baseSeries, adding new if does not\n             * exist.\n             *\n             * @private\n             * @function Highcharts.Navigator.updateNavigatorSeries\n             */\n            updateNavigatorSeries(addEvents, redraw) {\n                const navigator = this, chart = navigator.chart, baseSeries = navigator.baseSeries, navSeriesMixin = {\n                    enableMouseTracking: false,\n                    index: null, // #6162\n                    linkedTo: null, // #6734\n                    group: 'nav', // For columns\n                    padXAxis: false,\n                    xAxis: this.navigatorOptions.xAxis?.id,\n                    yAxis: this.navigatorOptions.yAxis?.id,\n                    showInLegend: false,\n                    stacking: void 0, // #4823\n                    isInternal: true,\n                    states: {\n                        inactive: {\n                            opacity: 1\n                        }\n                    }\n                }, \n                // Remove navigator series that are no longer in the baseSeries\n                navigatorSeries = navigator.series =\n                    (navigator.series || []).filter((navSeries) => {\n                        const base = navSeries.baseSeries;\n                        if (baseSeries.indexOf(base) < 0) { // Not in array\n                            // If there is still a base series connected to this\n                            // series, remove event handler and reference.\n                            if (base) {\n                                removeEvent(base, 'updatedData', navigator.updatedDataHandler);\n                                delete base.navigatorSeries;\n                            }\n                            // Kill the nav series. It may already have been\n                            // destroyed (#8715).\n                            if (navSeries.chart) {\n                                navSeries.destroy();\n                            }\n                            return false;\n                        }\n                        return true;\n                    });\n                let baseOptions, mergedNavSeriesOptions, chartNavigatorSeriesOptions = navigator.navigatorOptions.series, baseNavigatorOptions;\n                // Go through each base series and merge the options to create new\n                // series\n                if (baseSeries && baseSeries.length) {\n                    baseSeries.forEach((base) => {\n                        const linkedNavSeries = base.navigatorSeries, userNavOptions = extend(\n                        // Grab color and visibility from base as default\n                        {\n                            color: base.color,\n                            visible: base.visible\n                        }, !isArray(chartNavigatorSeriesOptions) ?\n                            chartNavigatorSeriesOptions :\n                            defaultOptions.navigator.series);\n                        // Don't update if the series exists in nav and we have disabled\n                        // adaptToUpdatedData.\n                        if (linkedNavSeries &&\n                            navigator.navigatorOptions.adaptToUpdatedData === false) {\n                            return;\n                        }\n                        navSeriesMixin.name = 'Navigator ' + baseSeries.length;\n                        baseOptions = base.options || {};\n                        baseNavigatorOptions = baseOptions.navigatorOptions || {};\n                        // The dataLabels options are not merged correctly\n                        // if the settings are an array, #13847.\n                        userNavOptions.dataLabels = splat(userNavOptions.dataLabels);\n                        mergedNavSeriesOptions = merge(baseOptions, navSeriesMixin, userNavOptions, baseNavigatorOptions);\n                        // Once nav series type is resolved, pick correct pointRange\n                        mergedNavSeriesOptions.pointRange = pick(\n                        // Stricte set pointRange in options\n                        userNavOptions.pointRange, baseNavigatorOptions.pointRange, \n                        // Fallback to default values, e.g. `null` for column\n                        defaultOptions.plotOptions[mergedNavSeriesOptions.type || 'line'].pointRange);\n                        // Merge data separately. Do a slice to avoid mutating the\n                        // navigator options from base series (#4923).\n                        const navigatorSeriesData = baseNavigatorOptions.data || userNavOptions.data;\n                        navigator.hasNavigatorData =\n                            navigator.hasNavigatorData || !!navigatorSeriesData;\n                        mergedNavSeriesOptions.data =\n                            navigatorSeriesData ||\n                                baseOptions.data && baseOptions.data.slice(0);\n                        // Update or add the series\n                        if (linkedNavSeries && linkedNavSeries.options) {\n                            linkedNavSeries.update(mergedNavSeriesOptions, redraw);\n                        }\n                        else {\n                            base.navigatorSeries = chart.initSeries(mergedNavSeriesOptions);\n                            // Set data on initial run with dataSorting enabled (#20318)\n                            chart.setSortedData();\n                            base.navigatorSeries.baseSeries = base; // Store ref\n                            navigatorSeries.push(base.navigatorSeries);\n                        }\n                    });\n                }\n                // If user has defined data (and no base series) or explicitly defined\n                // navigator.series as an array, we create these series on top of any\n                // base series.\n                if (chartNavigatorSeriesOptions.data &&\n                    !(baseSeries && baseSeries.length) ||\n                    isArray(chartNavigatorSeriesOptions)) {\n                    navigator.hasNavigatorData = false;\n                    // Allow navigator.series to be an array\n                    chartNavigatorSeriesOptions =\n                        splat(chartNavigatorSeriesOptions);\n                    chartNavigatorSeriesOptions.forEach((userSeriesOptions, i) => {\n                        navSeriesMixin.name =\n                            'Navigator ' + (navigatorSeries.length + 1);\n                        mergedNavSeriesOptions = merge(defaultOptions.navigator.series, {\n                            // Since we don't have a base series to pull color from,\n                            // try to fake it by using color from series with same\n                            // index. Otherwise pull from the colors array. We need\n                            // an explicit color as otherwise updates will increment\n                            // color counter and we'll get a new color for each\n                            // update of the nav series.\n                            color: chart.series[i] &&\n                                !chart.series[i].options.isInternal &&\n                                chart.series[i].color ||\n                                chart.options.colors[i] ||\n                                chart.options.colors[0]\n                        }, navSeriesMixin, userSeriesOptions);\n                        mergedNavSeriesOptions.data = userSeriesOptions.data;\n                        if (mergedNavSeriesOptions.data) {\n                            navigator.hasNavigatorData = true;\n                            navigatorSeries.push(chart.initSeries(mergedNavSeriesOptions));\n                        }\n                    });\n                }\n                if (addEvents) {\n                    this.addBaseSeriesEvents();\n                }\n            }\n            /**\n             * Add data events.\n             * For example when main series is updated we need to recalculate extremes\n             *\n             * @private\n             * @function Highcharts.Navigator#addBaseSeriesEvent\n             */\n            addBaseSeriesEvents() {\n                const navigator = this, baseSeries = navigator.baseSeries || [];\n                // Bind modified extremes event to first base's xAxis only.\n                // In event of > 1 base-xAxes, the navigator will ignore those.\n                // Adding this multiple times to the same axis is no problem, as\n                // duplicates should be discarded by the browser.\n                if (baseSeries[0] && baseSeries[0].xAxis) {\n                    baseSeries[0].eventsToUnbind.push(addEvent(baseSeries[0].xAxis, 'foundExtremes', this.modifyBaseAxisExtremes));\n                }\n                baseSeries.forEach((base) => {\n                    // Link base series show/hide to navigator series visibility\n                    base.eventsToUnbind.push(addEvent(base, 'show', function () {\n                        if (this.navigatorSeries) {\n                            this.navigatorSeries.setVisible(true, false);\n                        }\n                    }));\n                    base.eventsToUnbind.push(addEvent(base, 'hide', function () {\n                        if (this.navigatorSeries) {\n                            this.navigatorSeries.setVisible(false, false);\n                        }\n                    }));\n                    // Respond to updated data in the base series, unless explicitly\n                    // not adapting to data changes.\n                    if (this.navigatorOptions.adaptToUpdatedData !== false) {\n                        if (base.xAxis) {\n                            base.eventsToUnbind.push(addEvent(base, 'updatedData', this.updatedDataHandler));\n                        }\n                    }\n                    // Handle series removal\n                    base.eventsToUnbind.push(addEvent(base, 'remove', function () {\n                        if (baseSeries) {\n                            erase(baseSeries, base); // #21043\n                        }\n                        if (this.navigatorSeries) {\n                            erase(navigator.series, this.navigatorSeries);\n                            if (defined(this.navigatorSeries.options)) {\n                                this.navigatorSeries.remove(false);\n                            }\n                            delete this.navigatorSeries;\n                        }\n                    }));\n                });\n            }\n            /**\n             * Get minimum from all base series connected to the navigator\n             * @private\n             * @param {number} currentSeriesMin\n             *        Minium from the current series\n             * @return {number}\n             *         Minimum from all series\n             */\n            getBaseSeriesMin(currentSeriesMin) {\n                return this.baseSeries.reduce(function (min, series) {\n                    // (#10193)\n                    return Math.min(min, series.xData && series.xData.length ?\n                        series.xData[0] : min);\n                }, currentSeriesMin);\n            }\n            /**\n             * Set the navigator x axis extremes to reflect the total. The navigator\n             * extremes should always be the extremes of the union of all series in the\n             * chart as well as the navigator series.\n             *\n             * @private\n             * @function Highcharts.Navigator#modifyNavigatorAxisExtremes\n             */\n            modifyNavigatorAxisExtremes() {\n                const xAxis = this.xAxis;\n                if (typeof xAxis.getExtremes !== 'undefined') {\n                    const unionExtremes = this.getUnionExtremes(true);\n                    if (unionExtremes &&\n                        (unionExtremes.dataMin !== xAxis.min ||\n                            unionExtremes.dataMax !== xAxis.max)) {\n                        xAxis.min = unionExtremes.dataMin;\n                        xAxis.max = unionExtremes.dataMax;\n                    }\n                }\n            }\n            /**\n             * Hook to modify the base axis extremes with information from the Navigator\n             *\n             * @private\n             * @function Highcharts.Navigator#modifyBaseAxisExtremes\n             */\n            modifyBaseAxisExtremes() {\n                const baseXAxis = this, navigator = baseXAxis.chart.navigator, baseExtremes = baseXAxis.getExtremes(), baseMin = baseExtremes.min, baseMax = baseExtremes.max, baseDataMin = baseExtremes.dataMin, baseDataMax = baseExtremes.dataMax, range = baseMax - baseMin, stickToMin = navigator.stickToMin, stickToMax = navigator.stickToMax, overscroll = pick(baseXAxis.ordinal?.convertOverscroll(baseXAxis.options.overscroll), 0), navigatorSeries = navigator.series && navigator.series[0], hasSetExtremes = !!baseXAxis.setExtremes, \n                // When the extremes have been set by range selector button, don't\n                // stick to min or max. The range selector buttons will handle the\n                // extremes. (#5489)\n                unmutable = baseXAxis.eventArgs &&\n                    baseXAxis.eventArgs.trigger === 'rangeSelectorButton';\n                let newMax, newMin;\n                if (!unmutable) {\n                    // If the zoomed range is already at the min, move it to the right\n                    // as new data comes in\n                    if (stickToMin) {\n                        newMin = baseDataMin;\n                        newMax = newMin + range;\n                    }\n                    // If the zoomed range is already at the max, move it to the right\n                    // as new data comes in\n                    if (stickToMax) {\n                        newMax = baseDataMax + overscroll;\n                        // If stickToMin is true, the new min value is set above\n                        if (!stickToMin) {\n                            newMin = Math.max(baseDataMin, // Don't go below data extremes (#13184)\n                            newMax - range, navigator.getBaseSeriesMin(navigatorSeries && navigatorSeries.xData ?\n                                navigatorSeries.xData[0] :\n                                -Number.MAX_VALUE));\n                        }\n                    }\n                    // Update the extremes\n                    if (hasSetExtremes && (stickToMin || stickToMax)) {\n                        if (isNumber(newMin)) {\n                            baseXAxis.min = baseXAxis.userMin = newMin;\n                            baseXAxis.max = baseXAxis.userMax = newMax;\n                        }\n                    }\n                }\n                // Reset\n                navigator.stickToMin =\n                    navigator.stickToMax = null;\n            }\n            /**\n             * Handler for updated data on the base series. When data is modified, the\n             * navigator series must reflect it. This is called from the Chart.redraw\n             * function before axis and series extremes are computed.\n             *\n             * @private\n             * @function Highcharts.Navigator#updateDataHandler\n             */\n            updatedDataHandler() {\n                const navigator = this.chart.navigator, baseSeries = this, navigatorSeries = this.navigatorSeries, shouldStickToMax = navigator.reversedExtremes ?\n                    Math.round(navigator.zoomedMin) === 0 :\n                    Math.round(navigator.zoomedMax) >= Math.round(navigator.size);\n                // If the scrollbar is scrolled all the way to the right, keep right as\n                // new data comes in, unless user set navigator.stickToMax to false.\n                navigator.stickToMax = pick(this.chart.options.navigator &&\n                    this.chart.options.navigator.stickToMax, shouldStickToMax);\n                navigator.stickToMin = navigator.shouldStickToMin(baseSeries, navigator);\n                // Set the navigator series data to the new data of the base series\n                if (navigatorSeries && !navigator.hasNavigatorData) {\n                    navigatorSeries.options.pointStart = baseSeries.xData[0];\n                    navigatorSeries.setData(baseSeries.options.data, false, null, false); // #5414\n                }\n            }\n            /**\n             * Detect if the zoomed area should stick to the minimum, #14742.\n             *\n             * @private\n             * @function Highcharts.Navigator#shouldStickToMin\n             */\n            shouldStickToMin(baseSeries, navigator) {\n                const xDataMin = navigator.getBaseSeriesMin(baseSeries.xData[0]), xAxis = baseSeries.xAxis, max = xAxis.max, min = xAxis.min, range = xAxis.options.range;\n                let stickToMin = true;\n                if (isNumber(max) && isNumber(min)) {\n                    // If range declared, stick to the minimum only if the range\n                    // is smaller than the data set range.\n                    if (range && max - xDataMin > 0) {\n                        stickToMin = max - xDataMin < range;\n                    }\n                    else {\n                        // If the current axis minimum falls outside the new\n                        // updated dataset, we must adjust.\n                        stickToMin = min <= xDataMin;\n                    }\n                }\n                else {\n                    stickToMin = false; // #15864\n                }\n                return stickToMin;\n            }\n            /**\n             * Add chart events, like redrawing navigator, when chart requires that.\n             *\n             * @private\n             * @function Highcharts.Navigator#addChartEvents\n             */\n            addChartEvents() {\n                if (!this.eventsToUnbind) {\n                    this.eventsToUnbind = [];\n                }\n                this.eventsToUnbind.push(\n                // Move the scrollbar after redraw, like after data updata even if\n                // axes don't redraw\n                addEvent(this.chart, 'redraw', function () {\n                    const navigator = this.navigator, xAxis = navigator && (navigator.baseSeries &&\n                        navigator.baseSeries[0] &&\n                        navigator.baseSeries[0].xAxis ||\n                        this.xAxis[0]); // #5709, #13114\n                    if (xAxis) {\n                        navigator.render(xAxis.min, xAxis.max);\n                    }\n                }), \n                // Make room for the navigator, can be placed around the chart:\n                addEvent(this.chart, 'getMargins', function () {\n                    const chart = this, navigator = chart.navigator;\n                    let marginName = navigator.opposite ?\n                        'plotTop' : 'marginBottom';\n                    if (chart.inverted) {\n                        marginName = navigator.opposite ?\n                            'marginRight' : 'plotLeft';\n                    }\n                    chart[marginName] =\n                        (chart[marginName] || 0) + (navigator.navigatorEnabled || !chart.inverted ?\n                            navigator.height + navigator.scrollbarHeight :\n                            0) + navigator.navigatorOptions.margin;\n                }), addEvent(Navigator, 'setRange', function (e) {\n                    this.chart.xAxis[0].setExtremes(e.min, e.max, e.redraw, e.animation, e.eventArguments);\n                }));\n            }\n            /**\n             * Destroys allocated elements.\n             *\n             * @private\n             * @function Highcharts.Navigator#destroy\n             */\n            destroy() {\n                // Disconnect events added in addEvents\n                this.removeEvents();\n                if (this.xAxis) {\n                    erase(this.chart.xAxis, this.xAxis);\n                    erase(this.chart.axes, this.xAxis);\n                }\n                if (this.yAxis) {\n                    erase(this.chart.yAxis, this.yAxis);\n                    erase(this.chart.axes, this.yAxis);\n                }\n                // Destroy series\n                (this.series || []).forEach((s) => {\n                    if (s.destroy) {\n                        s.destroy();\n                    }\n                });\n                // Destroy properties\n                [\n                    'series', 'xAxis', 'yAxis', 'shades', 'outline', 'scrollbarTrack',\n                    'scrollbarRifles', 'scrollbarGroup', 'scrollbar', 'navigatorGroup',\n                    'rendered'\n                ].forEach((prop) => {\n                    if (this[prop] && this[prop].destroy) {\n                        this[prop].destroy();\n                    }\n                    this[prop] = null;\n                });\n                // Destroy elements in collection\n                [this.handles].forEach((coll) => {\n                    destroyObjectProperties(coll);\n                });\n                this.navigatorEnabled = false;\n            }\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return Navigator;\n    });\n    _registerModule(_modules, 'Accessibility/Components/NavigatorComponent.js', [_modules['Accessibility/AccessibilityComponent.js'], _modules['Accessibility/Utils/Announcer.js'], _modules['Accessibility/KeyboardNavigationHandler.js'], _modules['Stock/Navigator/Navigator.js'], _modules['Core/Animation/AnimationUtilities.js'], _modules['Core/Templating.js'], _modules['Core/Utilities.js'], _modules['Accessibility/Utils/HTMLUtilities.js'], _modules['Accessibility/Utils/ChartUtilities.js']], function (AccessibilityComponent, Announcer, KeyboardNavigationHandler, Navigator, A, T, U, HU, CU) {\n        /* *\n         *\n         *  (c) 2009-2024 Highsoft AS\n         *\n         *  Accessibility component for the navigator.\n         *\n         *  Author: Ã˜ystein Moseng\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        /* *\n         *\n         *  Imports\n         *\n         * */\n        const { animObject } = A;\n        const { format } = T;\n        const { clamp, pick, syncTimeout } = U;\n        const { getFakeMouseEvent } = HU;\n        const { getAxisRangeDescription, fireEventOnWrappedOrUnwrappedElement } = CU;\n        /**\n         * The NavigatorComponent class\n         *\n         * @private\n         * @class\n         * @name Highcharts.NavigatorComponent\n         */\n        class NavigatorComponent extends AccessibilityComponent {\n            /**\n             * Init the component\n             * @private\n             */\n            init() {\n                const chart = this.chart, component = this;\n                this.announcer = new Announcer(chart, 'polite');\n                // Update positions after render\n                this.addEvent(Navigator, 'afterRender', function () {\n                    if (this.chart === component.chart &&\n                        this.chart.renderer) {\n                        syncTimeout(() => {\n                            component.proxyProvider\n                                .updateGroupProxyElementPositions('navigator');\n                            component.updateHandleValues();\n                        }, animObject(pick(this.chart.renderer.globalAnimation, true)).duration);\n                    }\n                });\n            }\n            /**\n             * Called on updates\n             * @private\n             */\n            onChartUpdate() {\n                const chart = this.chart, options = chart.options, navigator = options.navigator;\n                if (navigator.enabled && navigator.accessibility?.enabled) {\n                    const verbosity = options.accessibility.landmarkVerbosity, groupFormatStr = options.lang\n                        .accessibility?.navigator.groupLabel;\n                    // We just recreate the group for simplicity. Could consider\n                    // updating the existing group if the verbosity has not changed.\n                    this.proxyProvider.removeGroup('navigator');\n                    this.proxyProvider.addGroup('navigator', 'div', {\n                        role: verbosity === 'all' ? 'region' : 'group',\n                        'aria-label': format(groupFormatStr, { chart }, chart)\n                    });\n                    const handleFormatStr = options.lang\n                        .accessibility?.navigator.handleLabel;\n                    [0, 1].forEach((n) => {\n                        const handle = this.getHandleByIx(n);\n                        if (handle) {\n                            const proxyEl = this.proxyProvider.addProxyElement('navigator', {\n                                click: handle\n                            }, 'input', {\n                                type: 'range',\n                                'aria-label': format(handleFormatStr, { handleIx: n, chart }, chart)\n                            });\n                            this[n ? 'maxHandleProxy' : 'minHandleProxy'] =\n                                proxyEl.innerElement;\n                            proxyEl.innerElement.style.pointerEvents = 'none';\n                            proxyEl.innerElement.oninput =\n                                () => this.updateNavigator();\n                        }\n                    });\n                    this.updateHandleValues();\n                }\n                else {\n                    this.proxyProvider.removeGroup('navigator');\n                }\n            }\n            /**\n             * Get navigation for a navigator handle.\n             * @private\n             * @return {Highcharts.KeyboardNavigationHandler} The module object.\n             */\n            getNavigatorHandleNavigation(handleIx) {\n                const component = this, chart = this.chart, proxyEl = handleIx ? this.maxHandleProxy : this.minHandleProxy, keys = this.keyCodes;\n                return new KeyboardNavigationHandler(chart, {\n                    keyCodeMap: [[\n                            [keys.left, keys.right, keys.up, keys.down],\n                            function (keyCode) {\n                                if (proxyEl) {\n                                    const delta = keyCode === keys.left ||\n                                        keyCode === keys.up ? -1 : 1;\n                                    proxyEl.value = '' + clamp(parseFloat(proxyEl.value) + delta, 0, 100);\n                                    component.updateNavigator(() => {\n                                        const handle = component.getHandleByIx(handleIx);\n                                        if (handle) {\n                                            chart.setFocusToElement(handle, proxyEl);\n                                        }\n                                    });\n                                }\n                                return this.response.success;\n                            }\n                        ]],\n                    init: () => {\n                        chart.setFocusToElement(this.getHandleByIx(handleIx), proxyEl);\n                    },\n                    validate: () => !!(this.getHandleByIx(handleIx) && proxyEl &&\n                        chart.options.navigator.accessibility?.enabled)\n                });\n            }\n            /**\n             * Get keyboard navigation handlers for this component.\n             * @return {Array<Highcharts.KeyboardNavigationHandler>}\n             *         List of module objects.\n             */\n            getKeyboardNavigation() {\n                return [\n                    this.getNavigatorHandleNavigation(0),\n                    this.getNavigatorHandleNavigation(1)\n                ];\n            }\n            /**\n             * Remove component traces\n             */\n            destroy() {\n                if (this.updateNavigatorThrottleTimer) {\n                    clearTimeout(this.updateNavigatorThrottleTimer);\n                }\n                this.proxyProvider.removeGroup('navigator');\n                if (this.announcer) {\n                    this.announcer.destroy();\n                }\n            }\n            /**\n             * Update the value of the handles to match current navigator pos.\n             * @private\n             */\n            updateHandleValues() {\n                const navigator = this.chart.navigator;\n                if (navigator && this.minHandleProxy && this.maxHandleProxy) {\n                    const length = navigator.size;\n                    this.minHandleProxy.value =\n                        '' + Math.round(navigator.zoomedMin / length * 100);\n                    this.maxHandleProxy.value =\n                        '' + Math.round(navigator.zoomedMax / length * 100);\n                }\n            }\n            /**\n             * Get a navigator handle by its index\n             * @private\n             */\n            getHandleByIx(ix) {\n                const navigator = this.chart.navigator;\n                return navigator && navigator.handles &&\n                    navigator.handles[ix];\n            }\n            /**\n             * Update navigator to match changed proxy values.\n             * @private\n             */\n            updateNavigator(beforeAnnounce) {\n                const performUpdate = (beforeAnnounce) => {\n                    const chart = this.chart, { navigator, pointer } = chart;\n                    if (navigator &&\n                        pointer &&\n                        this.minHandleProxy &&\n                        this.maxHandleProxy) {\n                        const chartPos = pointer.getChartPosition(), minNewX = parseFloat(this.minHandleProxy.value) /\n                            100 * navigator.size, maxNewX = parseFloat(this.maxHandleProxy.value) /\n                            100 * navigator.size;\n                        // Fire fake events in order for each handle.\n                        [\n                            [0, 'mousedown', navigator.zoomedMin],\n                            [0, 'mousemove', minNewX],\n                            [0, 'mouseup', minNewX],\n                            [1, 'mousedown', navigator.zoomedMax],\n                            [1, 'mousemove', maxNewX],\n                            [1, 'mouseup', maxNewX]\n                        ].forEach(([handleIx, type, x]) => {\n                            const handle = this.getHandleByIx(handleIx)?.element;\n                            if (handle) {\n                                fireEventOnWrappedOrUnwrappedElement(handle, getFakeMouseEvent(type, {\n                                    x: chartPos.left + navigator.left + x,\n                                    y: chartPos.top + navigator.top\n                                }, handle));\n                            }\n                        });\n                        if (beforeAnnounce) {\n                            beforeAnnounce();\n                        }\n                        // Announce the update\n                        const announceFormatStr = chart.options.lang\n                            .accessibility?.navigator.changeAnnouncement, axisRangeDescription = getAxisRangeDescription(chart.xAxis[0]);\n                        this.announcer.announce(format(announceFormatStr, { axisRangeDescription, chart }, chart));\n                    }\n                };\n                // Throttle updates so as not to reduce performance with\n                // continuous keypress.\n                if (this.updateNavigatorThrottleTimer) {\n                    clearTimeout(this.updateNavigatorThrottleTimer);\n                }\n                this.updateNavigatorThrottleTimer = setTimeout(performUpdate.bind(this, beforeAnnounce), 20);\n            }\n        }\n        /* *\n         *\n         *  Export Default\n         *\n         * */\n\n        return NavigatorComponent;\n    });\n    _registerModule(_modules, 'Accessibility/Components/SeriesComponent/SeriesDescriber.js', [_modules['Accessibility/Components/AnnotationsA11y.js'], _modules['Accessibility/Utils/ChartUtilities.js'], _modules['Core/Templating.js'], _modules['Accessibility/Utils/HTMLUtilities.js'], _modules['Core/Utilities.js']], function (AnnotationsA11y, ChartUtilities, F, HTMLUtilities, U) {\n        /* *\n         *\n         *  (c) 2009-2024 Ã˜ystein Moseng\n         *\n         *  Place desriptions on a series and its points.\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { getPointAnnotationTexts } = AnnotationsA11y;\n        const { getAxisDescription, getSeriesFirstPointElement, getSeriesA11yElement, unhideChartElementFromAT } = ChartUtilities;\n        const { format, numberFormat } = F;\n        const { reverseChildNodes, stripHTMLTagsFromString: stripHTMLTags } = HTMLUtilities;\n        const { find, isNumber, isString, pick, defined } = U;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /* eslint-disable valid-jsdoc */\n        /**\n         * @private\n         */\n        function findFirstPointWithGraphic(point) {\n            const sourcePointIndex = point.index;\n            if (!point.series || !point.series.data || !defined(sourcePointIndex)) {\n                return null;\n            }\n            return find(point.series.data, function (p) {\n                return !!(p &&\n                    typeof p.index !== 'undefined' &&\n                    p.index > sourcePointIndex &&\n                    p.graphic &&\n                    p.graphic.element);\n            }) || null;\n        }\n        /**\n         * Whether or not we should add a mock point element in\n         * order to describe a point that has no graphic.\n         * @private\n         */\n        function shouldAddMockPoint(point) {\n            // Note: Sunburst series use isNull for hidden points on drilldown.\n            // Ignore these.\n            const series = point.series, chart = series && series.chart, isSunburst = series && series.is('sunburst'), isNull = point.isNull, shouldDescribeNull = chart &&\n                chart\n                    .options.accessibility.point.describeNull;\n            return isNull && !isSunburst && shouldDescribeNull;\n        }\n        /**\n         * @private\n         */\n        function makeMockElement(point, pos) {\n            const renderer = point.series.chart.renderer, mock = renderer.rect(pos.x, pos.y, 1, 1);\n            mock.attr({\n                'class': 'highcharts-a11y-mock-point',\n                fill: 'none',\n                opacity: 0,\n                'fill-opacity': 0,\n                'stroke-opacity': 0\n            });\n            return mock;\n        }\n        /**\n         * @private\n         */\n        function addMockPointElement(point) {\n            const series = point.series, firstPointWithGraphic = findFirstPointWithGraphic(point), firstGraphic = firstPointWithGraphic && firstPointWithGraphic.graphic, parentGroup = firstGraphic ?\n                firstGraphic.parentGroup :\n                series.graph || series.group, mockPos = firstPointWithGraphic ? {\n                x: pick(point.plotX, firstPointWithGraphic.plotX, 0),\n                y: pick(point.plotY, firstPointWithGraphic.plotY, 0)\n            } : {\n                x: pick(point.plotX, 0),\n                y: pick(point.plotY, 0)\n            }, mockElement = makeMockElement(point, mockPos);\n            if (parentGroup && parentGroup.element) {\n                point.graphic = mockElement;\n                point.hasMockGraphic = true;\n                mockElement.add(parentGroup);\n                // Move to correct pos in DOM\n                parentGroup.element.insertBefore(mockElement.element, firstGraphic ? firstGraphic.element : null);\n                return mockElement.element;\n            }\n        }\n        /**\n         * @private\n         */\n        function hasMorePointsThanDescriptionThreshold(series) {\n            const chartA11yOptions = series.chart.options.accessibility, threshold = (chartA11yOptions.series.pointDescriptionEnabledThreshold);\n            return !!(threshold !== false &&\n                series.points &&\n                series.points.length >= +threshold);\n        }\n        /**\n         * @private\n         */\n        function shouldSetScreenReaderPropsOnPoints(series) {\n            const seriesA11yOptions = series.options.accessibility || {};\n            return !hasMorePointsThanDescriptionThreshold(series) &&\n                !seriesA11yOptions.exposeAsGroupOnly;\n        }\n        /**\n         * @private\n         */\n        function shouldSetKeyboardNavPropsOnPoints(series) {\n            const chartA11yOptions = series.chart.options.accessibility, seriesNavOptions = chartA11yOptions.keyboardNavigation.seriesNavigation;\n            return !!(series.points && (series.points.length <\n                +seriesNavOptions.pointNavigationEnabledThreshold ||\n                seriesNavOptions.pointNavigationEnabledThreshold === false));\n        }\n        /**\n         * @private\n         */\n        function shouldDescribeSeriesElement(series) {\n            const chart = series.chart, chartOptions = chart.options.chart, chartHas3d = chartOptions.options3d && chartOptions.options3d.enabled, hasMultipleSeries = chart.series.length > 1, describeSingleSeriesOption = chart.options.accessibility.series.describeSingleSeries, exposeAsGroupOnlyOption = (series.options.accessibility || {}).exposeAsGroupOnly, noDescribe3D = chartHas3d && hasMultipleSeries;\n            return !noDescribe3D && (hasMultipleSeries || describeSingleSeriesOption ||\n                exposeAsGroupOnlyOption || hasMorePointsThanDescriptionThreshold(series));\n        }\n        /**\n         * @private\n         */\n        function pointNumberToString(point, value) {\n            const series = point.series, chart = series.chart, a11yPointOptions = chart.options.accessibility.point || {}, seriesA11yPointOptions = series.options.accessibility &&\n                series.options.accessibility.point || {}, tooltipOptions = series.tooltipOptions || {}, lang = chart.options.lang;\n            if (isNumber(value)) {\n                return numberFormat(value, seriesA11yPointOptions.valueDecimals ||\n                    a11yPointOptions.valueDecimals ||\n                    tooltipOptions.valueDecimals ||\n                    -1, lang.decimalPoint, lang.accessibility.thousandsSep || lang.thousandsSep);\n            }\n            return value;\n        }\n        /**\n         * @private\n         */\n        function getSeriesDescriptionText(series) {\n            const seriesA11yOptions = series.options.accessibility || {}, descOpt = seriesA11yOptions.description;\n            return descOpt && series.chart.langFormat('accessibility.series.description', {\n                description: descOpt,\n                series: series\n            }) || '';\n        }\n        /**\n         * @private\n         */\n        function getSeriesAxisDescriptionText(series, axisCollection) {\n            const axis = series[axisCollection];\n            return series.chart.langFormat('accessibility.series.' + axisCollection + 'Description', {\n                name: getAxisDescription(axis),\n                series: series\n            });\n        }\n        /**\n         * Get accessible time description for a point on a datetime axis.\n         *\n         * @private\n         */\n        function getPointA11yTimeDescription(point) {\n            const series = point.series, chart = series.chart, seriesA11yOptions = series.options.accessibility &&\n                series.options.accessibility.point || {}, a11yOptions = chart.options.accessibility.point || {}, dateXAxis = series.xAxis && series.xAxis.dateTime;\n            if (dateXAxis) {\n                const tooltipDateFormat = dateXAxis.getXDateFormat(point.x || 0, chart.options.tooltip.dateTimeLabelFormats), dateFormat = seriesA11yOptions.dateFormatter &&\n                    seriesA11yOptions.dateFormatter(point) ||\n                    a11yOptions.dateFormatter && a11yOptions.dateFormatter(point) ||\n                    seriesA11yOptions.dateFormat ||\n                    a11yOptions.dateFormat ||\n                    tooltipDateFormat;\n                return chart.time.dateFormat(dateFormat, point.x || 0, void 0);\n            }\n        }\n        /**\n         * @private\n         */\n        function getPointXDescription(point) {\n            const timeDesc = getPointA11yTimeDescription(point), xAxis = point.series.xAxis || {}, pointCategory = xAxis.categories && defined(point.category) &&\n                ('' + point.category).replace('<br/>', ' '), canUseId = defined(point.id) &&\n                ('' + point.id).indexOf('highcharts-') < 0, fallback = 'x, ' + point.x;\n            return point.name || timeDesc || pointCategory ||\n                (canUseId ? point.id : fallback);\n        }\n        /**\n         * @private\n         */\n        function getPointArrayMapValueDescription(point, prefix, suffix) {\n            const pre = prefix || '', suf = suffix || '', keyToValStr = function (key) {\n                const num = pointNumberToString(point, pick(point[key], point.options[key]));\n                return num !== void 0 ?\n                    key + ': ' + pre + num + suf :\n                    num;\n            }, pointArrayMap = point.series.pointArrayMap;\n            return pointArrayMap.reduce(function (desc, key) {\n                const propDesc = keyToValStr(key);\n                return propDesc ?\n                    (desc + (desc.length ? ', ' : '') + propDesc) :\n                    desc;\n            }, '');\n        }\n        /**\n         * @private\n         */\n        function getPointValue(point) {\n            const series = point.series, a11yPointOpts = series.chart.options.accessibility.point || {}, seriesA11yPointOpts = series.chart.options.accessibility &&\n                series.chart.options.accessibility.point || {}, tooltipOptions = series.tooltipOptions || {}, valuePrefix = seriesA11yPointOpts.valuePrefix ||\n                a11yPointOpts.valuePrefix ||\n                tooltipOptions.valuePrefix ||\n                '', valueSuffix = seriesA11yPointOpts.valueSuffix ||\n                a11yPointOpts.valueSuffix ||\n                tooltipOptions.valueSuffix ||\n                '', fallbackKey = (typeof point.value !==\n                'undefined' ?\n                'value' : 'y'), fallbackDesc = pointNumberToString(point, point[fallbackKey]);\n            if (point.isNull) {\n                return series.chart.langFormat('accessibility.series.nullPointValue', {\n                    point: point\n                });\n            }\n            if (series.pointArrayMap) {\n                return getPointArrayMapValueDescription(point, valuePrefix, valueSuffix);\n            }\n            return valuePrefix + fallbackDesc + valueSuffix;\n        }\n        /**\n         * Return the description for the annotation(s) connected to a point, or\n         * empty string if none.\n         *\n         * @private\n         * @param {Highcharts.Point} point\n         * The data point to get the annotation info from.\n         * @return {string}\n         * Annotation description\n         */\n        function getPointAnnotationDescription(point) {\n            const chart = point.series.chart;\n            const langKey = 'accessibility.series.pointAnnotationsDescription';\n            const annotations = getPointAnnotationTexts(point);\n            const context = { point, annotations };\n            return annotations.length ? chart.langFormat(langKey, context) : '';\n        }\n        /**\n         * Return string with information about point.\n         * @private\n         */\n        function getPointValueDescription(point) {\n            const series = point.series, chart = series.chart, seriesA11yOptions = series.options.accessibility, seriesValueDescFormat = seriesA11yOptions && seriesA11yOptions.point &&\n                seriesA11yOptions.point.valueDescriptionFormat, pointValueDescriptionFormat = seriesValueDescFormat ||\n                chart.options.accessibility.point.valueDescriptionFormat, showXDescription = pick(series.xAxis &&\n                series.xAxis.options.accessibility &&\n                series.xAxis.options.accessibility.enabled, !chart.angular && series.type !== 'flowmap'), xDesc = showXDescription ? getPointXDescription(point) : '', context = {\n                point: point,\n                index: defined(point.index) ? (point.index + 1) : '',\n                xDescription: xDesc,\n                value: getPointValue(point),\n                separator: showXDescription ? ', ' : ''\n            };\n            return format(pointValueDescriptionFormat, context, chart);\n        }\n        /**\n         * Return string with information about point.\n         * @private\n         */\n        function defaultPointDescriptionFormatter(point) {\n            const series = point.series, shouldExposeSeriesName = series.chart.series.length > 1 ||\n                series.options.name, valText = getPointValueDescription(point), description = point.options && point.options.accessibility &&\n                point.options.accessibility.description, userDescText = description ? ' ' + description : '', seriesNameText = shouldExposeSeriesName ? ' ' + series.name + '.' : '', annotationsDesc = getPointAnnotationDescription(point), pointAnnotationsText = annotationsDesc ? ' ' + annotationsDesc : '';\n            point.accessibility = point.accessibility || {};\n            point.accessibility.valueDescription = valText;\n            return valText + userDescText + seriesNameText + pointAnnotationsText;\n        }\n        /**\n         * Set a11y props on a point element\n         * @private\n         * @param {Highcharts.Point} point\n         * @param {Highcharts.HTMLDOMElement|Highcharts.SVGDOMElement} pointElement\n         */\n        function setPointScreenReaderAttribs(point, pointElement) {\n            const series = point.series, seriesPointA11yOptions = series.options.accessibility?.point || {}, a11yPointOptions = series.chart.options.accessibility.point || {}, label = stripHTMLTags((isString(seriesPointA11yOptions.descriptionFormat) &&\n                format(seriesPointA11yOptions.descriptionFormat, point, series.chart)) ||\n                seriesPointA11yOptions.descriptionFormatter?.(point) ||\n                (isString(a11yPointOptions.descriptionFormat) &&\n                    format(a11yPointOptions.descriptionFormat, point, series.chart)) ||\n                a11yPointOptions.descriptionFormatter?.(point) ||\n                defaultPointDescriptionFormatter(point), series.chart.renderer.forExport);\n            pointElement.setAttribute('role', 'img');\n            pointElement.setAttribute('aria-label', label);\n        }\n        /**\n         * Add accessible info to individual point elements of a series\n         * @private\n         * @param {Highcharts.Series} series\n         */\n        function describePointsInSeries(series) {\n            const setScreenReaderProps = shouldSetScreenReaderPropsOnPoints(series), setKeyboardProps = shouldSetKeyboardNavPropsOnPoints(series), shouldDescribeNullPoints = series.chart.options.accessibility\n                .point.describeNull;\n            if (setScreenReaderProps || setKeyboardProps) {\n                series.points.forEach((point) => {\n                    const pointEl = point.graphic && point.graphic.element ||\n                        shouldAddMockPoint(point) && addMockPointElement(point), pointA11yDisabled = (point.options &&\n                        point.options.accessibility &&\n                        point.options.accessibility.enabled === false);\n                    if (pointEl) {\n                        if (point.isNull && !shouldDescribeNullPoints) {\n                            pointEl.setAttribute('aria-hidden', true);\n                            return;\n                        }\n                        // We always set tabindex, as long as we are setting props.\n                        // When setting tabindex, also remove default outline to\n                        // avoid ugly border on click.\n                        pointEl.setAttribute('tabindex', '-1');\n                        if (!series.chart.styledMode) {\n                            pointEl.style.outline = 'none';\n                        }\n                        if (setScreenReaderProps && !pointA11yDisabled) {\n                            setPointScreenReaderAttribs(point, pointEl);\n                        }\n                        else {\n                            pointEl.setAttribute('aria-hidden', true);\n                        }\n                    }\n                });\n            }\n        }\n        /**\n         * Return string with information about series.\n         * @private\n         */\n        function defaultSeriesDescriptionFormatter(series) {\n            const chart = series.chart, chartTypes = chart.types || [], description = getSeriesDescriptionText(series), shouldDescribeAxis = function (coll) {\n                return chart[coll] && chart[coll].length > 1 && series[coll];\n            }, seriesNumber = series.index + 1, xAxisInfo = getSeriesAxisDescriptionText(series, 'xAxis'), yAxisInfo = getSeriesAxisDescriptionText(series, 'yAxis'), summaryContext = {\n                seriesNumber,\n                series,\n                chart\n            }, combinationSuffix = chartTypes.length > 1 ? 'Combination' : '', summary = chart.langFormat('accessibility.series.summary.' + series.type + combinationSuffix, summaryContext) || chart.langFormat('accessibility.series.summary.default' + combinationSuffix, summaryContext), axisDescription = (shouldDescribeAxis('yAxis') ? ' ' + yAxisInfo + '.' : '') + (shouldDescribeAxis('xAxis') ? ' ' + xAxisInfo + '.' : ''), formatStr = pick(series.options.accessibility &&\n                series.options.accessibility.descriptionFormat, chart.options.accessibility.series.descriptionFormat, '');\n            return format(formatStr, {\n                seriesDescription: summary,\n                authorDescription: (description ? ' ' + description : ''),\n                axisDescription,\n                series,\n                chart,\n                seriesNumber\n            }, void 0);\n        }\n        /**\n         * Set a11y props on a series element\n         * @private\n         * @param {Highcharts.Series} series\n         * @param {Highcharts.HTMLDOMElement|Highcharts.SVGDOMElement} seriesElement\n         */\n        function describeSeriesElement(series, seriesElement) {\n            const seriesA11yOptions = series.options.accessibility || {}, a11yOptions = series.chart.options.accessibility, landmarkVerbosity = a11yOptions.landmarkVerbosity;\n            // Handle role attribute\n            if (seriesA11yOptions.exposeAsGroupOnly) {\n                seriesElement.setAttribute('role', 'img');\n            }\n            else if (landmarkVerbosity === 'all') {\n                seriesElement.setAttribute('role', 'region');\n            }\n            else {\n                seriesElement.setAttribute('role', 'group');\n            }\n            seriesElement.setAttribute('tabindex', '-1');\n            if (!series.chart.styledMode) {\n                // Don't show browser outline on click, despite tabindex\n                seriesElement.style.outline = 'none';\n            }\n            seriesElement.setAttribute('aria-label', stripHTMLTags(a11yOptions.series.descriptionFormatter &&\n                a11yOptions.series.descriptionFormatter(series) ||\n                defaultSeriesDescriptionFormatter(series), series.chart.renderer.forExport));\n        }\n        /**\n         * Put accessible info on series and points of a series.\n         * @param {Highcharts.Series} series The series to add info on.\n         */\n        function describeSeries(series) {\n            const chart = series.chart, firstPointEl = getSeriesFirstPointElement(series), seriesEl = getSeriesA11yElement(series), is3d = chart.is3d && chart.is3d();\n            if (seriesEl) {\n                // For some series types the order of elements do not match the\n                // order of points in series. In that case we have to reverse them\n                // in order for AT to read them out in an understandable order.\n                // Due to z-index issues we cannot do this for 3D charts.\n                if (seriesEl.lastChild === firstPointEl && !is3d) {\n                    reverseChildNodes(seriesEl);\n                }\n                describePointsInSeries(series);\n                unhideChartElementFromAT(chart, seriesEl);\n                if (shouldDescribeSeriesElement(series)) {\n                    describeSeriesElement(series, seriesEl);\n                }\n                else {\n                    seriesEl.removeAttribute('aria-label');\n                }\n            }\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        const SeriesDescriber = {\n            defaultPointDescriptionFormatter,\n            defaultSeriesDescriptionFormatter,\n            describeSeries\n        };\n\n        return SeriesDescriber;\n    });\n    _registerModule(_modules, 'Accessibility/Components/SeriesComponent/NewDataAnnouncer.js', [_modules['Core/Globals.js'], _modules['Core/Utilities.js'], _modules['Accessibility/Utils/Announcer.js'], _modules['Accessibility/Utils/ChartUtilities.js'], _modules['Accessibility/Utils/EventProvider.js'], _modules['Accessibility/Components/SeriesComponent/SeriesDescriber.js']], function (H, U, Announcer, ChartUtilities, EventProvider, SeriesDescriber) {\n        /* *\n         *\n         *  (c) 2009-2024 Ã˜ystein Moseng\n         *\n         *  Handle announcing new data for a chart.\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { composed } = H;\n        const { addEvent, defined, pushUnique } = U;\n        const { getChartTitle } = ChartUtilities;\n        const { defaultPointDescriptionFormatter, defaultSeriesDescriptionFormatter } = SeriesDescriber;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /* eslint-disable valid-jsdoc */\n        /**\n         * @private\n         */\n        function chartHasAnnounceEnabled(chart) {\n            return !!chart.options.accessibility.announceNewData.enabled;\n        }\n        /**\n         * @private\n         */\n        function findPointInDataArray(point) {\n            const candidates = point.series.data.filter((candidate) => (point.x === candidate.x && point.y === candidate.y));\n            return candidates.length === 1 ? candidates[0] : point;\n        }\n        /**\n         * Get array of unique series from two arrays\n         * @private\n         */\n        function getUniqueSeries(arrayA, arrayB) {\n            const uniqueSeries = (arrayA || []).concat(arrayB || []).reduce((acc, cur) => {\n                acc[cur.name + cur.index] = cur;\n                return acc;\n            }, {});\n            return Object\n                .keys(uniqueSeries)\n                .map((ix) => uniqueSeries[ix]);\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * @private\n         * @class\n         */\n        class NewDataAnnouncer {\n            /* *\n             *\n             *  Constructor\n             *\n             * */\n            constructor(chart) {\n                this.dirty = {\n                    allSeries: {}\n                };\n                this.lastAnnouncementTime = 0;\n                this.chart = chart;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /* eslint-disable valid-jsdoc */\n            /**\n             * Initialize the new data announcer.\n             * @private\n             */\n            init() {\n                const chart = this.chart;\n                const announceOptions = (chart.options.accessibility.announceNewData);\n                const announceType = announceOptions.interruptUser ?\n                    'assertive' : 'polite';\n                this.lastAnnouncementTime = 0;\n                this.dirty = {\n                    allSeries: {}\n                };\n                this.eventProvider = new EventProvider();\n                this.announcer = new Announcer(chart, announceType);\n                this.addEventListeners();\n            }\n            /**\n             * Remove traces of announcer.\n             * @private\n             */\n            destroy() {\n                this.eventProvider.removeAddedEvents();\n                this.announcer.destroy();\n            }\n            /**\n             * Add event listeners for the announcer\n             * @private\n             */\n            addEventListeners() {\n                const announcer = this, chart = this.chart, e = this.eventProvider;\n                e.addEvent(chart, 'afterApplyDrilldown', function () {\n                    announcer.lastAnnouncementTime = 0;\n                });\n                e.addEvent(chart, 'afterAddSeries', function (e) {\n                    announcer.onSeriesAdded(e.series);\n                });\n                e.addEvent(chart, 'redraw', function () {\n                    announcer.announceDirtyData();\n                });\n            }\n            /**\n             * On new data series added, update dirty list.\n             * @private\n             * @param {Highcharts.Series} series\n             */\n            onSeriesAdded(series) {\n                if (chartHasAnnounceEnabled(this.chart)) {\n                    this.dirty.hasDirty = true;\n                    this.dirty.allSeries[series.name + series.index] = series;\n                    // Add it to newSeries storage unless we already have one\n                    this.dirty.newSeries = defined(this.dirty.newSeries) ?\n                        void 0 : series;\n                }\n            }\n            /**\n             * Gather what we know and announce the data to user.\n             * @private\n             */\n            announceDirtyData() {\n                const chart = this.chart, announcer = this;\n                if (chart.options.accessibility.announceNewData &&\n                    this.dirty.hasDirty) {\n                    let newPoint = this.dirty.newPoint;\n                    // If we have a single new point, see if we can find it in the\n                    // data array. Otherwise we can only pass through options to\n                    // the description builder, and it is a bit sparse in info.\n                    if (newPoint) {\n                        newPoint = findPointInDataArray(newPoint);\n                    }\n                    this.queueAnnouncement(Object\n                        .keys(this.dirty.allSeries)\n                        .map((ix) => announcer.dirty.allSeries[ix]), this.dirty.newSeries, newPoint);\n                    // Reset\n                    this.dirty = {\n                        allSeries: {}\n                    };\n                }\n            }\n            /**\n             * Announce to user that there is new data.\n             * @private\n             * @param {Array<Highcharts.Series>} dirtySeries\n             *          Array of series with new data.\n             * @param {Highcharts.Series} [newSeries]\n             *          If a single new series was added, a reference to this series.\n             * @param {Highcharts.Point} [newPoint]\n             *          If a single point was added, a reference to this point.\n             */\n            queueAnnouncement(dirtySeries, newSeries, newPoint) {\n                const chart = this.chart;\n                const annOptions = chart.options.accessibility.announceNewData;\n                if (annOptions.enabled) {\n                    const now = +new Date();\n                    const dTime = now - this.lastAnnouncementTime;\n                    const time = Math.max(0, annOptions.minAnnounceInterval - dTime);\n                    // Add series from previously queued announcement.\n                    const allSeries = getUniqueSeries(this.queuedAnnouncement && this.queuedAnnouncement.series, dirtySeries);\n                    // Build message and announce\n                    const message = this.buildAnnouncementMessage(allSeries, newSeries, newPoint);\n                    if (message) {\n                        // Is there already one queued?\n                        if (this.queuedAnnouncement) {\n                            clearTimeout(this.queuedAnnouncementTimer);\n                        }\n                        // Build the announcement\n                        this.queuedAnnouncement = {\n                            time: now,\n                            message: message,\n                            series: allSeries\n                        };\n                        // Queue the announcement\n                        this.queuedAnnouncementTimer = setTimeout(() => {\n                            if (this && this.announcer) {\n                                this.lastAnnouncementTime = +new Date();\n                                this.announcer.announce(this.queuedAnnouncement.message);\n                                delete this.queuedAnnouncement;\n                                delete this.queuedAnnouncementTimer;\n                            }\n                        }, time);\n                    }\n                }\n            }\n            /**\n             * Get announcement message for new data.\n             * @private\n             * @param {Array<Highcharts.Series>} dirtySeries\n             *          Array of series with new data.\n             * @param {Highcharts.Series} [newSeries]\n             *          If a single new series was added, a reference to this series.\n             * @param {Highcharts.Point} [newPoint]\n             *          If a single point was added, a reference to this point.\n             *\n             * @return {string|null}\n             * The announcement message to give to user.\n             */\n            buildAnnouncementMessage(dirtySeries, newSeries, newPoint) {\n                const chart = this.chart, annOptions = chart.options.accessibility.announceNewData;\n                // User supplied formatter?\n                if (annOptions.announcementFormatter) {\n                    const formatterRes = annOptions.announcementFormatter(dirtySeries, newSeries, newPoint);\n                    if (formatterRes !== false) {\n                        return formatterRes.length ? formatterRes : null;\n                    }\n                }\n                // Default formatter - use lang options\n                const multiple = H.charts && H.charts.length > 1 ?\n                    'Multiple' : 'Single', langKey = newSeries ? 'newSeriesAnnounce' + multiple :\n                    newPoint ? 'newPointAnnounce' + multiple : 'newDataAnnounce', chartTitle = getChartTitle(chart);\n                return chart.langFormat('accessibility.announceNewData.' + langKey, {\n                    chartTitle: chartTitle,\n                    seriesDesc: newSeries ?\n                        defaultSeriesDescriptionFormatter(newSeries) :\n                        null,\n                    pointDesc: newPoint ?\n                        defaultPointDescriptionFormatter(newPoint) :\n                        null,\n                    point: newPoint,\n                    series: newSeries\n                });\n            }\n        }\n        /* *\n         *\n         *  Class Namespace\n         *\n         * */\n        (function (NewDataAnnouncer) {\n            /* *\n             *\n             *  Declarations\n             *\n             * */\n            /* *\n             *\n             *  Static Functions\n             *\n             * */\n            /**\n             * @private\n             */\n            function compose(SeriesClass) {\n                if (pushUnique(composed, 'A11y.NDA')) {\n                    addEvent(SeriesClass, 'addPoint', seriesOnAddPoint);\n                    addEvent(SeriesClass, 'updatedData', seriesOnUpdatedData);\n                }\n            }\n            NewDataAnnouncer.compose = compose;\n            /**\n             * On new point added, update dirty list.\n             * @private\n             * @param {Highcharts.Point} point\n             */\n            function seriesOnAddPoint(e) {\n                const chart = this.chart, newDataAnnouncer = chart.accessibility?.components\n                    .series.newDataAnnouncer;\n                if (newDataAnnouncer &&\n                    newDataAnnouncer.chart === chart &&\n                    chartHasAnnounceEnabled(chart)) {\n                    // Add it to newPoint storage unless we already have one\n                    newDataAnnouncer.dirty.newPoint = (defined(newDataAnnouncer.dirty.newPoint) ?\n                        void 0 :\n                        e.point);\n                }\n            }\n            /**\n             * On new data in the series, make sure we add it to the dirty list.\n             * @private\n             * @param {Highcharts.Series} series\n             */\n            function seriesOnUpdatedData() {\n                const chart = this.chart, newDataAnnouncer = chart.accessibility?.components\n                    .series.newDataAnnouncer;\n                if (newDataAnnouncer &&\n                    newDataAnnouncer.chart === chart &&\n                    chartHasAnnounceEnabled(chart)) {\n                    newDataAnnouncer.dirty.hasDirty = true;\n                    newDataAnnouncer.dirty.allSeries[this.name + this.index] = this;\n                }\n            }\n        })(NewDataAnnouncer || (NewDataAnnouncer = {}));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return NewDataAnnouncer;\n    });\n    _registerModule(_modules, 'Accessibility/ProxyElement.js', [_modules['Core/Globals.js'], _modules['Core/Utilities.js'], _modules['Accessibility/Utils/EventProvider.js'], _modules['Accessibility/Utils/ChartUtilities.js'], _modules['Accessibility/Utils/HTMLUtilities.js']], function (H, U, EventProvider, ChartUtilities, HTMLUtilities) {\n        /* *\n         *\n         *  (c) 2009-2024 Ã˜ystein Moseng\n         *\n         *  Proxy elements are used to shadow SVG elements in HTML for assistive\n         *  technology, such as screen readers or voice input software.\n         *\n         *  The ProxyElement class represents such an element, and deals with\n         *  overlay positioning and mirroring events for the target.\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { doc } = H;\n        const { attr, css, merge } = U;\n        const { fireEventOnWrappedOrUnwrappedElement } = ChartUtilities;\n        const { cloneMouseEvent, cloneTouchEvent, getFakeMouseEvent, removeElement } = HTMLUtilities;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * Represents a proxy element that overlays a target and relays events\n         * to its target.\n         *\n         * @private\n         * @class\n         */\n        class ProxyElement {\n            /* *\n             *\n             *  Constructor\n             *\n             * */\n            constructor(chart, target, proxyElementType = 'button', wrapperElementType, attributes) {\n                this.chart = chart;\n                this.target = target;\n                this.eventProvider = new EventProvider();\n                const innerEl = this.innerElement =\n                    doc.createElement(proxyElementType), wrapperEl = this.element = wrapperElementType ?\n                    doc.createElement(wrapperElementType) : innerEl;\n                if (!chart.styledMode) {\n                    this.hideElementVisually(innerEl);\n                }\n                if (wrapperElementType) {\n                    if (wrapperElementType === 'li' && !chart.styledMode) {\n                        wrapperEl.style.listStyle = 'none';\n                    }\n                    wrapperEl.appendChild(innerEl);\n                    this.element = wrapperEl;\n                }\n                this.updateTarget(target, attributes);\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Fake a click event on the target.\n             */\n            click() {\n                const pos = this.getTargetPosition();\n                pos.x += pos.width / 2;\n                pos.y += pos.height / 2;\n                const fakeEventObject = getFakeMouseEvent('click', pos);\n                fireEventOnWrappedOrUnwrappedElement(this.target.click, fakeEventObject);\n            }\n            /**\n             * Update the target to be proxied. The position and events are updated to\n             * match the new target.\n             * @param target The new target definition\n             * @param attributes New HTML attributes to apply to the proxy. Set an\n             * attribute to null to remove.\n             */\n            updateTarget(target, attributes) {\n                this.target = target;\n                this.updateCSSClassName();\n                const attrs = attributes || {};\n                Object.keys(attrs).forEach((a) => {\n                    if (attrs[a] === null) {\n                        delete attrs[a];\n                    }\n                });\n                const targetAriaLabel = this.getTargetAttr(target.click, 'aria-label');\n                attr(this.innerElement, merge(targetAriaLabel ? {\n                    'aria-label': targetAriaLabel\n                } : {}, attrs));\n                this.eventProvider.removeAddedEvents();\n                this.addProxyEventsToElement(this.innerElement, target.click);\n                this.refreshPosition();\n            }\n            /**\n             * Refresh the position of the proxy element to match the current target\n             */\n            refreshPosition() {\n                const bBox = this.getTargetPosition();\n                css(this.innerElement, {\n                    width: (bBox.width || 1) + 'px',\n                    height: (bBox.height || 1) + 'px',\n                    left: (Math.round(bBox.x) || 0) + 'px',\n                    top: (Math.round(bBox.y) || 0) + 'px'\n                });\n            }\n            /**\n             * Remove button from DOM, and clear events.\n             */\n            remove() {\n                this.eventProvider.removeAddedEvents();\n                removeElement(this.element);\n            }\n            // -------------------------- private ------------------------------------\n            /**\n             * Update the CSS class name to match target\n             */\n            updateCSSClassName() {\n                const stringHasNoTooltip = (s) => (s.indexOf('highcharts-no-tooltip') > -1);\n                const legend = this.chart.legend;\n                const groupDiv = legend.group && legend.group.div;\n                const noTooltipOnGroup = stringHasNoTooltip(groupDiv && groupDiv.className || '');\n                const targetClassName = this.getTargetAttr(this.target.click, 'class') || '';\n                const noTooltipOnTarget = stringHasNoTooltip(targetClassName);\n                this.innerElement.className = noTooltipOnGroup || noTooltipOnTarget ?\n                    'highcharts-a11y-proxy-element highcharts-no-tooltip' :\n                    'highcharts-a11y-proxy-element';\n            }\n            /**\n             * Mirror events for a proxy element to a target\n             */\n            addProxyEventsToElement(element, target) {\n                [\n                    'click', 'touchstart', 'touchend', 'touchcancel', 'touchmove',\n                    'mouseover', 'mouseenter', 'mouseleave', 'mouseout'\n                ].forEach((evtType) => {\n                    const isTouchEvent = evtType.indexOf('touch') === 0;\n                    this.eventProvider.addEvent(element, evtType, (e) => {\n                        const clonedEvent = isTouchEvent ?\n                            cloneTouchEvent(e) :\n                            cloneMouseEvent(e);\n                        if (target) {\n                            fireEventOnWrappedOrUnwrappedElement(target, clonedEvent);\n                        }\n                        e.stopPropagation();\n                        // #9682, #15318: Touch scrolling didn't work when touching\n                        // proxy\n                        if (!isTouchEvent) {\n                            e.preventDefault();\n                        }\n                    }, { passive: false });\n                });\n            }\n            /**\n             * Set visually hidden style on a proxy element\n             */\n            hideElementVisually(el) {\n                css(el, {\n                    borderWidth: 0,\n                    backgroundColor: 'transparent',\n                    cursor: 'pointer',\n                    outline: 'none',\n                    opacity: 0.001,\n                    filter: 'alpha(opacity=1)',\n                    zIndex: 999,\n                    overflow: 'hidden',\n                    padding: 0,\n                    margin: 0,\n                    display: 'block',\n                    position: 'absolute',\n                    '-ms-filter': 'progid:DXImageTransform.Microsoft.Alpha(Opacity=1)'\n                });\n            }\n            /**\n             * Get the position relative to chart container for the target\n             */\n            getTargetPosition() {\n                const clickTarget = this.target.click;\n                // We accept both DOM elements and wrapped elements as click targets.\n                const clickTargetElement = clickTarget.element ?\n                    clickTarget.element :\n                    clickTarget;\n                const posElement = this.target.visual || clickTargetElement;\n                const chartDiv = this.chart.renderTo, pointer = this.chart.pointer;\n                if (chartDiv && posElement?.getBoundingClientRect && pointer) {\n                    const rectEl = posElement.getBoundingClientRect(), chartPos = pointer.getChartPosition();\n                    return {\n                        x: (rectEl.left - chartPos.left) / chartPos.scaleX,\n                        y: (rectEl.top - chartPos.top) / chartPos.scaleY,\n                        width: rectEl.right / chartPos.scaleX -\n                            rectEl.left / chartPos.scaleX,\n                        height: rectEl.bottom / chartPos.scaleY -\n                            rectEl.top / chartPos.scaleY\n                    };\n                }\n                return { x: 0, y: 0, width: 1, height: 1 };\n            }\n            /**\n             * Get an attribute value of a target\n             */\n            getTargetAttr(target, key) {\n                if (target.element) {\n                    return target.element.getAttribute(key);\n                }\n                return target.getAttribute(key);\n            }\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return ProxyElement;\n    });\n    _registerModule(_modules, 'Accessibility/ProxyProvider.js', [_modules['Core/Globals.js'], _modules['Core/Utilities.js'], _modules['Accessibility/Utils/ChartUtilities.js'], _modules['Accessibility/Utils/DOMElementProvider.js'], _modules['Accessibility/Utils/HTMLUtilities.js'], _modules['Accessibility/ProxyElement.js']], function (H, U, CU, DOMElementProvider, HU, ProxyElement) {\n        /* *\n         *\n         *  (c) 2009-2024 Ã˜ystein Moseng\n         *\n         *  Proxy elements are used to shadow SVG elements in HTML for assistive\n         *  technology, such as screen readers or voice input software.\n         *\n         *  The ProxyProvider keeps track of all proxy elements of the a11y module,\n         *  and updating their order and positioning.\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { doc } = H;\n        const { attr, css } = U;\n        const { unhideChartElementFromAT } = CU;\n        const { removeChildNodes } = HU;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * Keeps track of all proxy elements and proxy groups.\n         *\n         * @private\n         * @class\n         */\n        class ProxyProvider {\n            /* *\n             *\n             *  Constructor\n             *\n             * */\n            constructor(chart) {\n                this.chart = chart;\n                this.domElementProvider = new DOMElementProvider();\n                this.groups = {};\n                this.groupOrder = [];\n                this.beforeChartProxyPosContainer = this.createProxyPosContainer('before');\n                this.afterChartProxyPosContainer = this.createProxyPosContainer('after');\n                this.update();\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /* eslint-disable */\n            /**\n             * Add a new proxy element to a group, proxying a target control.\n             */\n            addProxyElement(groupKey, target, proxyElementType = 'button', attributes) {\n                const group = this.groups[groupKey];\n                if (!group) {\n                    throw new Error('ProxyProvider.addProxyElement: Invalid group key ' + groupKey);\n                }\n                const wrapperElementType = group.type === 'ul' || group.type === 'ol' ?\n                    'li' : void 0, proxy = new ProxyElement(this.chart, target, proxyElementType, wrapperElementType, attributes);\n                group.proxyContainerElement.appendChild(proxy.element);\n                group.proxyElements.push(proxy);\n                return proxy;\n            }\n            /**\n             * Create a group that will contain proxy elements. The group order is\n             * automatically updated according to the last group order keys.\n             *\n             * Returns the added group.\n             */\n            addGroup(groupKey, groupElementType = 'div', attributes) {\n                const existingGroup = this.groups[groupKey];\n                if (existingGroup) {\n                    return existingGroup.groupElement;\n                }\n                const proxyContainer = this.domElementProvider\n                    .createElement(groupElementType);\n                // If we want to add a role to the group, and still use e.g.\n                // a list group, we need a wrapper div around the proxyContainer.\n                // Used for setting region role on legend.\n                let groupElement;\n                if (attributes && attributes.role && groupElementType !== 'div') {\n                    groupElement = this.domElementProvider.createElement('div');\n                    groupElement.appendChild(proxyContainer);\n                }\n                else {\n                    groupElement = proxyContainer;\n                }\n                groupElement.className = 'highcharts-a11y-proxy-group highcharts-a11y-proxy-group-' +\n                    groupKey.replace(/\\W/g, '-');\n                this.groups[groupKey] = {\n                    proxyContainerElement: proxyContainer,\n                    groupElement,\n                    type: groupElementType,\n                    proxyElements: []\n                };\n                attr(groupElement, attributes || {});\n                if (groupElementType === 'ul') {\n                    proxyContainer.setAttribute('role', 'list'); // Needed for webkit\n                }\n                // Add the group to the end by default, and perhaps then we\n                // won't have to reorder the whole set of groups.\n                this.afterChartProxyPosContainer.appendChild(groupElement);\n                this.updateGroupOrder(this.groupOrder);\n                return groupElement;\n            }\n            /**\n             * Update HTML attributes of a group.\n             */\n            updateGroupAttrs(groupKey, attributes) {\n                const group = this.groups[groupKey];\n                if (!group) {\n                    throw new Error('ProxyProvider.updateGroupAttrs: Invalid group key ' + groupKey);\n                }\n                attr(group.groupElement, attributes);\n            }\n            /**\n             * Reorder the proxy groups.\n             *\n             * The group key \"series\" refers to the chart's data points / <svg> element.\n             * This is so that the keyboardNavigation.order option can be used to\n             * determine the proxy group order.\n             */\n            updateGroupOrder(groupKeys) {\n                // Store so that we can update order when a new group is created\n                this.groupOrder = groupKeys.slice();\n                // Don't unnecessarily reorder, because keyboard focus is lost\n                if (this.isDOMOrderGroupOrder()) {\n                    return;\n                }\n                const seriesIx = groupKeys.indexOf('series');\n                const beforeKeys = seriesIx > -1 ? groupKeys.slice(0, seriesIx) : groupKeys;\n                const afterKeys = seriesIx > -1 ? groupKeys.slice(seriesIx + 1) : [];\n                // Store focused element since it will be lost when reordering\n                const activeElement = doc.activeElement;\n                // Add groups to correct container\n                ['before', 'after'].forEach((pos) => {\n                    const posContainer = this[pos === 'before' ?\n                        'beforeChartProxyPosContainer' :\n                        'afterChartProxyPosContainer'];\n                    const keys = pos === 'before' ? beforeKeys : afterKeys;\n                    removeChildNodes(posContainer);\n                    keys.forEach((groupKey) => {\n                        const group = this.groups[groupKey];\n                        if (group) {\n                            posContainer.appendChild(group.groupElement);\n                        }\n                    });\n                });\n                // Attempt to restore focus after reordering, but note that this may\n                // cause screen readers re-announcing the button.\n                if ((this.beforeChartProxyPosContainer.contains(activeElement) ||\n                    this.afterChartProxyPosContainer.contains(activeElement)) &&\n                    activeElement && activeElement.focus) {\n                    activeElement.focus();\n                }\n            }\n            /**\n             * Remove all proxy elements in a group\n             */\n            clearGroup(groupKey) {\n                const group = this.groups[groupKey];\n                if (!group) {\n                    throw new Error('ProxyProvider.clearGroup: Invalid group key ' + groupKey);\n                }\n                removeChildNodes(group.proxyContainerElement);\n            }\n            /**\n             * Remove a group from the DOM and from the proxy provider's group list.\n             * All child elements are removed.\n             * If the group does not exist, nothing happens.\n             */\n            removeGroup(groupKey) {\n                const group = this.groups[groupKey];\n                if (group) {\n                    // Remove detached HTML elements to prevent memory leak (#20329).\n                    this.domElementProvider.removeElement(group.groupElement);\n                    // Sometimes groupElement is a wrapper around the proxyContainer, so\n                    // the real one proxyContainer needs to be removed also.\n                    if (group.groupElement !== group.proxyContainerElement) {\n                        this.domElementProvider.removeElement(group.proxyContainerElement);\n                    }\n                    delete this.groups[groupKey];\n                }\n            }\n            /**\n             * Update the position and order of all proxy groups and elements\n             */\n            update() {\n                this.updatePosContainerPositions();\n                this.updateGroupOrder(this.groupOrder);\n                this.updateProxyElementPositions();\n            }\n            /**\n             * Update all proxy element positions\n             */\n            updateProxyElementPositions() {\n                Object.keys(this.groups).forEach(this.updateGroupProxyElementPositions.bind(this));\n            }\n            /**\n             * Update a group's proxy elements' positions.\n             * If the group does not exist, nothing happens.\n             */\n            updateGroupProxyElementPositions(groupKey) {\n                const group = this.groups[groupKey];\n                if (group) {\n                    group.proxyElements.forEach((el) => el.refreshPosition());\n                }\n            }\n            /**\n             * Remove all added elements\n             */\n            destroy() {\n                this.domElementProvider.destroyCreatedElements();\n            }\n            // -------------------------- private ------------------------------------\n            /**\n             * Create and return a pos container element (the overall containers for\n             * the proxy groups).\n             */\n            createProxyPosContainer(classNamePostfix) {\n                const el = this.domElementProvider.createElement('div');\n                el.setAttribute('aria-hidden', 'false');\n                el.className = 'highcharts-a11y-proxy-container' + (classNamePostfix ? '-' + classNamePostfix : '');\n                css(el, {\n                    top: '0',\n                    left: '0'\n                });\n                if (!this.chart.styledMode) {\n                    el.style.whiteSpace = 'nowrap';\n                    el.style.position = 'absolute';\n                }\n                return el;\n            }\n            /**\n             * Get an array of group keys that corresponds to the current group order\n             * in the DOM.\n             */\n            getCurrentGroupOrderInDOM() {\n                const getGroupKeyFromElement = (el) => {\n                    const allGroups = Object.keys(this.groups);\n                    let i = allGroups.length;\n                    while (i--) {\n                        const groupKey = allGroups[i];\n                        const group = this.groups[groupKey];\n                        if (group && el === group.groupElement) {\n                            return groupKey;\n                        }\n                    }\n                };\n                const getChildrenGroupOrder = (el) => {\n                    const childrenOrder = [];\n                    const children = el.children;\n                    for (let i = 0; i < children.length; ++i) {\n                        const groupKey = getGroupKeyFromElement(children[i]);\n                        if (groupKey) {\n                            childrenOrder.push(groupKey);\n                        }\n                    }\n                    return childrenOrder;\n                };\n                const before = getChildrenGroupOrder(this.beforeChartProxyPosContainer);\n                const after = getChildrenGroupOrder(this.afterChartProxyPosContainer);\n                before.push('series');\n                return before.concat(after);\n            }\n            /**\n             * Check if the current DOM order matches the current group order, so that\n             * a reordering/update is unnecessary.\n             */\n            isDOMOrderGroupOrder() {\n                const domOrder = this.getCurrentGroupOrderInDOM();\n                const groupOrderWithGroups = this.groupOrder.filter((x) => x === 'series' || !!this.groups[x]);\n                let i = domOrder.length;\n                if (i !== groupOrderWithGroups.length) {\n                    return false;\n                }\n                while (i--) {\n                    if (domOrder[i] !== groupOrderWithGroups[i]) {\n                        return false;\n                    }\n                }\n                return true;\n            }\n            /**\n             * Update the DOM positions of the before/after proxy\n             * positioning containers for the groups.\n             */\n            updatePosContainerPositions() {\n                const chart = this.chart;\n                // If exporting, don't add these containers to the DOM.\n                if (chart.renderer.forExport) {\n                    return;\n                }\n                const rendererSVGEl = chart.renderer.box;\n                chart.container.insertBefore(this.afterChartProxyPosContainer, rendererSVGEl.nextSibling);\n                chart.container.insertBefore(this.beforeChartProxyPosContainer, rendererSVGEl);\n                unhideChartElementFromAT(this.chart, this.afterChartProxyPosContainer);\n                unhideChartElementFromAT(this.chart, this.beforeChartProxyPosContainer);\n            }\n        }\n        /* *\n         *\n         *  Export Default\n         *\n         * */\n\n        return ProxyProvider;\n    });\n    _registerModule(_modules, 'Accessibility/Components/RangeSelectorComponent.js', [_modules['Accessibility/AccessibilityComponent.js'], _modules['Accessibility/Utils/Announcer.js'], _modules['Accessibility/Utils/ChartUtilities.js'], _modules['Accessibility/KeyboardNavigationHandler.js'], _modules['Core/Utilities.js']], function (AccessibilityComponent, Announcer, ChartUtilities, KeyboardNavigationHandler, U) {\n        /* *\n         *\n         *  (c) 2009-2024 Ã˜ystein Moseng\n         *\n         *  Accessibility component for the range selector.\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { unhideChartElementFromAT, getAxisRangeDescription } = ChartUtilities;\n        const { addEvent, attr } = U;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * Do we want date input navigation\n         * @private\n         */\n        function shouldRunInputNavigation(chart) {\n            return Boolean(chart.rangeSelector &&\n                chart.rangeSelector.inputGroup &&\n                chart.rangeSelector.inputGroup.element.style.visibility !== 'hidden' &&\n                chart.options.rangeSelector.inputEnabled !== false &&\n                chart.rangeSelector.minInput &&\n                chart.rangeSelector.maxInput);\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The RangeSelectorComponent class\n         *\n         * @private\n         * @class\n         * @name Highcharts.RangeSelectorComponent\n         */\n        class RangeSelectorComponent extends AccessibilityComponent {\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /* eslint-disable valid-jsdoc */\n            /**\n             * Init the component\n             * @private\n             */\n            init() {\n                const chart = this.chart;\n                this.announcer = new Announcer(chart, 'polite');\n            }\n            /**\n             * Called on first render/updates to the chart, including options changes.\n             */\n            onChartUpdate() {\n                const chart = this.chart, component = this, rangeSelector = chart.rangeSelector;\n                if (!rangeSelector) {\n                    return;\n                }\n                this.updateSelectorVisibility();\n                this.setDropdownAttrs();\n                if (rangeSelector.buttons &&\n                    rangeSelector.buttons.length) {\n                    rangeSelector.buttons.forEach((button) => {\n                        component.setRangeButtonAttrs(button);\n                    });\n                }\n                // Make sure input boxes are accessible and focusable\n                if (rangeSelector.maxInput && rangeSelector.minInput) {\n                    ['minInput', 'maxInput'].forEach(function (key, i) {\n                        const input = rangeSelector[key];\n                        if (input) {\n                            unhideChartElementFromAT(chart, input);\n                            component.setRangeInputAttrs(input, 'accessibility.rangeSelector.' + (i ? 'max' : 'min') +\n                                'InputLabel');\n                        }\n                    });\n                }\n            }\n            /**\n             * Hide buttons from AT when showing dropdown, and vice versa.\n             * @private\n             */\n            updateSelectorVisibility() {\n                const chart = this.chart;\n                const rangeSelector = chart.rangeSelector;\n                const dropdown = (rangeSelector &&\n                    rangeSelector.dropdown);\n                const buttons = (rangeSelector &&\n                    rangeSelector.buttons ||\n                    []);\n                const hideFromAT = (el) => el.setAttribute('aria-hidden', true);\n                if (rangeSelector &&\n                    rangeSelector.hasVisibleDropdown &&\n                    dropdown) {\n                    unhideChartElementFromAT(chart, dropdown);\n                    buttons.forEach((btn) => hideFromAT(btn.element));\n                }\n                else {\n                    if (dropdown) {\n                        hideFromAT(dropdown);\n                    }\n                    buttons.forEach((btn) => unhideChartElementFromAT(chart, btn.element));\n                }\n            }\n            /**\n             * Set accessibility related attributes on dropdown element.\n             * @private\n             */\n            setDropdownAttrs() {\n                const chart = this.chart;\n                const dropdown = (chart.rangeSelector &&\n                    chart.rangeSelector.dropdown);\n                if (dropdown) {\n                    const label = chart.langFormat('accessibility.rangeSelector.dropdownLabel', { rangeTitle: chart.options.lang.rangeSelectorZoom });\n                    dropdown.setAttribute('aria-label', label);\n                    dropdown.setAttribute('tabindex', -1);\n                }\n            }\n            /**\n             * Set attrs for a range button\n             * @private\n             */\n            setRangeButtonAttrs(button) {\n                attr(button.element, {\n                    tabindex: -1,\n                    role: 'button'\n                });\n            }\n            /**\n             * Set attrs for a date input\n             * @private\n             */\n            setRangeInputAttrs(input, langKey) {\n                const chart = this.chart;\n                attr(input, {\n                    tabindex: -1,\n                    'aria-label': chart.langFormat(langKey, { chart: chart })\n                });\n            }\n            /**\n             * Handle arrow key nav\n             * @private\n             */\n            onButtonNavKbdArrowKey(keyboardNavigationHandler, keyCode) {\n                const response = keyboardNavigationHandler.response, keys = this.keyCodes, chart = this.chart, wrapAround = chart.options.accessibility\n                    .keyboardNavigation.wrapAround, direction = (keyCode === keys.left || keyCode === keys.up) ? -1 : 1, didHighlight = chart.highlightRangeSelectorButton(chart.highlightedRangeSelectorItemIx + direction);\n                if (!didHighlight) {\n                    if (wrapAround) {\n                        keyboardNavigationHandler.init(direction);\n                        return response.success;\n                    }\n                    return response[direction > 0 ? 'next' : 'prev'];\n                }\n                return response.success;\n            }\n            /**\n             * Handle keyboard click\n             * @private\n             */\n            onButtonNavKbdClick(keyboardNavigationHandler) {\n                const response = keyboardNavigationHandler.response, chart = this.chart, wasDisabled = chart.oldRangeSelectorItemState === 3;\n                if (!wasDisabled) {\n                    this.fakeClickEvent(chart.rangeSelector.buttons[chart.highlightedRangeSelectorItemIx].element);\n                }\n                return response.success;\n            }\n            /**\n             * Called whenever a range selector button has been clicked, either by\n             * mouse, touch, or kbd/voice/other.\n             * @private\n             */\n            onAfterBtnClick() {\n                const chart = this.chart;\n                const axisRangeDescription = getAxisRangeDescription(chart.xAxis[0]);\n                const announcement = chart.langFormat('accessibility.rangeSelector.clickButtonAnnouncement', { chart, axisRangeDescription });\n                if (announcement) {\n                    this.announcer.announce(announcement);\n                }\n            }\n            /**\n             * Handle move between input elements with Tab key\n             * @private\n             */\n            onInputKbdMove(direction) {\n                const chart = this.chart;\n                const rangeSel = chart.rangeSelector;\n                const newIx = chart.highlightedInputRangeIx = (chart.highlightedInputRangeIx || 0) + direction;\n                const newIxOutOfRange = newIx > 1 || newIx < 0;\n                if (newIxOutOfRange) {\n                    if (chart.accessibility) {\n                        // Ignore focus\n                        chart.accessibility.keyboardNavigation.exiting = true;\n                        chart.accessibility.keyboardNavigation.tabindexContainer\n                            .focus();\n                        return chart.accessibility.keyboardNavigation.move(direction);\n                    }\n                }\n                else if (rangeSel) {\n                    const svgEl = rangeSel[newIx ? 'maxDateBox' : 'minDateBox'];\n                    const inputEl = rangeSel[newIx ? 'maxInput' : 'minInput'];\n                    if (svgEl && inputEl) {\n                        chart.setFocusToElement(svgEl, inputEl);\n                    }\n                }\n                return true;\n            }\n            /**\n             * Init date input navigation\n             * @private\n             */\n            onInputNavInit(direction) {\n                const component = this;\n                const chart = this.chart;\n                const buttonIxToHighlight = direction > 0 ? 0 : 1;\n                const rangeSel = chart.rangeSelector;\n                const svgEl = (rangeSel &&\n                    rangeSel[buttonIxToHighlight ? 'maxDateBox' : 'minDateBox']);\n                const minInput = (rangeSel && rangeSel.minInput);\n                const maxInput = (rangeSel && rangeSel.maxInput);\n                const inputEl = buttonIxToHighlight ? maxInput : minInput;\n                chart.highlightedInputRangeIx = buttonIxToHighlight;\n                if (svgEl && minInput && maxInput) {\n                    chart.setFocusToElement(svgEl, inputEl);\n                    // Tab-press with the input focused does not propagate to chart\n                    // automatically, so we manually catch and handle it when relevant.\n                    if (this.removeInputKeydownHandler) {\n                        this.removeInputKeydownHandler();\n                    }\n                    const keydownHandler = (e) => {\n                        const isTab = (e.which || e.keyCode) === this.keyCodes.tab;\n                        if (isTab &&\n                            component.onInputKbdMove(e.shiftKey ? -1 : 1)) {\n                            e.preventDefault();\n                            e.stopPropagation();\n                        }\n                    };\n                    const minRemover = addEvent(minInput, 'keydown', keydownHandler);\n                    const maxRemover = addEvent(maxInput, 'keydown', keydownHandler);\n                    this.removeInputKeydownHandler = () => {\n                        minRemover();\n                        maxRemover();\n                    };\n                }\n            }\n            /**\n             * Terminate date input nav\n             * @private\n             */\n            onInputNavTerminate() {\n                const rangeSel = (this.chart.rangeSelector || {});\n                if (rangeSel.maxInput) {\n                    rangeSel.hideInput('max');\n                }\n                if (rangeSel.minInput) {\n                    rangeSel.hideInput('min');\n                }\n                if (this.removeInputKeydownHandler) {\n                    this.removeInputKeydownHandler();\n                    delete this.removeInputKeydownHandler;\n                }\n            }\n            /**\n             * Init range selector dropdown nav\n             * @private\n             */\n            initDropdownNav() {\n                const chart = this.chart;\n                const rangeSelector = chart.rangeSelector;\n                const dropdown = (rangeSelector && rangeSelector.dropdown);\n                if (rangeSelector && dropdown) {\n                    chart.setFocusToElement(rangeSelector.buttonGroup, dropdown);\n                    if (this.removeDropdownKeydownHandler) {\n                        this.removeDropdownKeydownHandler();\n                    }\n                    // Tab-press with dropdown focused does not propagate to chart\n                    // automatically, so we manually catch and handle it when relevant.\n                    this.removeDropdownKeydownHandler = addEvent(dropdown, 'keydown', (e) => {\n                        const isTab = (e.which || e.keyCode) === this.keyCodes.tab, a11y = chart.accessibility;\n                        if (isTab) {\n                            e.preventDefault();\n                            e.stopPropagation();\n                            if (a11y) {\n                                a11y.keyboardNavigation.tabindexContainer.focus();\n                                a11y.keyboardNavigation.move(e.shiftKey ? -1 : 1);\n                            }\n                        }\n                    });\n                }\n            }\n            /**\n             * Get navigation for the range selector buttons.\n             * @private\n             * @return {Highcharts.KeyboardNavigationHandler} The module object.\n             */\n            getRangeSelectorButtonNavigation() {\n                const chart = this.chart;\n                const keys = this.keyCodes;\n                const component = this;\n                return new KeyboardNavigationHandler(chart, {\n                    keyCodeMap: [\n                        [\n                            [keys.left, keys.right, keys.up, keys.down],\n                            function (keyCode) {\n                                return component.onButtonNavKbdArrowKey(this, keyCode);\n                            }\n                        ],\n                        [\n                            [keys.enter, keys.space],\n                            function () {\n                                return component.onButtonNavKbdClick(this);\n                            }\n                        ]\n                    ],\n                    validate: function () {\n                        return !!(chart.rangeSelector &&\n                            chart.rangeSelector.buttons &&\n                            chart.rangeSelector.buttons.length);\n                    },\n                    init: function (direction) {\n                        const rangeSelector = chart.rangeSelector;\n                        if (rangeSelector && rangeSelector.hasVisibleDropdown) {\n                            component.initDropdownNav();\n                        }\n                        else if (rangeSelector) {\n                            const lastButtonIx = rangeSelector.buttons.length - 1;\n                            chart.highlightRangeSelectorButton(direction > 0 ? 0 : lastButtonIx);\n                        }\n                    },\n                    terminate: function () {\n                        if (component.removeDropdownKeydownHandler) {\n                            component.removeDropdownKeydownHandler();\n                            delete component.removeDropdownKeydownHandler;\n                        }\n                    }\n                });\n            }\n            /**\n             * Get navigation for the range selector input boxes.\n             * @private\n             * @return {Highcharts.KeyboardNavigationHandler}\n             *         The module object.\n             */\n            getRangeSelectorInputNavigation() {\n                const chart = this.chart;\n                const component = this;\n                return new KeyboardNavigationHandler(chart, {\n                    keyCodeMap: [],\n                    validate: function () {\n                        return shouldRunInputNavigation(chart);\n                    },\n                    init: function (direction) {\n                        component.onInputNavInit(direction);\n                    },\n                    terminate: function () {\n                        component.onInputNavTerminate();\n                    }\n                });\n            }\n            /**\n             * Get keyboard navigation handlers for this component.\n             * @return {Array<Highcharts.KeyboardNavigationHandler>}\n             *         List of module objects.\n             */\n            getKeyboardNavigation() {\n                return [\n                    this.getRangeSelectorButtonNavigation(),\n                    this.getRangeSelectorInputNavigation()\n                ];\n            }\n            /**\n             * Remove component traces\n             */\n            destroy() {\n                if (this.removeDropdownKeydownHandler) {\n                    this.removeDropdownKeydownHandler();\n                }\n                if (this.removeInputKeydownHandler) {\n                    this.removeInputKeydownHandler();\n                }\n                if (this.announcer) {\n                    this.announcer.destroy();\n                }\n            }\n        }\n        /* *\n         *\n         *  Class Namespace\n         *\n         * */\n        (function (RangeSelectorComponent) {\n            /* *\n             *\n             *  Declarations\n             *\n             * */\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Highlight range selector button by index.\n             *\n             * @private\n             * @function Highcharts.Chart#highlightRangeSelectorButton\n             */\n            function chartHighlightRangeSelectorButton(ix) {\n                const buttons = (this.rangeSelector &&\n                    this.rangeSelector.buttons ||\n                    []);\n                const curHighlightedIx = this.highlightedRangeSelectorItemIx;\n                const curSelectedIx = (this.rangeSelector &&\n                    this.rangeSelector.selected);\n                // Deselect old\n                if (typeof curHighlightedIx !== 'undefined' &&\n                    buttons[curHighlightedIx] &&\n                    curHighlightedIx !== curSelectedIx) {\n                    buttons[curHighlightedIx].setState(this.oldRangeSelectorItemState || 0);\n                }\n                // Select new\n                this.highlightedRangeSelectorItemIx = ix;\n                if (buttons[ix]) {\n                    this.setFocusToElement(buttons[ix].box, buttons[ix].element);\n                    if (ix !== curSelectedIx) {\n                        this.oldRangeSelectorItemState = buttons[ix].state;\n                        buttons[ix].setState(1);\n                    }\n                    return true;\n                }\n                return false;\n            }\n            /**\n             * Build compositions\n             * @private\n             */\n            function compose(ChartClass, RangeSelectorClass) {\n                const chartProto = ChartClass.prototype;\n                if (!chartProto.highlightRangeSelectorButton) {\n                    chartProto.highlightRangeSelectorButton = (chartHighlightRangeSelectorButton);\n                    addEvent(RangeSelectorClass, 'afterBtnClick', rangeSelectorAfterBtnClick);\n                }\n            }\n            RangeSelectorComponent.compose = compose;\n            /**\n             * Range selector does not have destroy-setup for class instance events - so\n             * we set it on the class and call the component from here.\n             * @private\n             */\n            function rangeSelectorAfterBtnClick() {\n                const a11y = this.chart.accessibility;\n                if (a11y && a11y.components.rangeSelector) {\n                    return a11y.components.rangeSelector.onAfterBtnClick();\n                }\n            }\n        })(RangeSelectorComponent || (RangeSelectorComponent = {}));\n        /* *\n         *\n         *  Export Default\n         *\n         * */\n\n        return RangeSelectorComponent;\n    });\n    _registerModule(_modules, 'Accessibility/Components/SeriesComponent/ForcedMarkers.js', [_modules['Core/Globals.js'], _modules['Core/Utilities.js']], function (H, U) {\n        /* *\n         *\n         *  (c) 2009-2024 Ã˜ystein Moseng\n         *\n         *  Handle forcing series markers.\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { composed } = H;\n        const { addEvent, merge, pushUnique } = U;\n        /* *\n         *\n         *  Composition\n         *\n         * */\n        var ForcedMarkersComposition;\n        (function (ForcedMarkersComposition) {\n            /* *\n             *\n             *  Declarations\n             *\n             * */\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * @private\n             */\n            function compose(SeriesClass) {\n                if (pushUnique(composed, 'A11y.FM')) {\n                    addEvent(SeriesClass, 'afterSetOptions', seriesOnAfterSetOptions);\n                    addEvent(SeriesClass, 'render', seriesOnRender);\n                    addEvent(SeriesClass, 'afterRender', seriesOnAfterRender);\n                    addEvent(SeriesClass, 'renderCanvas', seriesOnRenderCanvas);\n                }\n            }\n            ForcedMarkersComposition.compose = compose;\n            /**\n             * @private\n             */\n            function forceZeroOpacityMarkerOptions(options) {\n                merge(true, options, {\n                    marker: {\n                        enabled: true,\n                        states: {\n                            normal: {\n                                opacity: 0\n                            }\n                        }\n                    }\n                });\n            }\n            /**\n             * @private\n             */\n            function getPointMarkerOpacity(pointOptions) {\n                return pointOptions.marker.states &&\n                    pointOptions.marker.states.normal &&\n                    pointOptions.marker.states.normal.opacity;\n            }\n            /**\n             * @private\n             */\n            function handleForcePointMarkers(series) {\n                let i = series.points.length;\n                while (i--) {\n                    const point = series.points[i];\n                    const pointOptions = point.options;\n                    const hadForcedMarker = point.hasForcedA11yMarker;\n                    delete point.hasForcedA11yMarker;\n                    if (pointOptions.marker) {\n                        const isStillForcedMarker = hadForcedMarker &&\n                            getPointMarkerOpacity(pointOptions) === 0;\n                        if (pointOptions.marker.enabled && !isStillForcedMarker) {\n                            unforcePointMarkerOptions(pointOptions);\n                            point.hasForcedA11yMarker = false;\n                        }\n                        else if (pointOptions.marker.enabled === false) {\n                            forceZeroOpacityMarkerOptions(pointOptions);\n                            point.hasForcedA11yMarker = true;\n                        }\n                    }\n                }\n            }\n            /**\n             * @private\n             */\n            function hasIndividualPointMarkerOptions(series) {\n                return !!(series._hasPointMarkers &&\n                    series.points &&\n                    series.points.length);\n            }\n            /**\n             * @private\n             */\n            function isWithinDescriptionThreshold(series) {\n                const a11yOptions = series.chart.options.accessibility;\n                return series.points.length <\n                    a11yOptions.series.pointDescriptionEnabledThreshold ||\n                    a11yOptions.series\n                        .pointDescriptionEnabledThreshold === false;\n            }\n            /**\n             * Process marker graphics after render\n             * @private\n             */\n            function seriesOnAfterRender() {\n                const series = this;\n                // For styled mode the rendered graphic does not reflect the style\n                // options, and we need to add/remove classes to achieve the same.\n                if (series.chart.styledMode) {\n                    if (series.markerGroup) {\n                        series.markerGroup[series.a11yMarkersForced ? 'addClass' : 'removeClass']('highcharts-a11y-markers-hidden');\n                    }\n                    // Do we need to handle individual points?\n                    if (hasIndividualPointMarkerOptions(series)) {\n                        series.points.forEach((point) => {\n                            if (point.graphic) {\n                                point.graphic[point.hasForcedA11yMarker ?\n                                    'addClass' : 'removeClass']('highcharts-a11y-marker-hidden');\n                                point.graphic[point.hasForcedA11yMarker === false ?\n                                    'addClass' :\n                                    'removeClass']('highcharts-a11y-marker-visible');\n                            }\n                        });\n                    }\n                }\n            }\n            /**\n             * Keep track of options to reset markers to if no longer forced.\n             * @private\n             */\n            function seriesOnAfterSetOptions(e) {\n                this.resetA11yMarkerOptions = merge(e.options.marker || {}, this.userOptions.marker || {});\n            }\n            /**\n             * Keep track of forcing markers.\n             * @private\n             */\n            function seriesOnRender() {\n                const series = this, options = series.options;\n                if (shouldForceMarkers(series)) {\n                    if (options.marker && options.marker.enabled === false) {\n                        series.a11yMarkersForced = true;\n                        forceZeroOpacityMarkerOptions(series.options);\n                    }\n                    if (hasIndividualPointMarkerOptions(series)) {\n                        handleForcePointMarkers(series);\n                    }\n                }\n                else if (series.a11yMarkersForced) {\n                    delete series.a11yMarkersForced;\n                    unforceSeriesMarkerOptions(series);\n                    delete series.resetA11yMarkerOptions;\n                }\n            }\n            /**\n             * @private\n             */\n            function shouldForceMarkers(series) {\n                const chart = series.chart, chartA11yEnabled = chart.options.accessibility.enabled, seriesA11yEnabled = (series.options.accessibility &&\n                    series.options.accessibility.enabled) !== false;\n                return (chartA11yEnabled &&\n                    seriesA11yEnabled &&\n                    isWithinDescriptionThreshold(series));\n            }\n            /**\n             * @private\n             */\n            function unforcePointMarkerOptions(pointOptions) {\n                merge(true, pointOptions.marker, {\n                    states: {\n                        normal: {\n                            opacity: getPointMarkerOpacity(pointOptions) || 1\n                        }\n                    }\n                });\n            }\n            /**\n             * Reset markers to normal\n             * @private\n             */\n            function unforceSeriesMarkerOptions(series) {\n                const resetMarkerOptions = series.resetA11yMarkerOptions;\n                if (resetMarkerOptions) {\n                    const originalOpacity = resetMarkerOptions.states &&\n                        resetMarkerOptions.states.normal &&\n                        resetMarkerOptions.states.normal.opacity;\n                    // Temporarily set the old marker options to enabled in order to\n                    // trigger destruction of the markers in Series.update.\n                    if (series.userOptions && series.userOptions.marker) {\n                        series.userOptions.marker.enabled = true;\n                    }\n                    series.update({\n                        marker: {\n                            enabled: resetMarkerOptions.enabled,\n                            states: {\n                                normal: { opacity: originalOpacity }\n                            }\n                        }\n                    });\n                }\n            }\n            /**\n             * Reset markers if series is boosted and had forced markers (#17320).\n             * @private\n             */\n            function seriesOnRenderCanvas() {\n                if (this.boosted && this.a11yMarkersForced) {\n                    merge(true, this.options, {\n                        marker: {\n                            enabled: false\n                        }\n                    });\n                    delete this.a11yMarkersForced;\n                }\n            }\n        })(ForcedMarkersComposition || (ForcedMarkersComposition = {}));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return ForcedMarkersComposition;\n    });\n    _registerModule(_modules, 'Accessibility/Components/SeriesComponent/SeriesKeyboardNavigation.js', [_modules['Core/Series/Point.js'], _modules['Core/Series/Series.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Core/Globals.js'], _modules['Core/Utilities.js'], _modules['Accessibility/KeyboardNavigationHandler.js'], _modules['Accessibility/Utils/EventProvider.js'], _modules['Accessibility/Utils/ChartUtilities.js']], function (Point, Series, SeriesRegistry, H, U, KeyboardNavigationHandler, EventProvider, ChartUtilities) {\n        /* *\n         *\n         *  (c) 2009-2024 Ã˜ystein Moseng\n         *\n         *  Handle keyboard navigation for series.\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { seriesTypes } = SeriesRegistry;\n        const { doc } = H;\n        const { defined, fireEvent } = U;\n        const { getPointFromXY, getSeriesFromName, scrollAxisToPoint } = ChartUtilities;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /* eslint-disable valid-jsdoc */\n        /**\n         * Get the index of a point in a series. This is needed when using e.g. data\n         * grouping.\n         *\n         * @private\n         * @function getPointIndex\n         * @param {Highcharts.AccessibilityPoint} point\n         * The point to find index of.\n         * @return {number|undefined}\n         * The index in the series.points array of the point.\n         */\n        function getPointIndex(point) {\n            const index = point.index, points = point.series.points;\n            let i = points.length;\n            if (points[index] !== point) {\n                while (i--) {\n                    if (points[i] === point) {\n                        return i;\n                    }\n                }\n            }\n            else {\n                return index;\n            }\n        }\n        /**\n         * Determine if series navigation should be skipped\n         * @private\n         */\n        function isSkipSeries(series) {\n            const a11yOptions = series.chart.options.accessibility, seriesNavOptions = a11yOptions.keyboardNavigation.seriesNavigation, seriesA11yOptions = series.options.accessibility || {}, seriesKbdNavOptions = seriesA11yOptions.keyboardNavigation;\n            return seriesKbdNavOptions && seriesKbdNavOptions.enabled === false ||\n                seriesA11yOptions.enabled === false ||\n                series.options.enableMouseTracking === false || // #8440\n                !series.visible ||\n                // Skip all points in a series where pointNavigationEnabledThreshold is\n                // reached\n                (seriesNavOptions.pointNavigationEnabledThreshold &&\n                    +seriesNavOptions.pointNavigationEnabledThreshold <=\n                        series.points.length);\n        }\n        /**\n         * Determine if navigation for a point should be skipped\n         * @private\n         */\n        function isSkipPoint(point) {\n            const a11yOptions = point.series.chart.options.accessibility;\n            const pointA11yDisabled = (point.options.accessibility &&\n                point.options.accessibility.enabled === false);\n            return point.isNull &&\n                a11yOptions.keyboardNavigation.seriesNavigation.skipNullPoints ||\n                point.visible === false ||\n                point.isInside === false ||\n                pointA11yDisabled ||\n                isSkipSeries(point.series);\n        }\n        /**\n         * Get the first point that is not a skip point in this series.\n         * @private\n         */\n        function getFirstValidPointInSeries(series) {\n            const points = series.points || [], len = points.length;\n            for (let i = 0; i < len; ++i) {\n                if (!isSkipPoint(points[i])) {\n                    return points[i];\n                }\n            }\n            return null;\n        }\n        /**\n         * Get the first point that is not a skip point in this chart.\n         * @private\n         */\n        function getFirstValidPointInChart(chart) {\n            const series = chart.series || [], len = series.length;\n            for (let i = 0; i < len; ++i) {\n                if (!isSkipSeries(series[i])) {\n                    const point = getFirstValidPointInSeries(series[i]);\n                    if (point) {\n                        return point;\n                    }\n                }\n            }\n            return null;\n        }\n        /**\n         * @private\n         */\n        function highlightLastValidPointInChart(chart) {\n            const numSeries = chart.series.length;\n            let i = numSeries, res = false;\n            while (i--) {\n                chart.highlightedPoint = chart.series[i].points[chart.series[i].points.length - 1];\n                // Highlight first valid point in the series will also\n                // look backwards. It always starts from currently\n                // highlighted point.\n                res = chart.series[i].highlightNextValidPoint();\n                if (res) {\n                    break;\n                }\n            }\n            return res;\n        }\n        /**\n         * After drilling down/up, we need to set focus to the first point for\n         * screen readers and keyboard nav.\n         * @private\n         */\n        function updateChartFocusAfterDrilling(chart) {\n            const point = getFirstValidPointInChart(chart);\n            if (point) {\n                point.highlight(false); // Do not visually highlight\n            }\n        }\n        /**\n         * Highlight the first point in chart that is not a skip point\n         * @private\n         */\n        function highlightFirstValidPointInChart(chart) {\n            delete chart.highlightedPoint;\n            const point = getFirstValidPointInChart(chart);\n            return point ? point.highlight() : false;\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * @private\n         * @class\n         * @name Highcharts.SeriesKeyboardNavigation\n         */\n        class SeriesKeyboardNavigation {\n            /* *\n             *\n             *  Constructor\n             *\n             * */\n            constructor(chart, keyCodes) {\n                this.keyCodes = keyCodes;\n                this.chart = chart;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /* eslint-disable valid-jsdoc */\n            /**\n             * Init the keyboard navigation\n             */\n            init() {\n                const keyboardNavigation = this, chart = this.chart, e = this.eventProvider = new EventProvider();\n                e.addEvent(Series, 'destroy', function () {\n                    return keyboardNavigation.onSeriesDestroy(this);\n                });\n                e.addEvent(chart, 'afterApplyDrilldown', function () {\n                    updateChartFocusAfterDrilling(this);\n                });\n                e.addEvent(chart, 'drilldown', function (e) {\n                    const point = e.point, series = point.series;\n                    keyboardNavigation.lastDrilledDownPoint = {\n                        x: point.x,\n                        y: point.y,\n                        seriesName: series ? series.name : ''\n                    };\n                });\n                e.addEvent(chart, 'drillupall', function () {\n                    setTimeout(function () {\n                        keyboardNavigation.onDrillupAll();\n                    }, 10);\n                });\n                // Heatmaps et al. alter z-index in setState, causing elements\n                // to lose focus\n                e.addEvent(Point, 'afterSetState', function () {\n                    const point = this;\n                    const pointEl = point.graphic && point.graphic.element;\n                    const focusedElement = doc.activeElement;\n                    // VO brings focus with it to container, causing series nav to run.\n                    // If then navigating with virtual cursor, it is possible to leave\n                    // keyboard nav module state on the data points and still activate\n                    // proxy buttons.\n                    const focusedElClassName = (focusedElement && focusedElement.getAttribute('class'));\n                    const isProxyFocused = focusedElClassName &&\n                        focusedElClassName.indexOf('highcharts-a11y-proxy-element') > -1;\n                    if (chart.highlightedPoint === point &&\n                        focusedElement !== pointEl &&\n                        !isProxyFocused &&\n                        pointEl &&\n                        pointEl.focus) {\n                        pointEl.focus();\n                    }\n                });\n            }\n            /**\n             * After drillup we want to find the point that was drilled down to and\n             * highlight it.\n             * @private\n             */\n            onDrillupAll() {\n                const last = this.lastDrilledDownPoint, chart = this.chart, series = last && getSeriesFromName(chart, last.seriesName);\n                let point;\n                if (last && series && defined(last.x) && defined(last.y)) {\n                    point = getPointFromXY(series, last.x, last.y);\n                }\n                point = point || getFirstValidPointInChart(chart);\n                // Container focus can be lost on drillup due to deleted elements.\n                if (chart.container) {\n                    chart.container.focus();\n                }\n                if (point && point.highlight) {\n                    point.highlight(false); // Do not visually highlight\n                }\n            }\n            /**\n             * @private\n             */\n            getKeyboardNavigationHandler() {\n                const keyboardNavigation = this, keys = this.keyCodes, chart = this.chart, inverted = chart.inverted;\n                return new KeyboardNavigationHandler(chart, {\n                    keyCodeMap: [\n                        [\n                            inverted ? [keys.up, keys.down] : [keys.left, keys.right],\n                            function (keyCode) {\n                                return keyboardNavigation.onKbdSideways(this, keyCode);\n                            }\n                        ],\n                        [\n                            inverted ? [keys.left, keys.right] : [keys.up, keys.down],\n                            function (keyCode) {\n                                return keyboardNavigation.onKbdVertical(this, keyCode);\n                            }\n                        ],\n                        [\n                            [keys.enter, keys.space],\n                            function (keyCode, event) {\n                                const point = chart.highlightedPoint;\n                                if (point) {\n                                    const { plotLeft, plotTop } = this.chart, { plotX = 0, plotY = 0 } = point;\n                                    event = {\n                                        ...event,\n                                        chartX: plotLeft + plotX,\n                                        chartY: plotTop + plotY,\n                                        point: point,\n                                        target: point.graphic?.element || event.target\n                                    };\n                                    fireEvent(point.series, 'click', event);\n                                    point.firePointEvent('click', event);\n                                }\n                                return this.response.success;\n                            }\n                        ],\n                        [\n                            [keys.home],\n                            function () {\n                                highlightFirstValidPointInChart(chart);\n                                return this.response.success;\n                            }\n                        ],\n                        [\n                            [keys.end],\n                            function () {\n                                highlightLastValidPointInChart(chart);\n                                return this.response.success;\n                            }\n                        ],\n                        [\n                            [keys.pageDown, keys.pageUp],\n                            function (keyCode) {\n                                chart.highlightAdjacentSeries(keyCode === keys.pageDown);\n                                return this.response.success;\n                            }\n                        ]\n                    ],\n                    init: function () {\n                        return keyboardNavigation.onHandlerInit(this);\n                    },\n                    validate: function () {\n                        return !!getFirstValidPointInChart(chart);\n                    },\n                    terminate: function () {\n                        return keyboardNavigation.onHandlerTerminate();\n                    }\n                });\n            }\n            /**\n             * @private\n             * @param {Highcharts.KeyboardNavigationHandler} handler\n             * @param {number} keyCode\n             * @return {number}\n             * response\n             */\n            onKbdSideways(handler, keyCode) {\n                const keys = this.keyCodes, isNext = keyCode === keys.right || keyCode === keys.down;\n                return this.attemptHighlightAdjacentPoint(handler, isNext);\n            }\n            /**\n             * When keyboard navigation inits.\n             * @private\n             * @param {Highcharts.KeyboardNavigationHandler} handler The handler object\n             * @return {number}\n             * response\n             */\n            onHandlerInit(handler) {\n                const chart = this.chart, kbdNavOptions = chart.options.accessibility.keyboardNavigation;\n                if (kbdNavOptions.seriesNavigation.rememberPointFocus &&\n                    chart.highlightedPoint) {\n                    chart.highlightedPoint.highlight();\n                }\n                else {\n                    highlightFirstValidPointInChart(chart);\n                }\n                return handler.response.success;\n            }\n            /**\n             * @private\n             * @param {Highcharts.KeyboardNavigationHandler} handler\n             * @param {number} keyCode\n             * @return {number}\n             * response\n             */\n            onKbdVertical(handler, keyCode) {\n                const chart = this.chart, keys = this.keyCodes, isNext = keyCode === keys.down || keyCode === keys.right, navOptions = chart.options.accessibility.keyboardNavigation\n                    .seriesNavigation;\n                // Handle serialized mode, act like left/right\n                if (navOptions.mode && navOptions.mode === 'serialize') {\n                    return this.attemptHighlightAdjacentPoint(handler, isNext);\n                }\n                // Normal mode, move between series\n                const highlightMethod = (chart.highlightedPoint &&\n                    chart.highlightedPoint.series.keyboardMoveVertical) ?\n                    'highlightAdjacentPointVertical' :\n                    'highlightAdjacentSeries';\n                chart[highlightMethod](isNext);\n                return handler.response.success;\n            }\n            /**\n             * @private\n             */\n            onHandlerTerminate() {\n                const chart = this.chart, kbdNavOptions = chart.options.accessibility.keyboardNavigation;\n                if (chart.tooltip) {\n                    chart.tooltip.hide(0);\n                }\n                const hoverSeries = (chart.highlightedPoint && chart.highlightedPoint.series);\n                if (hoverSeries && hoverSeries.onMouseOut) {\n                    hoverSeries.onMouseOut();\n                }\n                if (chart.highlightedPoint && chart.highlightedPoint.onMouseOut) {\n                    chart.highlightedPoint.onMouseOut();\n                }\n                if (!kbdNavOptions.seriesNavigation.rememberPointFocus) {\n                    delete chart.highlightedPoint;\n                }\n            }\n            /**\n             * Function that attempts to highlight next/prev point. Handles wrap around.\n             * @private\n             */\n            attemptHighlightAdjacentPoint(handler, directionIsNext) {\n                const chart = this.chart, wrapAround = chart.options.accessibility.keyboardNavigation\n                    .wrapAround, highlightSuccessful = chart.highlightAdjacentPoint(directionIsNext);\n                if (!highlightSuccessful) {\n                    if (wrapAround && (directionIsNext ?\n                        highlightFirstValidPointInChart(chart) :\n                        highlightLastValidPointInChart(chart))) {\n                        return handler.response.success;\n                    }\n                    return handler.response[directionIsNext ? 'next' : 'prev'];\n                }\n                return handler.response.success;\n            }\n            /**\n             * @private\n             */\n            onSeriesDestroy(series) {\n                const chart = this.chart, currentHighlightedPointDestroyed = chart.highlightedPoint &&\n                    chart.highlightedPoint.series === series;\n                if (currentHighlightedPointDestroyed) {\n                    delete chart.highlightedPoint;\n                    if (chart.focusElement) {\n                        chart.focusElement.removeFocusBorder();\n                    }\n                }\n            }\n            /**\n             * @private\n             */\n            destroy() {\n                this.eventProvider.removeAddedEvents();\n            }\n        }\n        /* *\n         *\n         *  Class Namespace\n         *\n         * */\n        (function (SeriesKeyboardNavigation) {\n            /* *\n             *\n             *  Declarations\n             *\n             * */\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Function to highlight next/previous point in chart.\n             *\n             * @private\n             * @function Highcharts.Chart#highlightAdjacentPoint\n             *\n             * @param {boolean} next\n             * Flag for the direction.\n             *\n             * @return {Highcharts.Point|boolean}\n             * Returns highlighted point on success, false on failure (no adjacent point\n             * to highlight in chosen direction).\n             */\n            function chartHighlightAdjacentPoint(next) {\n                const chart = this, series = chart.series, curPoint = chart.highlightedPoint, curPointIndex = curPoint && getPointIndex(curPoint) || 0, curPoints = curPoint && curPoint.series.points || [], lastSeries = chart.series && chart.series[chart.series.length - 1], lastPoint = lastSeries &&\n                    lastSeries.points &&\n                    lastSeries.points[lastSeries.points.length - 1];\n                let newSeries, newPoint;\n                // If no points, return false\n                if (!series[0] || !series[0].points) {\n                    return false;\n                }\n                if (!curPoint) {\n                    // No point is highlighted yet. Try first/last point depending on\n                    // move direction\n                    newPoint = next ? series[0].points[0] : lastPoint;\n                }\n                else {\n                    // We have a highlighted point. Grab next/prev point & series.\n                    newSeries = series[curPoint.series.index + (next ? 1 : -1)];\n                    newPoint = curPoints[curPointIndex + (next ? 1 : -1)];\n                    if (!newPoint && newSeries) {\n                        // Done with this series, try next one\n                        newPoint = newSeries.points[next ? 0 : newSeries.points.length - 1];\n                    }\n                    // If there is no adjacent point, we return false\n                    if (!newPoint) {\n                        return false;\n                    }\n                }\n                // Recursively skip points\n                if (isSkipPoint(newPoint)) {\n                    // If we skip this whole series, move to the end of the series\n                    // before we recurse, just to optimize\n                    newSeries = newPoint.series;\n                    if (isSkipSeries(newSeries)) {\n                        chart.highlightedPoint = next ?\n                            newSeries.points[newSeries.points.length - 1] :\n                            newSeries.points[0];\n                    }\n                    else {\n                        // Otherwise, just move one point\n                        chart.highlightedPoint = newPoint;\n                    }\n                    // Retry\n                    return chart.highlightAdjacentPoint(next);\n                }\n                // There is an adjacent point, highlight it\n                return newPoint.highlight();\n            }\n            /**\n             * Highlight the closest point vertically.\n             * @private\n             */\n            function chartHighlightAdjacentPointVertical(down) {\n                const curPoint = this.highlightedPoint;\n                let minDistance = Infinity, bestPoint;\n                if (!defined(curPoint.plotX) || !defined(curPoint.plotY)) {\n                    return false;\n                }\n                this.series.forEach((series) => {\n                    if (isSkipSeries(series)) {\n                        return;\n                    }\n                    series.points.forEach((point) => {\n                        if (!defined(point.plotY) || !defined(point.plotX) ||\n                            point === curPoint) {\n                            return;\n                        }\n                        let yDistance = point.plotY - curPoint.plotY;\n                        const width = Math.abs(point.plotX - curPoint.plotX), distance = Math.abs(yDistance) * Math.abs(yDistance) +\n                            width * width * 4; // Weigh horizontal distance highly\n                        // Reverse distance number if axis is reversed\n                        if (series.yAxis && series.yAxis.reversed) {\n                            yDistance *= -1;\n                        }\n                        if (yDistance <= 0 && down || yDistance >= 0 && !down ||\n                            distance < 5 || // Points in same spot => infinite loop\n                            isSkipPoint(point)) {\n                            return;\n                        }\n                        if (distance < minDistance) {\n                            minDistance = distance;\n                            bestPoint = point;\n                        }\n                    });\n                });\n                return bestPoint ? bestPoint.highlight() : false;\n            }\n            /**\n             * Highlight next/previous series in chart. Returns false if no adjacent\n             * series in the direction, otherwise returns new highlighted point.\n             * @private\n             */\n            function chartHighlightAdjacentSeries(down) {\n                const chart = this, curPoint = chart.highlightedPoint, lastSeries = chart.series && chart.series[chart.series.length - 1], lastPoint = lastSeries && lastSeries.points &&\n                    lastSeries.points[lastSeries.points.length - 1];\n                let newSeries, newPoint, adjacentNewPoint;\n                // If no point is highlighted, highlight the first/last point\n                if (!chart.highlightedPoint) {\n                    newSeries = down ? (chart.series && chart.series[0]) : lastSeries;\n                    newPoint = down ?\n                        (newSeries && newSeries.points && newSeries.points[0]) :\n                        lastPoint;\n                    return newPoint ? newPoint.highlight() : false;\n                }\n                newSeries = (chart.series[curPoint.series.index + (down ? -1 : 1)]);\n                if (!newSeries) {\n                    return false;\n                }\n                // We have a new series in this direction, find the right point\n                // Weigh xDistance as counting much higher than Y distance\n                newPoint = getClosestPoint(curPoint, newSeries, 4);\n                if (!newPoint) {\n                    return false;\n                }\n                // New series and point exists, but we might want to skip it\n                if (isSkipSeries(newSeries)) {\n                    // Skip the series\n                    newPoint.highlight();\n                    // Try recurse\n                    adjacentNewPoint = chart.highlightAdjacentSeries(down);\n                    if (!adjacentNewPoint) {\n                        // Recurse failed\n                        curPoint.highlight();\n                        return false;\n                    }\n                    // Recurse succeeded\n                    return adjacentNewPoint;\n                }\n                // Highlight the new point or any first valid point back or forwards\n                // from it\n                newPoint.highlight();\n                return newPoint.series.highlightNextValidPoint();\n            }\n            /**\n             * @private\n             */\n            function compose(ChartClass, PointClass, SeriesClass) {\n                const chartProto = ChartClass.prototype, pointProto = PointClass.prototype, seriesProto = SeriesClass.prototype;\n                if (!chartProto.highlightAdjacentPoint) {\n                    chartProto.highlightAdjacentPoint = chartHighlightAdjacentPoint;\n                    chartProto.highlightAdjacentPointVertical = (chartHighlightAdjacentPointVertical);\n                    chartProto.highlightAdjacentSeries = chartHighlightAdjacentSeries;\n                    pointProto.highlight = pointHighlight;\n                    /**\n                     * Set for which series types it makes sense to move to the closest\n                     * point with up/down arrows, and which series types should just\n                     * move to next series.\n                     * @private\n                     */\n                    seriesProto.keyboardMoveVertical = true;\n                    [\n                        'column',\n                        'gantt',\n                        'pie'\n                    ].forEach((type) => {\n                        if (seriesTypes[type]) {\n                            seriesTypes[type].prototype.keyboardMoveVertical = false;\n                        }\n                    });\n                    seriesProto.highlightNextValidPoint = (seriesHighlightNextValidPoint);\n                }\n            }\n            SeriesKeyboardNavigation.compose = compose;\n            /**\n             * Get the point in a series that is closest (in pixel distance) to a\n             * reference point. Optionally supply weight factors for x and y directions.\n             * @private\n             */\n            function getClosestPoint(point, series, xWeight, yWeight) {\n                let minDistance = Infinity, dPoint, minIx, distance, i = series.points.length;\n                const hasUndefinedPosition = (point) => (!(defined(point.plotX) && defined(point.plotY)));\n                if (hasUndefinedPosition(point)) {\n                    return;\n                }\n                while (i--) {\n                    dPoint = series.points[i];\n                    if (hasUndefinedPosition(dPoint)) {\n                        continue;\n                    }\n                    distance = (point.plotX - dPoint.plotX) *\n                        (point.plotX - dPoint.plotX) *\n                        (xWeight || 1) +\n                        (point.plotY - dPoint.plotY) *\n                            (point.plotY - dPoint.plotY) *\n                            (yWeight || 1);\n                    if (distance < minDistance) {\n                        minDistance = distance;\n                        minIx = i;\n                    }\n                }\n                return defined(minIx) ? series.points[minIx] : void 0;\n            }\n            /**\n             * Highlights a point (show tooltip, display hover state, focus element).\n             *\n             * @private\n             * @function Highcharts.Point#highlight\n             *\n             * @return {Highcharts.Point}\n             *         This highlighted point.\n             */\n            function pointHighlight(highlightVisually = true) {\n                const chart = this.series.chart, tooltipElement = chart.tooltip?.label?.element;\n                if (!this.isNull && highlightVisually) {\n                    this.onMouseOver(); // Show the hover marker and tooltip\n                }\n                else {\n                    if (chart.tooltip) {\n                        chart.tooltip.hide(0);\n                    }\n                    // Do not call blur on the element, as it messes up the focus of the\n                    // div element of the chart\n                }\n                scrollAxisToPoint(this);\n                // We focus only after calling onMouseOver because the state change can\n                // change z-index and mess up the element.\n                if (this.graphic) {\n                    chart.setFocusToElement(this.graphic);\n                    if (!highlightVisually && chart.focusElement) {\n                        chart.focusElement.removeFocusBorder();\n                    }\n                }\n                chart.highlightedPoint = this;\n                // Get position of the tooltip.\n                const tooltipTop = tooltipElement?.getBoundingClientRect().top;\n                if (tooltipElement && tooltipTop && tooltipTop < 0) {\n                    // Calculate scroll position.\n                    const scrollTop = window.scrollY, newScrollTop = scrollTop + tooltipTop;\n                    // Scroll window to new position.\n                    window.scrollTo({\n                        behavior: 'smooth',\n                        top: newScrollTop\n                    });\n                }\n                return this;\n            }\n            /**\n             * Highlight first valid point in a series. Returns the point if\n             * successfully highlighted, otherwise false. If there is a highlighted\n             * point in the series, use that as starting point.\n             *\n             * @private\n             * @function Highcharts.Series#highlightNextValidPoint\n             */\n            function seriesHighlightNextValidPoint() {\n                const curPoint = this.chart.highlightedPoint, start = (curPoint && curPoint.series) === this ?\n                    getPointIndex(curPoint) :\n                    0, points = this.points, len = points.length;\n                if (points && len) {\n                    for (let i = start; i < len; ++i) {\n                        if (!isSkipPoint(points[i])) {\n                            return points[i].highlight();\n                        }\n                    }\n                    for (let j = start; j >= 0; --j) {\n                        if (!isSkipPoint(points[j])) {\n                            return points[j].highlight();\n                        }\n                    }\n                }\n                return false;\n            }\n        })(SeriesKeyboardNavigation || (SeriesKeyboardNavigation = {}));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return SeriesKeyboardNavigation;\n    });\n    _registerModule(_modules, 'Accessibility/Components/SeriesComponent/SeriesComponent.js', [_modules['Accessibility/AccessibilityComponent.js'], _modules['Accessibility/Utils/ChartUtilities.js'], _modules['Accessibility/Components/SeriesComponent/ForcedMarkers.js'], _modules['Accessibility/Components/SeriesComponent/NewDataAnnouncer.js'], _modules['Accessibility/Components/SeriesComponent/SeriesDescriber.js'], _modules['Accessibility/Components/SeriesComponent/SeriesKeyboardNavigation.js']], function (AccessibilityComponent, ChartUtilities, ForcedMarkers, NewDataAnnouncer, SeriesDescriber, SeriesKeyboardNavigation) {\n        /* *\n         *\n         *  (c) 2009-2024 Ã˜ystein Moseng\n         *\n         *  Accessibility component for series and points.\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { hideSeriesFromAT } = ChartUtilities;\n        const { describeSeries } = SeriesDescriber;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The SeriesComponent class\n         *\n         * @private\n         * @class\n         * @name Highcharts.SeriesComponent\n         */\n        class SeriesComponent extends AccessibilityComponent {\n            /* *\n             *\n             *  Static Functions\n             *\n             * */\n            /* eslint-disable valid-jsdoc */\n            /**\n             * @private\n             */\n            static compose(ChartClass, PointClass, SeriesClass) {\n                NewDataAnnouncer.compose(SeriesClass);\n                ForcedMarkers.compose(SeriesClass);\n                SeriesKeyboardNavigation.compose(ChartClass, PointClass, SeriesClass);\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Init the component.\n             */\n            init() {\n                this.newDataAnnouncer = new NewDataAnnouncer(this.chart);\n                this.newDataAnnouncer.init();\n                this.keyboardNavigation = new SeriesKeyboardNavigation(this.chart, this.keyCodes);\n                this.keyboardNavigation.init();\n                this.hideTooltipFromATWhenShown();\n                this.hideSeriesLabelsFromATWhenShown();\n            }\n            /**\n             * @private\n             */\n            hideTooltipFromATWhenShown() {\n                const component = this;\n                if (this.chart.tooltip) {\n                    this.addEvent(this.chart.tooltip.constructor, 'refresh', function () {\n                        if (this.chart === component.chart &&\n                            this.label &&\n                            this.label.element) {\n                            this.label.element.setAttribute('aria-hidden', true);\n                        }\n                    });\n                }\n            }\n            /**\n             * @private\n             */\n            hideSeriesLabelsFromATWhenShown() {\n                this.addEvent(this.chart, 'afterDrawSeriesLabels', function () {\n                    this.series.forEach(function (series) {\n                        if (series.labelBySeries) {\n                            series.labelBySeries.attr('aria-hidden', true);\n                        }\n                    });\n                });\n            }\n            /**\n             * Called on chart render. It is necessary to do this for render in case\n             * markers change on zoom/pixel density.\n             */\n            onChartRender() {\n                const chart = this.chart;\n                chart.series.forEach(function (series) {\n                    const shouldDescribeSeries = (series.options.accessibility &&\n                        series.options.accessibility.enabled) !== false &&\n                        series.visible && series.getPointsCollection().length !== 0;\n                    if (shouldDescribeSeries) {\n                        describeSeries(series);\n                    }\n                    else {\n                        hideSeriesFromAT(series);\n                    }\n                });\n            }\n            /**\n             * Get keyboard navigation handler for this component.\n             * @private\n             */\n            getKeyboardNavigation() {\n                return this.keyboardNavigation.getKeyboardNavigationHandler();\n            }\n            /**\n             * Remove traces\n             * @private\n             */\n            destroy() {\n                this.newDataAnnouncer.destroy();\n                this.keyboardNavigation.destroy();\n            }\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return SeriesComponent;\n    });\n    _registerModule(_modules, 'Accessibility/Components/ZoomComponent.js', [_modules['Accessibility/AccessibilityComponent.js'], _modules['Accessibility/Utils/ChartUtilities.js'], _modules['Accessibility/Utils/HTMLUtilities.js'], _modules['Accessibility/KeyboardNavigationHandler.js'], _modules['Core/Utilities.js']], function (AccessibilityComponent, CU, HU, KeyboardNavigationHandler, U) {\n        /* *\n         *\n         *  (c) 2009-2024 Ã˜ystein Moseng\n         *\n         *  Accessibility component for chart zoom.\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { unhideChartElementFromAT } = CU;\n        const { getFakeMouseEvent } = HU;\n        const { attr, pick } = U;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * @private\n         */\n        function chartHasMapZoom(chart) {\n            return !!((chart.mapView) &&\n                chart.mapNavigation &&\n                chart.mapNavigation.navButtons.length);\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The ZoomComponent class\n         *\n         * @private\n         * @class\n         * @name Highcharts.ZoomComponent\n         */\n        class ZoomComponent extends AccessibilityComponent {\n            constructor() {\n                /* *\n                 *\n                 *  Properties\n                 *\n                 * */\n                super(...arguments);\n                this.focusedMapNavButtonIx = -1;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Initialize the component\n             */\n            init() {\n                const component = this, chart = this.chart;\n                this.proxyProvider.addGroup('zoom', 'div');\n                [\n                    'afterShowResetZoom', 'afterApplyDrilldown', 'drillupall'\n                ].forEach((eventType) => {\n                    component.addEvent(chart, eventType, function () {\n                        component.updateProxyOverlays();\n                    });\n                });\n            }\n            /**\n             * Called when chart is updated\n             */\n            onChartUpdate() {\n                const chart = this.chart, component = this;\n                // Make map zoom buttons accessible\n                if (chart.mapNavigation) {\n                    chart.mapNavigation.navButtons.forEach((button, i) => {\n                        unhideChartElementFromAT(chart, button.element);\n                        component.setMapNavButtonAttrs(button.element, 'accessibility.zoom.mapZoom' + (i ? 'Out' : 'In'));\n                    });\n                }\n            }\n            /**\n             * @private\n             * @param {Highcharts.HTMLDOMElement|Highcharts.SVGDOMElement} button\n             * @param {string} labelFormatKey\n             */\n            setMapNavButtonAttrs(button, labelFormatKey) {\n                const chart = this.chart, label = chart.langFormat(labelFormatKey, { chart: chart });\n                attr(button, {\n                    tabindex: -1,\n                    role: 'button',\n                    'aria-label': label\n                });\n            }\n            /**\n             * Update the proxy overlays on every new render to ensure positions are\n             * correct.\n             */\n            onChartRender() {\n                this.updateProxyOverlays();\n            }\n            /**\n             * Update proxy overlays, recreating the buttons.\n             */\n            updateProxyOverlays() {\n                const chart = this.chart;\n                // Always start with a clean slate\n                this.proxyProvider.clearGroup('zoom');\n                if (chart.resetZoomButton) {\n                    this.createZoomProxyButton(chart.resetZoomButton, 'resetZoomProxyButton', chart.langFormat('accessibility.zoom.resetZoomButton', { chart: chart }));\n                }\n                if (chart.drillUpButton &&\n                    chart.breadcrumbs &&\n                    chart.breadcrumbs.list) {\n                    const lastBreadcrumb = chart.breadcrumbs.list[chart.breadcrumbs.list.length - 1];\n                    this.createZoomProxyButton(chart.drillUpButton, 'drillUpProxyButton', chart.langFormat('accessibility.drillUpButton', {\n                        chart: chart,\n                        buttonText: chart.breadcrumbs.getButtonText(lastBreadcrumb)\n                    }));\n                }\n            }\n            /**\n             * @private\n             * @param {Highcharts.SVGElement} buttonEl\n             * @param {string} buttonProp\n             * @param {string} label\n             */\n            createZoomProxyButton(buttonEl, buttonProp, label) {\n                this[buttonProp] = this.proxyProvider.addProxyElement('zoom', {\n                    click: buttonEl\n                }, 'button', {\n                    'aria-label': label,\n                    tabindex: -1\n                });\n            }\n            /**\n             * Get keyboard navigation handler for map zoom.\n             * @private\n             * @return {Highcharts.KeyboardNavigationHandler} The module object\n             */\n            getMapZoomNavigation() {\n                const keys = this.keyCodes, chart = this.chart, component = this;\n                return new KeyboardNavigationHandler(chart, {\n                    keyCodeMap: [\n                        [\n                            [keys.up, keys.down, keys.left, keys.right],\n                            function (keyCode) {\n                                return component.onMapKbdArrow(this, keyCode);\n                            }\n                        ],\n                        [\n                            [keys.tab],\n                            function (_keyCode, e) {\n                                return component.onMapKbdTab(this, e);\n                            }\n                        ],\n                        [\n                            [keys.space, keys.enter],\n                            function () {\n                                return component.onMapKbdClick(this);\n                            }\n                        ]\n                    ],\n                    validate: function () {\n                        return chartHasMapZoom(chart);\n                    },\n                    init: function (direction) {\n                        return component.onMapNavInit(direction);\n                    }\n                });\n            }\n            /**\n             * Arrow key panning for maps.\n             * @private\n             * @param {Highcharts.KeyboardNavigationHandler} keyboardNavigationHandler The handler context.\n             * @param {number} keyCode Key pressed.\n             * @return {number} Response code\n             */\n            onMapKbdArrow(keyboardNavigationHandler, keyCode) {\n                const chart = this.chart, keys = this.keyCodes, target = chart.container, isY = keyCode === keys.up || keyCode === keys.down, stepDirection = (keyCode === keys.left || keyCode === keys.up) ?\n                    1 : -1, granularity = 10, diff = (isY ? chart.plotHeight : chart.plotWidth) /\n                    granularity * stepDirection, \n                // Randomize since same mousedown coords twice is ignored in MapView\n                r = Math.random() * 10, startPos = {\n                    x: target.offsetLeft + chart.plotLeft + chart.plotWidth / 2 + r,\n                    y: target.offsetTop + chart.plotTop + chart.plotHeight / 2 + r\n                }, endPos = isY ? { x: startPos.x, y: startPos.y + diff } :\n                    { x: startPos.x + diff, y: startPos.y };\n                [\n                    getFakeMouseEvent('mousedown', startPos),\n                    getFakeMouseEvent('mousemove', endPos),\n                    getFakeMouseEvent('mouseup', endPos)\n                ].forEach((e) => target.dispatchEvent(e));\n                return keyboardNavigationHandler.response.success;\n            }\n            /**\n             * @private\n             * @param {Highcharts.KeyboardNavigationHandler} keyboardNavigationHandler\n             * @param {global.KeyboardEvent} event\n             * @return {number} Response code\n             */\n            onMapKbdTab(keyboardNavigationHandler, event) {\n                const chart = this.chart;\n                const response = keyboardNavigationHandler.response;\n                const isBackwards = event.shiftKey;\n                const isMoveOutOfRange = isBackwards && !this.focusedMapNavButtonIx ||\n                    !isBackwards && this.focusedMapNavButtonIx;\n                // Deselect old\n                chart.mapNavigation.navButtons[this.focusedMapNavButtonIx].setState(0);\n                if (isMoveOutOfRange) {\n                    if (chart.mapView) {\n                        chart.mapView.zoomBy(); // Reset zoom\n                    }\n                    return response[isBackwards ? 'prev' : 'next'];\n                }\n                // Select other button\n                this.focusedMapNavButtonIx += isBackwards ? -1 : 1;\n                const button = chart.mapNavigation.navButtons[this.focusedMapNavButtonIx];\n                chart.setFocusToElement(button.box, button.element);\n                button.setState(2);\n                return response.success;\n            }\n            /**\n             * Called on map button click.\n             * @private\n             * @param {Highcharts.KeyboardNavigationHandler} keyboardNavigationHandler The handler context object\n             * @return {number} Response code\n             */\n            onMapKbdClick(keyboardNavigationHandler) {\n                const el = this.chart.mapNavigation.navButtons[this.focusedMapNavButtonIx].element;\n                this.fakeClickEvent(el);\n                return keyboardNavigationHandler.response.success;\n            }\n            /**\n             * @private\n             * @param {number} direction\n             */\n            onMapNavInit(direction) {\n                const chart = this.chart, zoomIn = chart.mapNavigation.navButtons[0], zoomOut = chart.mapNavigation.navButtons[1], initialButton = direction > 0 ? zoomIn : zoomOut;\n                chart.setFocusToElement(initialButton.box, initialButton.element);\n                initialButton.setState(2);\n                this.focusedMapNavButtonIx = direction > 0 ? 0 : 1;\n            }\n            /**\n             * Get keyboard navigation handler for a simple chart button. Provide the\n             * button reference for the chart, and a function to call on click.\n             *\n             * @private\n             * @param {string} buttonProp The property on chart referencing the button.\n             * @return {Highcharts.KeyboardNavigationHandler} The module object\n             */\n            simpleButtonNavigation(buttonProp, proxyProp, onClick) {\n                const keys = this.keyCodes, component = this, chart = this.chart;\n                return new KeyboardNavigationHandler(chart, {\n                    keyCodeMap: [\n                        [\n                            [keys.tab, keys.up, keys.down, keys.left, keys.right],\n                            function (keyCode, e) {\n                                const isBackwards = (keyCode === keys.tab && e.shiftKey ||\n                                    keyCode === keys.left ||\n                                    keyCode === keys.up);\n                                // Arrow/tab => just move\n                                return this.response[isBackwards ? 'prev' : 'next'];\n                            }\n                        ],\n                        [\n                            [keys.space, keys.enter],\n                            function () {\n                                const res = onClick(this, chart);\n                                return pick(res, this.response.success);\n                            }\n                        ]\n                    ],\n                    validate: function () {\n                        const hasButton = (chart[buttonProp] &&\n                            chart[buttonProp].box &&\n                            component[proxyProp].innerElement);\n                        return hasButton;\n                    },\n                    init: function () {\n                        chart.setFocusToElement(chart[buttonProp].box, component[proxyProp].innerElement);\n                    }\n                });\n            }\n            /**\n             * Get keyboard navigation handlers for this component.\n             * @return {Array<Highcharts.KeyboardNavigationHandler>}\n             *         List of module objects\n             */\n            getKeyboardNavigation() {\n                return [\n                    this.simpleButtonNavigation('resetZoomButton', 'resetZoomProxyButton', function (_handler, chart) {\n                        chart.zoomOut();\n                    }),\n                    this.simpleButtonNavigation('drillUpButton', 'drillUpProxyButton', function (handler, chart) {\n                        chart.drillUp();\n                        return handler.response.prev;\n                    }),\n                    this.getMapZoomNavigation()\n                ];\n            }\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return ZoomComponent;\n    });\n    _registerModule(_modules, 'Accessibility/HighContrastMode.js', [_modules['Core/Globals.js']], function (H) {\n        /* *\n         *\n         *  (c) 2009-2024 Ã˜ystein Moseng\n         *\n         *  Handling for Windows High Contrast Mode.\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { doc, isMS, win } = H;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * Detect WHCM in the browser.\n         *\n         * @function Highcharts#isHighContrastModeActive\n         * @private\n         * @return {boolean} Returns true if the browser is in High Contrast mode.\n         */\n        function isHighContrastModeActive() {\n            // Use media query on Edge, but not on IE\n            const isEdge = /(Edg)/.test(win.navigator.userAgent);\n            if (win.matchMedia && isEdge) {\n                return win.matchMedia('(-ms-high-contrast: active)').matches;\n            }\n            // Test BG image for IE\n            if (isMS && win.getComputedStyle) {\n                const testDiv = doc.createElement('div');\n                const imageSrc = 'data:image/gif;base64,' +\n                    'R0lGODlhAQABAAAAACH5BAEKAAEALAAAAAABAAEAAAICTAEAOw==';\n                testDiv.style.backgroundImage = `url(${imageSrc})`; // #13071\n                doc.body.appendChild(testDiv);\n                const bi = (testDiv.currentStyle ||\n                    win.getComputedStyle(testDiv)).backgroundImage;\n                doc.body.removeChild(testDiv);\n                return bi === 'none';\n            }\n            // Other browsers use the forced-colors standard\n            return win.matchMedia && win.matchMedia('(forced-colors: active)').matches;\n        }\n        /**\n         * Force high contrast theme for the chart. The default theme is defined in\n         * a separate file.\n         *\n         * @function Highcharts#setHighContrastTheme\n         * @private\n         * @param {Highcharts.AccessibilityChart} chart The chart to set the theme of.\n         * @return {void}\n         */\n        function setHighContrastTheme(chart) {\n            // We might want to add additional functionality here in the future for\n            // storing the old state so that we can reset the theme if HC mode is\n            // disabled. For now, the user will have to reload the page.\n            chart.highContrastModeActive = true;\n            // Apply theme to chart\n            const theme = (chart.options.accessibility.highContrastTheme);\n            chart.update(theme, false);\n            const hasCustomColors = theme.colors?.length > 1;\n            // Force series colors (plotOptions is not enough)\n            chart.series.forEach(function (s) {\n                const plotOpts = theme.plotOptions[s.type] || {};\n                const fillColor = hasCustomColors && s.colorIndex !== void 0 ?\n                    theme.colors[s.colorIndex] :\n                    plotOpts.color || 'window';\n                const seriesOptions = {\n                    color: plotOpts.color || 'windowText',\n                    colors: hasCustomColors ?\n                        theme.colors : [plotOpts.color || 'windowText'],\n                    borderColor: plotOpts.borderColor || 'window',\n                    fillColor\n                };\n                s.update(seriesOptions, false);\n                if (s.points) {\n                    // Force point colors if existing\n                    s.points.forEach(function (p) {\n                        if (p.options && p.options.color) {\n                            p.update({\n                                color: plotOpts.color || 'windowText',\n                                borderColor: plotOpts.borderColor || 'window'\n                            }, false);\n                        }\n                    });\n                }\n            });\n            // The redraw for each series and after is required for 3D pie\n            // (workaround)\n            chart.redraw();\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        const whcm = {\n            isHighContrastModeActive,\n            setHighContrastTheme\n        };\n\n        return whcm;\n    });\n    _registerModule(_modules, 'Accessibility/HighContrastTheme.js', [], function () {\n        /* *\n         *\n         *  (c) 2009-2024 Ã˜ystein Moseng\n         *\n         *  Default theme for Windows High Contrast Mode.\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const theme = {\n            chart: {\n                backgroundColor: 'window'\n            },\n            title: {\n                style: {\n                    color: 'windowText'\n                }\n            },\n            subtitle: {\n                style: {\n                    color: 'windowText'\n                }\n            },\n            colorAxis: {\n                minColor: 'windowText',\n                maxColor: 'windowText',\n                stops: [],\n                dataClasses: []\n            },\n            colors: ['windowText'],\n            xAxis: {\n                gridLineColor: 'windowText',\n                labels: {\n                    style: {\n                        color: 'windowText'\n                    }\n                },\n                lineColor: 'windowText',\n                minorGridLineColor: 'windowText',\n                tickColor: 'windowText',\n                title: {\n                    style: {\n                        color: 'windowText'\n                    }\n                }\n            },\n            yAxis: {\n                gridLineColor: 'windowText',\n                labels: {\n                    style: {\n                        color: 'windowText'\n                    }\n                },\n                lineColor: 'windowText',\n                minorGridLineColor: 'windowText',\n                tickColor: 'windowText',\n                title: {\n                    style: {\n                        color: 'windowText'\n                    }\n                }\n            },\n            tooltip: {\n                backgroundColor: 'window',\n                borderColor: 'windowText',\n                style: {\n                    color: 'windowText'\n                }\n            },\n            plotOptions: {\n                series: {\n                    lineColor: 'windowText',\n                    fillColor: 'window',\n                    borderColor: 'windowText',\n                    edgeColor: 'windowText',\n                    borderWidth: 1,\n                    dataLabels: {\n                        connectorColor: 'windowText',\n                        color: 'windowText',\n                        style: {\n                            color: 'windowText',\n                            textOutline: 'none'\n                        }\n                    },\n                    marker: {\n                        lineColor: 'windowText',\n                        fillColor: 'windowText'\n                    }\n                },\n                pie: {\n                    color: 'window',\n                    colors: ['window'],\n                    borderColor: 'windowText',\n                    borderWidth: 1\n                },\n                boxplot: {\n                    fillColor: 'window'\n                },\n                candlestick: {\n                    lineColor: 'windowText',\n                    fillColor: 'window'\n                },\n                errorbar: {\n                    fillColor: 'window'\n                }\n            },\n            legend: {\n                backgroundColor: 'window',\n                itemStyle: {\n                    color: 'windowText'\n                },\n                itemHoverStyle: {\n                    color: 'windowText'\n                },\n                itemHiddenStyle: {\n                    color: '#555'\n                },\n                title: {\n                    style: {\n                        color: 'windowText'\n                    }\n                }\n            },\n            credits: {\n                style: {\n                    color: 'windowText'\n                }\n            },\n            drilldown: {\n                activeAxisLabelStyle: {\n                    color: 'windowText'\n                },\n                activeDataLabelStyle: {\n                    color: 'windowText'\n                }\n            },\n            navigation: {\n                buttonOptions: {\n                    symbolStroke: 'windowText',\n                    theme: {\n                        fill: 'window'\n                    }\n                }\n            },\n            rangeSelector: {\n                buttonTheme: {\n                    fill: 'window',\n                    stroke: 'windowText',\n                    style: {\n                        color: 'windowText'\n                    },\n                    states: {\n                        hover: {\n                            fill: 'window',\n                            stroke: 'windowText',\n                            style: {\n                                color: 'windowText'\n                            }\n                        },\n                        select: {\n                            fill: '#444',\n                            stroke: 'windowText',\n                            style: {\n                                color: 'windowText'\n                            }\n                        }\n                    }\n                },\n                inputBoxBorderColor: 'windowText',\n                inputStyle: {\n                    backgroundColor: 'window',\n                    color: 'windowText'\n                },\n                labelStyle: {\n                    color: 'windowText'\n                }\n            },\n            navigator: {\n                handles: {\n                    backgroundColor: 'window',\n                    borderColor: 'windowText'\n                },\n                outlineColor: 'windowText',\n                maskFill: 'transparent',\n                series: {\n                    color: 'windowText',\n                    lineColor: 'windowText'\n                },\n                xAxis: {\n                    gridLineColor: 'windowText'\n                }\n            },\n            scrollbar: {\n                barBackgroundColor: '#444',\n                barBorderColor: 'windowText',\n                buttonArrowColor: 'windowText',\n                buttonBackgroundColor: 'window',\n                buttonBorderColor: 'windowText',\n                rifleColor: 'windowText',\n                trackBackgroundColor: 'window',\n                trackBorderColor: 'windowText'\n            }\n        };\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return theme;\n    });\n    _registerModule(_modules, 'Accessibility/Options/A11yDefaults.js', [], function () {\n        /* *\n         *\n         *  (c) 2009-2024 Ã˜ystein Moseng\n         *\n         *  Default options for accessibility.\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * Formatter callback for the accessibility announcement.\n         *\n         * @callback Highcharts.AccessibilityAnnouncementFormatter\n         *\n         * @param {Array<Highcharts.Series>} updatedSeries\n         * Array of all series that received updates. If an announcement is already\n         * queued, the series that received updates for that announcement are also\n         * included in this array.\n         *\n         * @param {Highcharts.Series} [addedSeries]\n         * This is provided if {@link Highcharts.Chart#addSeries} was called, and there\n         * is a new series. In that case, this argument is a reference to the new\n         * series.\n         *\n         * @param {Highcharts.Point} [addedPoint]\n         * This is provided if {@link Highcharts.Series#addPoint} was called, and there\n         * is a new point. In that case, this argument is a reference to the new point.\n         *\n         * @return {false|string}\n         * The function should return a string with the text to announce to the user.\n         * Return empty string to not announce anything. Return `false` to use the\n         * default announcement format.\n         */\n        /**\n         * @interface Highcharts.PointAccessibilityOptionsObject\n         */ /**\n        * Provide a description of the data point, announced to screen readers.\n        * @name Highcharts.PointAccessibilityOptionsObject#description\n        * @type {string|undefined}\n        * @requires modules/accessibility\n        * @since 7.1.0\n        */ /**\n        * Enable or disable exposing the point to assistive technology\n        * @name Highcharts.PointAccessibilityOptionsObject#enabled\n        * @type {boolean|undefined}\n        * @requires modules/accessibility\n        * @since 9.0.1\n        */\n        /* *\n         * @interface Highcharts.PointOptionsObject in parts/Point.ts\n         */ /**\n        * @name Highcharts.PointOptionsObject#accessibility\n        * @type {Highcharts.PointAccessibilityOptionsObject|undefined}\n        * @requires modules/accessibility\n        * @since 7.1.0\n        */\n        /**\n         * @callback Highcharts.ScreenReaderClickCallbackFunction\n         *\n         * @param {global.MouseEvent} evt\n         *        Mouse click event\n         *\n         * @return {void}\n         */\n        /**\n         * Creates a formatted string for the screen reader module.\n         *\n         * @callback Highcharts.ScreenReaderFormatterCallbackFunction<T>\n         *\n         * @param {T} context\n         *        Context to format\n         *\n         * @return {string}\n         *         Formatted string for the screen reader module.\n         */\n        const Options = {\n            /**\n             * Options for configuring accessibility for the chart. Requires the\n             * [accessibility module](https://code.highcharts.com/modules/accessibility.js)\n             * to be loaded. For a description of the module and information\n             * on its features, see\n             * [Highcharts Accessibility](https://www.highcharts.com/docs/accessibility/accessibility-module).\n             *\n             * @since        5.0.0\n             * @requires     modules/accessibility\n             * @optionparent accessibility\n             */\n            accessibility: {\n                /**\n                 * Enable accessibility functionality for the chart. For more\n                 * information on how to include these features, and why this is\n                 * recommended, see [Highcharts Accessibility](https://www.highcharts.com/docs/accessibility/accessibility-module).\n                 *\n                 * Highcharts will by default emit a warning to the console if\n                 * the [accessibility module](https://code.highcharts.com/modules/accessibility.js)\n                 * is not loaded. Setting this option to `false` will override\n                 * and silence the warning.\n                 *\n                 * Once the module is loaded, setting this option to `false`\n                 * will disable the module for this chart.\n                 *\n                 * @since 5.0.0\n                 */\n                enabled: true,\n                /**\n                 * Accessibility options for the screen reader information sections\n                 * added before and after the chart.\n                 *\n                 * @since 8.0.0\n                 */\n                screenReaderSection: {\n                    /**\n                     * Function to run upon clicking the \"View as Data Table\" link in\n                     * the screen reader region.\n                     *\n                     * By default Highcharts will insert and set focus to a data table\n                     * representation of the chart.\n                     *\n                     * @type      {Highcharts.ScreenReaderClickCallbackFunction}\n                     * @since 8.0.0\n                     * @apioption accessibility.screenReaderSection.onViewDataTableClick\n                     */\n                    /**\n                     * Function to run upon clicking the \"Play as sound\" button in\n                     * the screen reader region.\n                     *\n                     * By default Highcharts will call the `chart.sonify` function.\n                     *\n                     * @type      {Highcharts.ScreenReaderClickCallbackFunction}\n                     * @since 8.0.1\n                     * @apioption accessibility.screenReaderSection.onPlayAsSoundClick\n                     */\n                    /**\n                     * A formatter function to create the HTML contents of the hidden\n                     * screen reader information region before the chart. Receives one\n                     * argument, `chart`, referring to the chart object. Should return a\n                     * string with the HTML content of the region. By default this\n                     * returns an automatic description of the chart based on\n                     * [beforeChartFormat](#accessibility.screenReaderSection.beforeChartFormat).\n                     *\n                     * @type      {Highcharts.ScreenReaderFormatterCallbackFunction<Highcharts.Chart>}\n                     * @since 8.0.0\n                     * @apioption accessibility.screenReaderSection.beforeChartFormatter\n                     */\n                    /**\n                     * Format for the screen reader information region before the chart.\n                     * Supported HTML tags are `<h1-6>`, `<p>`, `<div>`, `<a>`, `<ul>`,\n                     * `<ol>`, `<li>`, and `<button>`. Attributes are not supported,\n                     * except for id on `<div>`, `<a>`, and `<button>`. Id is required\n                     * on `<a>` and `<button>` in the format `<tag id=\"abcd\">`. Numbers,\n                     * lower- and uppercase letters, \"-\" and \"#\" are valid characters in\n                     * IDs.\n                     *\n                     * The headingTagName is an auto-detected heading (h1-h6) that\n                     * corresponds to the heading level below the previous heading in\n                     * the DOM.\n                     *\n                     * Set to empty string to remove the region altogether.\n                     *\n                     * @since 8.0.0\n                     */\n                    beforeChartFormat: '<{headingTagName}>{chartTitle}</{headingTagName}>' +\n                        '<div>{typeDescription}</div>' +\n                        '<div>{chartSubtitle}</div>' +\n                        '<div>{chartLongdesc}</div>' +\n                        '<div>{playAsSoundButton}</div>' +\n                        '<div>{viewTableButton}</div>' +\n                        '<div>{xAxisDescription}</div>' +\n                        '<div>{yAxisDescription}</div>' +\n                        '<div>{annotationsTitle}{annotationsList}</div>',\n                    /**\n                     * A formatter function to create the HTML contents of the hidden\n                     * screen reader information region after the chart. Analogous to\n                     * [beforeChartFormatter](#accessibility.screenReaderSection.beforeChartFormatter).\n                     *\n                     * @type      {Highcharts.ScreenReaderFormatterCallbackFunction<Highcharts.Chart>}\n                     * @since 8.0.0\n                     * @apioption accessibility.screenReaderSection.afterChartFormatter\n                     */\n                    /**\n                     * Format for the screen reader information region after the chart.\n                     * Analogous to [beforeChartFormat](#accessibility.screenReaderSection.beforeChartFormat).\n                     *\n                     * @since 8.0.0\n                     */\n                    afterChartFormat: '{endOfChartMarker}',\n                    /**\n                     * Date format to use to describe range of datetime axes.\n                     *\n                     * For an overview of the replacement codes, see\n                     * [dateFormat](/class-reference/Highcharts.Time#dateFormat).\n                     *\n                     * @see [point.dateFormat](#accessibility.point.dateFormat)\n                     *\n                     * @since 8.0.0\n                     */\n                    axisRangeDateFormat: '%Y-%m-%d %H:%M:%S'\n                },\n                /**\n                 * Accessibility options global to all data series. Individual series\n                 * can also have specific [accessibility options](#plotOptions.series.accessibility)\n                 * set.\n                 *\n                 * @since 8.0.0\n                 */\n                series: {\n                    /**\n                     * Formatter function to use instead of the default for series\n                     * descriptions. Receives one argument, `series`, referring to the\n                     * series to describe. Should return a string with the description\n                     * of the series for a screen reader user. If `false` is returned,\n                     * the default formatter will be used for that series.\n                     *\n                     * @see [series.descriptionFormat](#accessibility.series.descriptionFormat)\n                     * @see [series.description](#plotOptions.series.description)\n                     *\n                     * @type      {Highcharts.ScreenReaderFormatterCallbackFunction<Highcharts.Series>}\n                     * @since 8.0.0\n                     * @apioption accessibility.series.descriptionFormatter\n                     */\n                    /**\n                     * Format to use for describing the data series group to assistive\n                     * technology - including screen readers.\n                     *\n                     * The series context and its subproperties are available under the\n                     * variable `{series}`, for example `{series.name}` for the series\n                     * name, and `{series.points.length}` for the number of data points.\n                     *\n                     * The chart context and its subproperties are available under the\n                     * variable `{chart}`, for example `{chart.series.length}` for the\n                     * number of series in the chart.\n                     *\n                     * `{seriesDescription}` refers to the automatic description of the\n                     * series type and number of points added by Highcharts by default.\n                     * `{authorDescription}` refers to the description added in\n                     * [series.description](#plotOptions.series.description) if one is\n                     * present. `{axisDescription}` refers to the description added if\n                     * the chart has multiple X or Y axes.\n                     *\n                     * Note that if [series.descriptionFormatter](#accessibility.series.descriptionFormatter)\n                     * is declared it will take precedence, and this option will be\n                     * overridden.\n                     *\n                     * @sample highcharts/accessibility/advanced-accessible\n                     *  Accessible low-medium-high chart\n                     *\n                     * @type      {string}\n                     * @since 10.1.0\n                     */\n                    descriptionFormat: '{seriesDescription}{authorDescription}{axisDescription}',\n                    /**\n                     * Whether or not to add series descriptions to charts with a single\n                     * series.\n                     *\n                     * @since 8.0.0\n                     */\n                    describeSingleSeries: false,\n                    /**\n                     * When a series contains more points than this, we no longer expose\n                     * information about individual points to screen readers.\n                     *\n                     * Set to `false` to disable.\n                     *\n                     * @type  {boolean|number}\n                     * @since 8.0.0\n                     */\n                    pointDescriptionEnabledThreshold: 200\n                },\n                /**\n                 * Options for descriptions of individual data points.\n                 *\n                 * @since 8.0.0\n                 */\n                point: {\n                    /**\n                     * Date format to use for points on datetime axes when describing\n                     * them to screen reader users.\n                     *\n                     * Defaults to the same format as in tooltip.\n                     *\n                     * For an overview of the replacement codes, see\n                     * [dateFormat](/class-reference/Highcharts.Time#dateFormat).\n                     *\n                     * @see [dateFormatter](#accessibility.point.dateFormatter)\n                     *\n                     * @type      {string}\n                     * @since 8.0.0\n                     * @apioption accessibility.point.dateFormat\n                     */\n                    /**\n                     * Formatter function to determine the date/time format used with\n                     * points on datetime axes when describing them to screen reader\n                     * users. Receives one argument, `point`, referring to the point\n                     * to describe. Should return a date format string compatible with\n                     * [dateFormat](/class-reference/Highcharts.Time#dateFormat).\n                     *\n                     * @see [dateFormat](#accessibility.point.dateFormat)\n                     *\n                     * @type      {Highcharts.ScreenReaderFormatterCallbackFunction<Highcharts.Point>}\n                     * @since 8.0.0\n                     * @apioption accessibility.point.dateFormatter\n                     */\n                    /**\n                     * Prefix to add to the values in the point descriptions. Uses\n                     * [tooltip.valuePrefix](#tooltip.valuePrefix) if not defined.\n                     *\n                     * @type        {string}\n                     * @since 8.0.0\n                     * @apioption   accessibility.point.valuePrefix\n                     */\n                    /**\n                     * Suffix to add to the values in the point descriptions. Uses\n                     * [tooltip.valueSuffix](#tooltip.valueSuffix) if not defined.\n                     *\n                     * @type        {string}\n                     * @since 8.0.0\n                     * @apioption   accessibility.point.valueSuffix\n                     */\n                    /**\n                     * Decimals to use for the values in the point descriptions. Uses\n                     * [tooltip.valueDecimals](#tooltip.valueDecimals) if not defined.\n                     *\n                     * @type        {number}\n                     * @since 8.0.0\n                     * @apioption   accessibility.point.valueDecimals\n                     */\n                    /**\n                     * A [format string](https://www.highcharts.com/docs/chart-concepts/labels-and-string-formatting)\n                     * to use instead of the default for point descriptions.\n                     *\n                     * The context of the format string is the point instance.\n                     *\n                     * As opposed to [accessibility.point.valueDescriptionFormat](#accessibility.point.valueDescriptionFormat),\n                     * this option replaces the whole description.\n                     *\n                     * @type      {string}\n                     * @since 11.1.0\n                     * @sample highcharts/demo/advanced-accessible\n                     *      Description format\n                     * @apioption accessibility.point.descriptionFormat\n                     */\n                    /**\n                     * Formatter function to use instead of the default for point\n                     * descriptions.\n                     *\n                     * Receives one argument, `point`, referring to the point to\n                     * describe. Should return a string with the description of the\n                     * point for a screen reader user. If `false` is returned, the\n                     * default formatter will be used for that point.\n                     *\n                     * Note: Prefer using [accessibility.point.valueDescriptionFormat](#accessibility.point.valueDescriptionFormat)\n                     * instead if possible, as default functionality such as describing\n                     * annotations will be preserved.\n                     *\n                     * @see [accessibility.point.valueDescriptionFormat](#accessibility.point.valueDescriptionFormat)\n                     * @see [point.accessibility.description](#series.line.data.accessibility.description)\n                     *\n                     * @type      {Highcharts.ScreenReaderFormatterCallbackFunction<Highcharts.Point>}\n                     * @since 8.0.0\n                     * @apioption accessibility.point.descriptionFormatter\n                     */\n                    /**\n                     * Format to use for describing the values of data points\n                     * to assistive technology - including screen readers.\n                     * The point context is available as `{point}`.\n                     *\n                     * Other available context variables include `{index}`, `{value}`, and `{xDescription}`.\n                     *\n                     * Additionally, the series name, annotation info, and\n                     * description added in `point.accessibility.description`\n                     * is added by default if relevant. To override this, use the\n                     * [accessibility.point.descriptionFormatter](#accessibility.point.descriptionFormatter)\n                     * option.\n                     *\n                     * @see [point.accessibility.description](#series.line.data.accessibility.description)\n                     * @see [accessibility.point.descriptionFormatter](#accessibility.point.descriptionFormatter)\n                     *\n                     * @type      {string}\n                     * @since 8.0.1\n                     */\n                    valueDescriptionFormat: '{xDescription}{separator}{value}.',\n                    /**\n                     * Whether or not to describe points with the value `null` to\n                     * assistive technology, such as screen readers.\n                     *\n                     * @sample {highmaps} maps/demo/all-areas-as-null\n                     *         Accessible map with null points\n                     *\n                     * @type      {boolean}\n                     * @since 10.1.0\n                     */\n                    describeNull: true\n                },\n                /**\n                 * Amount of landmarks/regions to create for screen reader users. More\n                 * landmarks can make navigation with screen readers easier, but can\n                 * be distracting if there are lots of charts on the page. Three modes\n                 * are available:\n                 *  - `all`: Adds regions for all series, legend, information\n                 *      region.\n                 *  - `one`: Adds a single landmark per chart.\n                 *  - `disabled`: No landmarks are added.\n                 *\n                 * @since 7.1.0\n                 * @validvalue [\"all\", \"one\", \"disabled\"]\n                 */\n                landmarkVerbosity: 'all',\n                /**\n                 * Link the chart to an HTML element describing the contents of the\n                 * chart.\n                 *\n                 * It is always recommended to describe charts using visible text, to\n                 * improve SEO as well as accessibility for users with disabilities.\n                 * This option lets an HTML element with a description be linked to the\n                 * chart, so that screen reader users can connect the two.\n                 *\n                 * By setting this option to a string, Highcharts runs the string as an\n                 * HTML selector query on the entire document. If there is only a single\n                 * match, this element is linked to the chart. The content of the linked\n                 * element will be included in the chart description for screen reader\n                 * users.\n                 *\n                 * By default, the chart looks for an adjacent sibling element with the\n                 * `highcharts-description` class.\n                 *\n                 * The feature can be disabled by setting the option to an empty string,\n                 * or overridden by providing the\n                 * [accessibility.description](#accessibility.description) option.\n                 * Alternatively, the HTML element to link can be passed in directly as\n                 * an HTML node.\n                 *\n                 * If you need the description to be part of the exported image,\n                 * consider using the [caption](#caption) feature.\n                 *\n                 * If you need the description to be hidden visually, use the\n                 * [accessibility.description](#accessibility.description) option.\n                 *\n                 * @see [caption](#caption)\n                 * @see [description](#accessibility.description)\n                 * @see [typeDescription](#accessibility.typeDescription)\n                 *\n                 * @sample highcharts/accessibility/accessible-line\n                 *         Accessible line chart\n                 *\n                 * @type  {string|Highcharts.HTMLDOMElement}\n                 * @since 8.0.0\n                 */\n                linkedDescription: '*[data-highcharts-chart=\"{index}\"] + .highcharts-description', // eslint-disable-line\n                /**\n                 * A hook for adding custom components to the accessibility module.\n                 * Should be an object mapping component names to instances of classes\n                 * inheriting from the Highcharts.AccessibilityComponent base class.\n                 * Remember to add the component to the\n                 * [keyboardNavigation.order](#accessibility.keyboardNavigation.order)\n                 * for the keyboard navigation to be usable.\n                 *\n                 * @sample highcharts/accessibility/custom-component\n                 *         Custom accessibility component\n                 *\n                 * @type      {*}\n                 * @since     7.1.0\n                 * @apioption accessibility.customComponents\n                 */\n                /**\n                 * Theme to apply to the chart when Windows High Contrast Mode is\n                 * detected. By default, a high contrast theme matching the high\n                 * contrast system colors is used.\n                 *\n                 * @type      {*}\n                 * @since     7.1.3\n                 * @apioption accessibility.highContrastTheme\n                 */\n                /**\n                 * Controls how [highContrastTheme](#accessibility.highContrastTheme)\n                 * is applied.\n                 *\n                 * The default option is `auto`, which applies the high contrast theme\n                 * the user's system has a high contrast theme active.\n                 *\n                 * @since 11.4.0\n                 */\n                highContrastMode: 'auto',\n                /**\n                 * A text description of the chart.\n                 *\n                 * **Note: Prefer using [linkedDescription](#accessibility.linkedDescription)\n                 * or [caption](#caption.text) instead.**\n                 *\n                 * If the Accessibility module is loaded, this option is included by\n                 * default as a long description of the chart in the hidden screen\n                 * reader information region.\n                 *\n                 * Note: Since Highcharts now supports captions and linked descriptions,\n                 * it is preferred to define the description using those methods, as a\n                 * visible caption/description benefits all users. If the\n                 * `accessibility.description` option is defined, the linked description\n                 * is ignored, and the caption is hidden from screen reader users.\n                 *\n                 * @see [linkedDescription](#accessibility.linkedDescription)\n                 * @see [caption](#caption)\n                 * @see [typeDescription](#accessibility.typeDescription)\n                 *\n                 * @type      {string}\n                 * @since     5.0.0\n                 * @apioption accessibility.description\n                 */\n                /**\n                 * A text description of the chart type.\n                 *\n                 * If the Accessibility module is loaded, this will be included in the\n                 * description of the chart in the screen reader information region.\n                 *\n                 * Highcharts will by default attempt to guess the chart type, but for\n                 * more complex charts it is recommended to specify this property for\n                 * clarity.\n                 *\n                 * @type      {string}\n                 * @since     5.0.0\n                 * @apioption accessibility.typeDescription\n                 */\n                /**\n                 * Options for keyboard navigation.\n                 *\n                 * @declare Highcharts.KeyboardNavigationOptionsObject\n                 * @since   5.0.0\n                 */\n                keyboardNavigation: {\n                    /**\n                     * Enable keyboard navigation for the chart.\n                     *\n                     * @since 5.0.0\n                     */\n                    enabled: true,\n                    /**\n                     * Options for the focus border drawn around elements while\n                     * navigating through them.\n                     *\n                     * @sample highcharts/accessibility/custom-focus\n                     *         Custom focus ring\n                     *\n                     * @declare Highcharts.KeyboardNavigationFocusBorderOptionsObject\n                     * @since   6.0.3\n                     */\n                    focusBorder: {\n                        /**\n                         * Enable/disable focus border for chart.\n                         *\n                         * @since 6.0.3\n                         */\n                        enabled: true,\n                        /**\n                         * Hide the browser's default focus indicator.\n                         *\n                         * @since 6.0.4\n                         */\n                        hideBrowserFocusOutline: true,\n                        /**\n                         * Style options for the focus border drawn around elements\n                         * while navigating through them. Note that some browsers in\n                         * addition draw their own borders for focused elements. These\n                         * automatic borders cannot be styled by Highcharts.\n                         *\n                         * In styled mode, the border is given the\n                         * `.highcharts-focus-border` class.\n                         *\n                         * @type    {Highcharts.CSSObject}\n                         * @since   6.0.3\n                         */\n                        style: {\n                            /** @internal */\n                            color: \"#334eff\" /* Palette.highlightColor80 */,\n                            /** @internal */\n                            lineWidth: 2,\n                            /** @internal */\n                            borderRadius: 3\n                        },\n                        /**\n                         * Focus border margin around the elements.\n                         *\n                         * @since 6.0.3\n                         */\n                        margin: 2\n                    },\n                    /**\n                     * Order of tab navigation in the chart. Determines which elements\n                     * are tabbed to first. Available elements are: `series`, `zoom`,\n                     * `rangeSelector`, `navigator`, `chartMenu`, `legend` and `container`.\n                     * In addition, any custom components can be added here. Adding\n                     * `container` first in order will make the keyboard focus stop on\n                     * the chart container first, requiring the user to tab again to\n                     * enter the chart.\n                     *\n                     * @type  {Array<string>}\n                     * @since 7.1.0\n                     */\n                    order: [\n                        'series', 'zoom', 'rangeSelector',\n                        'navigator', 'legend', 'chartMenu'\n                    ],\n                    /**\n                     * Whether or not to wrap around when reaching the end of arrow-key\n                     * navigation for an element in the chart.\n                     * @since 7.1.0\n                     */\n                    wrapAround: true,\n                    /**\n                     * Options for the keyboard navigation of data points and series.\n                     *\n                     * @declare Highcharts.KeyboardNavigationSeriesNavigationOptionsObject\n                     * @since 8.0.0\n                     */\n                    seriesNavigation: {\n                        /**\n                         * Set the keyboard navigation mode for the chart. Can be\n                         * \"normal\" or \"serialize\". In normal mode, left/right arrow\n                         * keys move between points in a series, while up/down arrow\n                         * keys move between series. Up/down navigation acts\n                         * intelligently to figure out which series makes sense to move\n                         * to from any given point.\n                         *\n                         * In \"serialize\" mode, points are instead navigated as a single\n                         * list. Left/right behaves as in \"normal\" mode. Up/down arrow\n                         * keys will behave like left/right. This can be useful for\n                         * unifying navigation behavior with/without screen readers\n                         * enabled.\n                         *\n                         * @type       {string}\n                         * @default    normal\n                         * @since 8.0.0\n                         * @validvalue [\"normal\", \"serialize\"]\n                         * @apioption  accessibility.keyboardNavigation.seriesNavigation.mode\n                         */\n                        /**\n                         * Skip null points when navigating through points with the\n                         * keyboard.\n                         *\n                         * @since 8.0.0\n                         */\n                        skipNullPoints: true,\n                        /**\n                         * When a series contains more points than this, we no longer\n                         * allow keyboard navigation for it.\n                         *\n                         * Set to `false` to disable.\n                         *\n                         * @type  {boolean|number}\n                         * @since 8.0.0\n                         */\n                        pointNavigationEnabledThreshold: false,\n                        /**\n                         * Remember which point was focused even after navigating away\n                         * from the series, so that when navigating back to the series\n                         * you start at the last focused point.\n                         *\n                         * @type  {boolean}\n                         * @since 10.1.0\n                         */\n                        rememberPointFocus: false\n                    }\n                },\n                /**\n                 * Options for announcing new data to screen reader users. Useful\n                 * for dynamic data applications and drilldown.\n                 *\n                 * Keep in mind that frequent announcements will not be useful to\n                 * users, as they won't have time to explore the new data. For these\n                 * applications, consider making snapshots of the data accessible, and\n                 * do the announcements in batches.\n                 *\n                 * @declare Highcharts.AccessibilityAnnounceNewDataOptionsObject\n                 * @since   7.1.0\n                 */\n                announceNewData: {\n                    /**\n                     * Optional formatter callback for the announcement. Receives\n                     * up to three arguments. The first argument is always an array\n                     * of all series that received updates. If an announcement is\n                     * already queued, the series that received updates for that\n                     * announcement are also included in this array. The second\n                     * argument is provided if `chart.addSeries` was called, and\n                     * there is a new series. In that case, this argument is a\n                     * reference to the new series. The third argument, similarly,\n                     * is provided if `series.addPoint` was called, and there is a\n                     * new point. In that case, this argument is a reference to the\n                     * new point.\n                     *\n                     * The function should return a string with the text to announce\n                     * to the user. Return empty string to not announce anything.\n                     * Return `false` to use the default announcement format.\n                     *\n                     * @sample highcharts/accessibility/custom-dynamic\n                     *         High priority live alerts\n                     *\n                     * @type      {Highcharts.AccessibilityAnnouncementFormatter}\n                     * @apioption accessibility.announceNewData.announcementFormatter\n                     */\n                    /**\n                     * Enable announcing new data to screen reader users\n                     * @sample highcharts/accessibility/accessible-dynamic\n                     *         Dynamic data accessible\n                     */\n                    enabled: false,\n                    /**\n                     * Minimum interval between announcements in milliseconds. If\n                     * new data arrives before this amount of time has passed, it is\n                     * queued for announcement. If another new data event happens\n                     * while an announcement is queued, the queued announcement is\n                     * dropped, and the latest announcement is queued instead. Set\n                     * to 0 to allow all announcements, but be warned that frequent\n                     * announcements are disturbing to users.\n                     */\n                    minAnnounceInterval: 5000,\n                    /**\n                     * Choose whether or not the announcements should interrupt the\n                     * screen reader. If not enabled, the user will be notified once\n                     * idle. It is recommended not to enable this setting unless\n                     * there is a specific reason to do so.\n                     */\n                    interruptUser: false\n                }\n            },\n            /**\n             * Accessibility options for a data point.\n             *\n             * @declare   Highcharts.PointAccessibilityOptionsObject\n             * @since     7.1.0\n             * @apioption series.line.data.accessibility\n             */\n            /**\n             * Provide a description of the data point, announced to screen readers.\n             *\n             * @type      {string}\n             * @since     7.1.0\n             * @apioption series.line.data.accessibility.description\n             */\n            /**\n             * Set to false to disable accessibility functionality for a specific point.\n             * The point will not be included in keyboard navigation, and will not be\n             * exposed to assistive technology.\n             *\n             * @type      {boolean}\n             * @since 9.0.1\n             * @apioption series.line.data.accessibility.enabled\n             */\n            /**\n             * Accessibility options for a series.\n             *\n             * @declare    Highcharts.SeriesAccessibilityOptionsObject\n             * @since      7.1.0\n             * @requires   modules/accessibility\n             * @apioption  plotOptions.series.accessibility\n             */\n            /**\n             * Enable/disable accessibility functionality for a specific series.\n             *\n             * @type       {boolean}\n             * @since      7.1.0\n             * @apioption  plotOptions.series.accessibility.enabled\n             */\n            /**\n             * Provide a description of the series, announced to screen readers.\n             *\n             * @type       {string}\n             * @since      7.1.0\n             * @apioption  plotOptions.series.accessibility.description\n             */\n            /**\n             * Format to use for describing the data series group to assistive\n             * technology - including screen readers.\n             *\n             * @see [series.descriptionFormat](#accessibility.series.descriptionFormat)\n             * @type       {string}\n             * @since 11.0.0\n             * @apioption  plotOptions.series.accessibility.descriptionFormat\n             */\n            /**\n             * Expose only the series element to screen readers, not its points.\n             *\n             * @type       {boolean}\n             * @since      7.1.0\n             * @apioption  plotOptions.series.accessibility.exposeAsGroupOnly\n             */\n            /**\n             * Point accessibility options for a series.\n             *\n             * @extends    accessibility.point\n             * @since 9.3.0\n             * @requires   modules/accessibility\n             * @apioption  plotOptions.series.accessibility.point\n             */\n            /**\n             * Formatter function to use instead of the default for point\n             * descriptions. Same as `accessibility.point.descriptionFormatter`, but\n             * applies to a series instead of the whole chart.\n             *\n             * Note: Prefer using [accessibility.point.valueDescriptionFormat](#plotOptions.series.accessibility.point.valueDescriptionFormat)\n             * instead if possible, as default functionality such as describing\n             * annotations will be preserved.\n             *\n             * @see [accessibility.point.valueDescriptionFormat](#plotOptions.series.accessibility.point.valueDescriptionFormat)\n             * @see [point.accessibility.description](#series.line.data.accessibility.description)\n             * @see [accessibility.point.descriptionFormatter](#accessibility.point.descriptionFormatter)\n             *\n             * @type      {Highcharts.ScreenReaderFormatterCallbackFunction<Highcharts.Point>}\n             * @since 9.3.0\n             * @apioption plotOptions.series.accessibility.point.descriptionFormatter\n             */\n            /**\n             * Keyboard navigation for a series\n             *\n             * @declare    Highcharts.SeriesAccessibilityKeyboardNavigationOptionsObject\n             * @since      7.1.0\n             * @apioption  plotOptions.series.accessibility.keyboardNavigation\n             */\n            /**\n             * Enable/disable keyboard navigation support for a specific series.\n             *\n             * @type       {boolean}\n             * @since      7.1.0\n             * @apioption  plotOptions.series.accessibility.keyboardNavigation.enabled\n             */\n            /**\n             * Accessibility options for an annotation label.\n             *\n             * @declare    Highcharts.AnnotationLabelAccessibilityOptionsObject\n             * @since 8.0.1\n             * @requires   modules/accessibility\n             * @apioption  annotations.labelOptions.accessibility\n             */\n            /**\n             * Description of an annotation label for screen readers and other assistive\n             * technology.\n             *\n             * @type       {string}\n             * @since 8.0.1\n             * @apioption  annotations.labelOptions.accessibility.description\n             */\n            /**\n             * Accessibility options for an axis. Requires the accessibility module.\n             *\n             * @declare    Highcharts.AxisAccessibilityOptionsObject\n             * @since      7.1.0\n             * @requires   modules/accessibility\n             * @apioption  xAxis.accessibility\n             */\n            /**\n             * Enable axis accessibility features, including axis information in the\n             * screen reader information region. If this is disabled on the xAxis, the\n             * x values are not exposed to screen readers for the individual data points\n             * by default.\n             *\n             * @type       {boolean}\n             * @since      7.1.0\n             * @apioption  xAxis.accessibility.enabled\n             */\n            /**\n             * Description for an axis to expose to screen reader users.\n             *\n             * @type       {string}\n             * @since      7.1.0\n             * @apioption  xAxis.accessibility.description\n             */\n            /**\n             * Range description for an axis. Overrides the default range description.\n             * Set to empty to disable range description for this axis.\n             *\n             * @type       {string}\n             * @since      7.1.0\n             * @apioption  xAxis.accessibility.rangeDescription\n             */\n            /**\n             * @optionparent legend\n             */\n            legend: {\n                /**\n                 * Accessibility options for the legend. Requires the Accessibility\n                 * module.\n                 *\n                 * @since     7.1.0\n                 * @requires  modules/accessibility\n                 */\n                accessibility: {\n                    /**\n                     * Enable accessibility support for the legend.\n                     *\n                     * @since  7.1.0\n                     */\n                    enabled: true,\n                    /**\n                     * Options for keyboard navigation for the legend.\n                     *\n                     * @since     7.1.0\n                     * @requires  modules/accessibility\n                     */\n                    keyboardNavigation: {\n                        /**\n                         * Enable keyboard navigation for the legend.\n                         *\n                         * @see [accessibility.keyboardNavigation](#accessibility.keyboardNavigation.enabled)\n                         *\n                         * @since  7.1.0\n                         */\n                        enabled: true\n                    }\n                }\n            },\n            /**\n             * @optionparent exporting\n             */\n            exporting: {\n                /**\n                 * Accessibility options for the exporting menu. Requires the\n                 * Accessibility module.\n                 *\n                 * @since    7.1.0\n                 * @requires modules/accessibility\n                 */\n                accessibility: {\n                    /**\n                     * Enable accessibility support for the export menu.\n                     *\n                     * @since 7.1.0\n                     */\n                    enabled: true\n                }\n            },\n            /**\n             * @optionparent navigator\n             */\n            navigator: {\n                /**\n                 * Accessibility options for the navigator. Requires the\n                 * Accessibility module.\n                 *\n                 * @since 11.2.0\n                 * @requires modules/accessibility\n                 */\n                accessibility: {\n                    /**\n                     * Enable accessibility support for the navigator.\n                     *\n                     * @since 11.2.0\n                     */\n                    enabled: true\n                }\n            }\n        };\n\n        return Options;\n    });\n    _registerModule(_modules, 'Accessibility/Options/LangDefaults.js', [], function () {\n        /* *\n         *\n         *  (c) 2009-2024 Ã˜ystein Moseng\n         *\n         *  Default lang/i18n options for accessibility.\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        const langOptions = {\n            /**\n             * Configure the accessibility strings in the chart. Requires the\n             * [accessibility module](https://code.highcharts.com/modules/accessibility.js)\n             * to be loaded. For a description of the module and information on its\n             * features, see\n             * [Highcharts Accessibility](https://www.highcharts.com/docs/chart-concepts/accessibility).\n             *\n             * The lang options use [Format Strings](https://www.highcharts.com/docs/chart-concepts/labels-and-string-formatting#format-strings)\n             * with variables that are replaced at run time. These variables should be\n             * used when available, to avoid duplicating text that is defined elsewhere.\n             *\n             * For more dynamic control over the accessibility functionality, see\n             * [accessibility.point.descriptionFormatter](#accessibility.point.descriptionFormatter),\n             * [accessibility.series.descriptionFormatter](#accessibility.series.descriptionFormatter),\n             * and\n             * [accessibility.screenReaderSection.beforeChartFormatter](#accessibility.screenReaderSection.beforeChartFormatter).\n             *\n             * @since        6.0.6\n             * @optionparent lang.accessibility\n             */\n            accessibility: {\n                /**\n                 * @deprecated 10.2.1\n                 * @type       {string}\n                 * @apioption  lang.accessibility.resetZoomButton\n                 */\n                /**\n                 * Default title of the chart for assistive technology, for charts\n                 * without a chart title.\n                 */\n                defaultChartTitle: 'Chart',\n                /**\n                 * Accessible label for the chart container HTML element.\n                 * `{title}` refers to the chart title.\n                 */\n                chartContainerLabel: '{title}. Highcharts interactive chart.',\n                /**\n                 * Accessible label for the chart SVG element.\n                 * `{chartTitle}` refers to the chart title.\n                 */\n                svgContainerLabel: 'Interactive chart',\n                /**\n                 * Accessible label for the drill-up button.\n                 * `{buttonText}` refers to the visual text on the button.\n                 */\n                drillUpButton: '{buttonText}',\n                /**\n                 * Accessible label for the chart credits.\n                 * `{creditsStr}` refers to the visual text in the credits.\n                 */\n                credits: 'Chart credits: {creditsStr}',\n                /**\n                 * Thousands separator to use when formatting numbers for screen\n                 * readers. Note that many screen readers will not handle space as a\n                 * thousands separator, and will consider \"11 700\" as two numbers.\n                 *\n                 * Set to `null` to use the separator defined in\n                 * [lang.thousandsSep](lang.thousandsSep).\n                 *\n                 * @since 7.1.0\n                 */\n                thousandsSep: ',',\n                /**\n                 * Title element text for the chart SVG element. Leave this\n                 * empty to disable adding the title element. Browsers will display\n                 * this content when hovering over elements in the chart. Assistive\n                 * technology may use this element to label the chart.\n                 *\n                 * @since 6.0.8\n                 */\n                svgContainerTitle: '',\n                /**\n                 * Set a label on the container wrapping the SVG.\n                 *\n                 * @see [chartContainerLabel](#lang.accessibility.chartContainerLabel)\n                 *\n                 * @since 8.0.0\n                 */\n                graphicContainerLabel: '',\n                /**\n                 * Language options for the screen reader information sections added\n                 * before and after the charts.\n                 *\n                 * @since 8.0.0\n                 */\n                screenReaderSection: {\n                    beforeRegionLabel: '',\n                    afterRegionLabel: '',\n                    /**\n                     * Language options for annotation descriptions.\n                     *\n                     * @since 8.0.1\n                     */\n                    annotations: {\n                        heading: 'Chart annotations summary',\n                        descriptionSinglePoint: ('{annotationText}. Related to {annotationPoint}'),\n                        descriptionMultiplePoints: ('{annotationText}. Related to {annotationPoint}' +\n                            '{#each additionalAnnotationPoints}' +\n                            ', also related to {this}' +\n                            '{/each}'),\n                        descriptionNoPoints: '{annotationText}'\n                    },\n                    /**\n                     * Label for the end of the chart. Announced by screen readers.\n                     *\n                     * @since 8.0.0\n                     */\n                    endOfChartMarker: 'End of interactive chart.'\n                },\n                /**\n                 * Language options for sonification.\n                 *\n                 * @since 8.0.1\n                 */\n                sonification: {\n                    playAsSoundButtonText: 'Play as sound, {chartTitle}',\n                    playAsSoundClickAnnouncement: 'Play'\n                },\n                /**\n                 * Language options for accessibility of the legend.\n                 *\n                 * @since 8.0.0\n                 */\n                legend: {\n                    /**\n                     * Accessible label for the legend, for charts where there is no\n                     * legend title defined.\n                     */\n                    legendLabelNoTitle: 'Toggle series visibility, {chartTitle}',\n                    /**\n                     * Accessible label for the legend, for charts where there is a\n                     * legend title defined. `{legendTitle}` refers to the visual text\n                     * in the legend title.\n                     */\n                    legendLabel: 'Chart legend: {legendTitle}',\n                    /**\n                     * Accessible label for individual legend items. `{itemName}` refers\n                     * to the visual text in the legend for that item.\n                     */\n                    legendItem: 'Show {itemName}'\n                },\n                /**\n                 * Chart and map zoom accessibility language options.\n                 *\n                 * @since 8.0.0\n                 */\n                zoom: {\n                    mapZoomIn: 'Zoom chart',\n                    mapZoomOut: 'Zoom out chart',\n                    resetZoomButton: 'Reset zoom'\n                },\n                /**\n                 * Range selector language options for accessibility.\n                 *\n                 * @since 8.0.0\n                 */\n                rangeSelector: {\n                    dropdownLabel: '{rangeTitle}',\n                    minInputLabel: 'Select start date.',\n                    maxInputLabel: 'Select end date.',\n                    clickButtonAnnouncement: 'Viewing {axisRangeDescription}'\n                },\n                /**\n                 * Navigator language options for accessibility.\n                 *\n                 * @since 11.2.0\n                 */\n                navigator: {\n                    /**\n                     * Label for the navigator handles.\n                     *\n                     * Receives `handleIx` and `chart` as context.\n                     * `handleIx` refers to the index of the navigator handle.\n                     */\n                    handleLabel: '{#eq handleIx 0}Start, percent{else}End, percent{/eq}',\n                    /**\n                     * Label for the navigator region.\n                     *\n                     * Receives `chart` as context.\n                     */\n                    groupLabel: 'Axis zoom',\n                    /**\n                     * Announcement for assistive technology when navigator values\n                     * are changed.\n                     *\n                     * Receives `axisRangeDescription` and `chart` as context.\n                     * `axisRangeDescription` corresponds to the range description\n                     * defined in [lang.accessibility.axis](#lang.accessibility.axis)\n                     */\n                    changeAnnouncement: '{axisRangeDescription}'\n                },\n                /**\n                 * Accessibility language options for the data table.\n                 *\n                 * @since 8.0.0\n                 */\n                table: {\n                    viewAsDataTableButtonText: 'View as data table, {chartTitle}',\n                    tableSummary: 'Table representation of chart.'\n                },\n                /**\n                 * Default announcement for new data in charts. If addPoint or\n                 * addSeries is used, and only one series/point is added, the\n                 * `newPointAnnounce` and `newSeriesAnnounce` strings are used.\n                 * The `...Single` versions will be used if there is only one chart\n                 * on the page, and the `...Multiple` versions will be used if there\n                 * are multiple charts on the page. For all other new data events,\n                 * the `newDataAnnounce` string will be used.\n                 *\n                 * @since 7.1.0\n                 */\n                announceNewData: {\n                    newDataAnnounce: 'Updated data for chart {chartTitle}',\n                    newSeriesAnnounceSingle: 'New data series: {seriesDesc}',\n                    newPointAnnounceSingle: 'New data point: {pointDesc}',\n                    newSeriesAnnounceMultiple: 'New data series in chart {chartTitle}: {seriesDesc}',\n                    newPointAnnounceMultiple: 'New data point in chart {chartTitle}: {pointDesc}'\n                },\n                /**\n                 * Descriptions of lesser known series types. The relevant\n                 * description is added to the screen reader information region\n                 * when these series types are used.\n                 *\n                 * @since 6.0.6\n                 */\n                seriesTypeDescriptions: {\n                    boxplot: 'Box plot charts are typically used to display ' +\n                        'groups of statistical data. Each data point in the ' +\n                        'chart can have up to 5 values: minimum, lower quartile, ' +\n                        'median, upper quartile, and maximum.',\n                    arearange: 'Arearange charts are line charts displaying a ' +\n                        'range between a lower and higher value for each point.',\n                    areasplinerange: 'These charts are line charts displaying a ' +\n                        'range between a lower and higher value for each point.',\n                    bubble: 'Bubble charts are scatter charts where each data ' +\n                        'point also has a size value.',\n                    columnrange: 'Columnrange charts are column charts ' +\n                        'displaying a range between a lower and higher value for ' +\n                        'each point.',\n                    errorbar: 'Errorbar series are used to display the ' +\n                        'variability of the data.',\n                    funnel: 'Funnel charts are used to display reduction of data ' +\n                        'in stages.',\n                    pyramid: 'Pyramid charts consist of a single pyramid with ' +\n                        'item heights corresponding to each point value.',\n                    waterfall: 'A waterfall chart is a column chart where each ' +\n                        'column contributes towards a total end value.'\n                },\n                /**\n                 * Chart type description strings. This is added to the chart\n                 * information region.\n                 *\n                 * If there is only a single series type used in the chart, we use\n                 * the format string for the series type, or default if missing.\n                 * There is one format string for cases where there is only a single\n                 * series in the chart, and one for multiple series of the same\n                 * type.\n                 *\n                 * @since 6.0.6\n                 */\n                chartTypes: {\n                    /* eslint-disable max-len */\n                    emptyChart: 'Empty chart',\n                    mapTypeDescription: 'Map of {mapTitle} with {numSeries} data series.',\n                    unknownMap: 'Map of unspecified region with {numSeries} data series.',\n                    combinationChart: 'Combination chart with {numSeries} data series.',\n                    defaultSingle: 'Chart with {numPoints} data ' +\n                        '{#eq numPoints 1}point{else}points{/eq}.',\n                    defaultMultiple: 'Chart with {numSeries} data series.',\n                    splineSingle: 'Line chart with {numPoints} data ' +\n                        '{#eq numPoints 1}point{else}points{/eq}.',\n                    splineMultiple: 'Line chart with {numSeries} lines.',\n                    lineSingle: 'Line chart with {numPoints} data ' +\n                        '{#eq numPoints 1}point{else}points{/eq}.',\n                    lineMultiple: 'Line chart with {numSeries} lines.',\n                    columnSingle: 'Bar chart with {numPoints} ' +\n                        '{#eq numPoints 1}bar{else}bars{/eq}.',\n                    columnMultiple: 'Bar chart with {numSeries} data series.',\n                    barSingle: 'Bar chart with {numPoints} ' +\n                        '{#eq numPoints 1}bar{else}bars{/eq}.',\n                    barMultiple: 'Bar chart with {numSeries} data series.',\n                    pieSingle: 'Pie chart with {numPoints} ' +\n                        '{#eq numPoints 1}slice{else}slices{/eq}.',\n                    pieMultiple: 'Pie chart with {numSeries} pies.',\n                    scatterSingle: 'Scatter chart with {numPoints} ' +\n                        '{#eq numPoints 1}point{else}points{/eq}.',\n                    scatterMultiple: 'Scatter chart with {numSeries} data series.',\n                    boxplotSingle: 'Boxplot with {numPoints} ' +\n                        '{#eq numPoints 1}box{else}boxes{/eq}.',\n                    boxplotMultiple: 'Boxplot with {numSeries} data series.',\n                    bubbleSingle: 'Bubble chart with {numPoints} ' +\n                        '{#eq numPoints 1}bubbles{else}bubble{/eq}.',\n                    bubbleMultiple: 'Bubble chart with {numSeries} data series.'\n                }, /* eslint-enable max-len */\n                /**\n                 * Axis description format strings.\n                 *\n                 * @since 6.0.6\n                 */\n                axis: {\n                    /* eslint-disable max-len */\n                    xAxisDescriptionSingular: 'The chart has 1 X axis displaying {names[0]}. {ranges[0]}',\n                    xAxisDescriptionPlural: 'The chart has {numAxes} X axes displaying {#each names}{#unless @first},{/unless}{#if @last} and{/if} {this}{/each}.',\n                    yAxisDescriptionSingular: 'The chart has 1 Y axis displaying {names[0]}. {ranges[0]}',\n                    yAxisDescriptionPlural: 'The chart has {numAxes} Y axes displaying {#each names}{#unless @first},{/unless}{#if @last} and{/if} {this}{/each}.',\n                    timeRangeDays: 'Data range: {range} days.',\n                    timeRangeHours: 'Data range: {range} hours.',\n                    timeRangeMinutes: 'Data range: {range} minutes.',\n                    timeRangeSeconds: 'Data range: {range} seconds.',\n                    rangeFromTo: 'Data ranges from {rangeFrom} to {rangeTo}.',\n                    rangeCategories: 'Data range: {numCategories} categories.'\n                }, /* eslint-enable max-len */\n                /**\n                 * Exporting menu format strings for accessibility module.\n                 *\n                 * @since 6.0.6\n                 */\n                exporting: {\n                    chartMenuLabel: 'Chart menu',\n                    menuButtonLabel: 'View chart menu, {chartTitle}'\n                },\n                /**\n                 * Lang configuration for different series types. For more dynamic\n                 * control over the series element descriptions, see\n                 * [accessibility.seriesDescriptionFormatter](#accessibility.seriesDescriptionFormatter).\n                 *\n                 * @since 6.0.6\n                 */\n                series: {\n                    /**\n                     * Lang configuration for the series main summary. Each series\n                     * type has two modes:\n                     *\n                     * 1. This series type is the only series type used in the\n                     *    chart\n                     *\n                     * 2. This is a combination chart with multiple series types\n                     *\n                     * If a definition does not exist for the specific series type\n                     * and mode, the 'default' lang definitions are used.\n                     *\n                     * Chart and its subproperties can be accessed with the `{chart}` variable.\n                     * The series and its subproperties can be accessed with the `{series}` variable.\n                     *\n                     * The series index (starting from 1) can be accessed with the `{seriesNumber}` variable.\n                     *\n                     * @since 6.0.6\n                     */\n                    summary: {\n                        /* eslint-disable max-len */\n                        'default': '{series.name}, series {seriesNumber} of {chart.series.length} with {series.points.length} data {#eq series.points.length 1}point{else}points{/eq}.',\n                        defaultCombination: '{series.name}, series {seriesNumber} of {chart.series.length} with {series.points.length} data {#eq series.points.length 1}point{else}points{/eq}.',\n                        line: '{series.name}, line {seriesNumber} of {chart.series.length} with {series.points.length} data {#eq series.points.length 1}point{else}points{/eq}.',\n                        lineCombination: '{series.name}, series {seriesNumber} of {chart.series.length}. Line with {series.points.length} data {#eq series.points.length 1}point{else}points{/eq}.',\n                        spline: '{series.name}, line {seriesNumber} of {chart.series.length} with {series.points.length} data {#eq series.points.length 1}point{else}points{/eq}.',\n                        splineCombination: '{series.name}, series {seriesNumber} of {chart.series.length}. Line with {series.points.length} data {#eq series.points.length 1}point{else}points{/eq}.',\n                        column: '{series.name}, bar series {seriesNumber} of {chart.series.length} with {series.points.length} {#eq series.points.length 1}bar{else}bars{/eq}.',\n                        columnCombination: '{series.name}, series {seriesNumber} of {chart.series.length}. Bar series with {series.points.length} {#eq series.points.length 1}bar{else}bars{/eq}.',\n                        bar: '{series.name}, bar series {seriesNumber} of {chart.series.length} with {series.points.length} {#eq series.points.length 1}bar{else}bars{/eq}.',\n                        barCombination: '{series.name}, series {seriesNumber} of {chart.series.length}. Bar series with {series.points.length} {#eq series.points.length 1}bar{else}bars{/eq}.',\n                        pie: '{series.name}, pie {seriesNumber} of {chart.series.length} with {series.points.length} {#eq series.points.length 1}slice{else}slices{/eq}.',\n                        pieCombination: '{series.name}, series {seriesNumber} of {chart.series.length}. Pie with {series.points.length} {#eq series.points.length 1}slice{else}slices{/eq}.',\n                        scatter: '{series.name}, scatter plot {seriesNumber} of {chart.series.length} with {series.points.length} {#eq series.points.length 1}point{else}points{/eq}.',\n                        scatterCombination: '{series.name}, series {seriesNumber} of {chart.series.length}, scatter plot with {series.points.length} {#eq series.points.length 1}point{else}points{/eq}.',\n                        boxplot: '{series.name}, boxplot {seriesNumber} of {chart.series.length} with {series.points.length} {#eq series.points.length 1}box{else}boxes{/eq}.',\n                        boxplotCombination: '{series.name}, series {seriesNumber} of {chart.series.length}. Boxplot with {series.points.length} {#eq series.points.length 1}box{else}boxes{/eq}.',\n                        bubble: '{series.name}, bubble series {seriesNumber} of {chart.series.length} with {series.points.length} {#eq series.points.length 1}bubble{else}bubbles{/eq}.',\n                        bubbleCombination: '{series.name}, series {seriesNumber} of {chart.series.length}. Bubble series with {series.points.length} {#eq series.points.length 1}bubble{else}bubbles{/eq}.',\n                        map: '{series.name}, map {seriesNumber} of {chart.series.length} with {series.points.length} {#eq series.points.length 1}area{else}areas{/eq}.',\n                        mapCombination: '{series.name}, series {seriesNumber} of {chart.series.length}. Map with {series.points.length} {#eq series.points.length 1}area{else}areas{/eq}.',\n                        mapline: '{series.name}, line {seriesNumber} of {chart.series.length} with {series.points.length} data {#eq series.points.length 1}point{else}points{/eq}.',\n                        maplineCombination: '{series.name}, series {seriesNumber} of {chart.series.length}. Line with {series.points.length} data {#eq series.points.length 1}point{else}points{/eq}.',\n                        mapbubble: '{series.name}, bubble series {seriesNumber} of {chart.series.length} with {series.points.length} {#eq series.points.length 1}bubble{else}bubbles{/eq}.',\n                        mapbubbleCombination: '{series.name}, series {seriesNumber} of {chart.series.length}. Bubble series with {series.points.length} {#eq series.points.length 1}bubble{else}bubbles{/eq}.'\n                    }, /* eslint-enable max-len */\n                    /**\n                     * User supplied description text. This is added in the point\n                     * comment description by default if present.\n                     *\n                     * `{description}` refers to the value given in\n                     * [point.accessibility.description](#series.line.data.accessibility.description).\n                     *\n                     * @since 6.0.6\n                     */\n                    description: '{description}',\n                    /**\n                     * X-axis description for series if there are multiple xAxes in\n                     * the chart.\n                     *\n                     * @since 6.0.6\n                     */\n                    xAxisDescription: 'X axis, {name}',\n                    /**\n                     * Y-axis description for series if there are multiple yAxes in\n                     * the chart.\n                     *\n                     * @since 6.0.6\n                     */\n                    yAxisDescription: 'Y axis, {name}',\n                    /**\n                     * Description for the value of null points.\n                     *\n                     * @since 8.0.0\n                     */\n                    nullPointValue: 'No value',\n                    /**\n                     * Description for annotations on a point, as it is made available\n                     * to assistive technology.\n                     *\n                     * @since 8.0.1\n                     */\n                    pointAnnotationsDescription: '{#each annotations}' +\n                        'Annotation: {this}{/each}'\n                }\n            }\n        };\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return langOptions;\n    });\n    _registerModule(_modules, 'Accessibility/Options/DeprecatedOptions.js', [_modules['Core/Utilities.js']], function (U) {\n        /* *\n         *\n         *  (c) 2009-2024 Ã˜ystein Moseng\n         *\n         *  Default options for accessibility.\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        /* eslint-disable max-len */\n        /*\n         *  List of deprecated options:\n         *\n         *  chart.description -> accessibility.description\n         *  chart.typeDescription -> accessibility.typeDescription\n         *  series.description -> series.accessibility.description\n         *  series.exposeElementToA11y -> series.accessibility.exposeAsGroupOnly\n         *  series.pointDescriptionFormatter ->\n         *      series.accessibility.pointDescriptionFormatter\n         *  series.accessibility.pointDescriptionFormatter ->\n         *      series.accessibility.point.descriptionFormatter\n         *  series.skipKeyboardNavigation ->\n         *      series.accessibility.keyboardNavigation.enabled\n         *  point.description -> point.accessibility.description !!!! WARNING: No longer deprecated and handled, removed for HC8.\n         *  axis.description -> axis.accessibility.description\n         *\n         *  accessibility.pointDateFormat -> accessibility.point.dateFormat\n         *  accessibility.addTableShortcut -> Handled by screenReaderSection.beforeChartFormat\n         *  accessibility.pointDateFormatter -> accessibility.point.dateFormatter\n         *  accessibility.pointDescriptionFormatter -> accessibility.point.descriptionFormatter\n         *  accessibility.pointDescriptionThreshold -> accessibility.series.pointDescriptionEnabledThreshold\n         *  accessibility.pointNavigationThreshold -> accessibility.keyboardNavigation.seriesNavigation.pointNavigationEnabledThreshold\n         *  accessibility.pointValueDecimals -> accessibility.point.valueDecimals\n         *  accessibility.pointValuePrefix -> accessibility.point.valuePrefix\n         *  accessibility.pointValueSuffix -> accessibility.point.valueSuffix\n         *  accessibility.screenReaderSectionFormatter -> accessibility.screenReaderSection.beforeChartFormatter\n         *  accessibility.describeSingleSeries -> accessibility.series.describeSingleSeries\n         *  accessibility.seriesDescriptionFormatter -> accessibility.series.descriptionFormatter\n         *  accessibility.onTableAnchorClick -> accessibility.screenReaderSection.onViewDataTableClick\n         *  accessibility.axisRangeDateFormat -> accessibility.screenReaderSection.axisRangeDateFormat\n         *  accessibility.keyboardNavigation.skipNullPoints -> accessibility.keyboardNavigation.seriesNavigation.skipNullPoints\n         *  accessibility.keyboardNavigation.mode -> accessibility.keyboardNavigation.seriesNavigation.mode\n         *\n         *  lang.accessibility.chartHeading -> no longer used, remove\n         *  lang.accessibility.legendItem -> lang.accessibility.legend.legendItem\n         *  lang.accessibility.legendLabel -> lang.accessibility.legend.legendLabel\n         *  lang.accessibility.mapZoomIn -> lang.accessibility.zoom.mapZoomIn\n         *  lang.accessibility.mapZoomOut -> lang.accessibility.zoom.mapZoomOut\n         *  lang.accessibility.resetZoomButton -> lang.accessibility.zoom.resetZoomButton\n         *  lang.accessibility.screenReaderRegionLabel -> lang.accessibility.screenReaderSection.beforeRegionLabel\n         *  lang.accessibility.rangeSelectorButton -> lang.accessibility.rangeSelector.buttonText\n         *  lang.accessibility.rangeSelectorMaxInput -> lang.accessibility.rangeSelector.maxInputLabel\n         *  lang.accessibility.rangeSelectorMinInput -> lang.accessibility.rangeSelector.minInputLabel\n         *  lang.accessibility.svgContainerEnd -> lang.accessibility.screenReaderSection.endOfChartMarker\n         *  lang.accessibility.viewAsDataTable -> lang.accessibility.table.viewAsDataTableButtonText\n         *  lang.accessibility.tableSummary -> lang.accessibility.table.tableSummary\n         *\n         */\n        /* eslint-enable max-len */\n        const { error, pick } = U;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /* eslint-disable valid-jsdoc */\n        /**\n         * Set a new option on a root prop, where the option is defined as an array of\n         * suboptions.\n         * @private\n         * @param root\n         * @param {Array<string>} optionAsArray\n         * @param {*} val\n         * @return {void}\n         */\n        function traverseSetOption(root, optionAsArray, val) {\n            let opt = root, prop, i = 0;\n            for (; i < optionAsArray.length - 1; ++i) {\n                prop = optionAsArray[i];\n                opt = opt[prop] = pick(opt[prop], {});\n            }\n            opt[optionAsArray[optionAsArray.length - 1]] = val;\n        }\n        /**\n         * If we have a clear root option node for old and new options and a mapping\n         * between, we can use this generic function for the copy and warn logic.\n         */\n        function deprecateFromOptionsMap(chart, rootOldAsArray, rootNewAsArray, mapToNewOptions) {\n            /**\n             * @private\n             */\n            function getChildProp(root, propAsArray) {\n                return propAsArray.reduce(function (acc, cur) {\n                    return acc[cur];\n                }, root);\n            }\n            const rootOld = getChildProp(chart.options, rootOldAsArray), rootNew = getChildProp(chart.options, rootNewAsArray);\n            Object.keys(mapToNewOptions).forEach(function (oldOptionKey) {\n                const val = rootOld[oldOptionKey];\n                if (typeof val !== 'undefined') {\n                    traverseSetOption(rootNew, mapToNewOptions[oldOptionKey], val);\n                    error(32, false, chart, {\n                        [rootOldAsArray.join('.') + '.' + oldOptionKey]: (rootNewAsArray.join('.') + '.' +\n                            mapToNewOptions[oldOptionKey].join('.'))\n                    });\n                }\n            });\n        }\n        /**\n         * @private\n         */\n        function copyDeprecatedChartOptions(chart) {\n            const chartOptions = chart.options.chart, a11yOptions = chart.options.accessibility || {};\n            ['description', 'typeDescription'].forEach(function (prop) {\n                if (chartOptions[prop]) {\n                    a11yOptions[prop] = chartOptions[prop];\n                    error(32, false, chart, { [`chart.${prop}`]: `use accessibility.${prop}` });\n                }\n            });\n        }\n        /**\n         * @private\n         */\n        function copyDeprecatedAxisOptions(chart) {\n            chart.axes.forEach(function (axis) {\n                const opts = axis.options;\n                if (opts && opts.description) {\n                    opts.accessibility = opts.accessibility || {};\n                    opts.accessibility.description = opts.description;\n                    error(32, false, chart, {\n                        'axis.description': 'use axis.accessibility.description'\n                    });\n                }\n            });\n        }\n        /**\n         * @private\n         */\n        function copyDeprecatedSeriesOptions(chart) {\n            // Map of deprecated series options. New options are defined as\n            // arrays of paths under series.options.\n            const oldToNewSeriesOptions = {\n                description: ['accessibility', 'description'],\n                exposeElementToA11y: ['accessibility', 'exposeAsGroupOnly'],\n                pointDescriptionFormatter: [\n                    'accessibility', 'point', 'descriptionFormatter'\n                ],\n                skipKeyboardNavigation: [\n                    'accessibility', 'keyboardNavigation', 'enabled'\n                ],\n                'accessibility.pointDescriptionFormatter': [\n                    'accessibility', 'point', 'descriptionFormatter'\n                ]\n            };\n            chart.series.forEach(function (series) {\n                // Handle series wide options\n                Object.keys(oldToNewSeriesOptions).forEach(function (oldOption) {\n                    let optionVal = series.options[oldOption];\n                    // Special case\n                    if (oldOption === 'accessibility.pointDescriptionFormatter') {\n                        optionVal = (series.options.accessibility &&\n                            series.options.accessibility\n                                .pointDescriptionFormatter);\n                    }\n                    if (typeof optionVal !== 'undefined') {\n                        // Set the new option\n                        traverseSetOption(series.options, oldToNewSeriesOptions[oldOption], \n                        // Note that skipKeyboardNavigation has inverted option\n                        // value, since we set enabled rather than disabled\n                        oldOption === 'skipKeyboardNavigation' ?\n                            !optionVal : optionVal);\n                        error(32, false, chart, {\n                            [`series.${oldOption}`]: ('series.' +\n                                oldToNewSeriesOptions[oldOption].join('.'))\n                        });\n                    }\n                });\n            });\n        }\n        /**\n         * @private\n         */\n        function copyDeprecatedTopLevelAccessibilityOptions(chart) {\n            deprecateFromOptionsMap(chart, ['accessibility'], ['accessibility'], {\n                pointDateFormat: ['point', 'dateFormat'],\n                pointDateFormatter: ['point', 'dateFormatter'],\n                pointDescriptionFormatter: ['point', 'descriptionFormatter'],\n                pointDescriptionThreshold: [\n                    'series',\n                    'pointDescriptionEnabledThreshold'\n                ],\n                pointNavigationThreshold: [\n                    'keyboardNavigation', 'seriesNavigation',\n                    'pointNavigationEnabledThreshold'\n                ],\n                pointValueDecimals: ['point', 'valueDecimals'],\n                pointValuePrefix: ['point', 'valuePrefix'],\n                pointValueSuffix: ['point', 'valueSuffix'],\n                screenReaderSectionFormatter: [\n                    'screenReaderSection',\n                    'beforeChartFormatter'\n                ],\n                describeSingleSeries: ['series', 'describeSingleSeries'],\n                seriesDescriptionFormatter: ['series', 'descriptionFormatter'],\n                onTableAnchorClick: ['screenReaderSection', 'onViewDataTableClick'],\n                axisRangeDateFormat: ['screenReaderSection', 'axisRangeDateFormat']\n            });\n        }\n        /**\n         * @private\n         */\n        function copyDeprecatedKeyboardNavigationOptions(chart) {\n            deprecateFromOptionsMap(chart, ['accessibility', 'keyboardNavigation'], ['accessibility', 'keyboardNavigation', 'seriesNavigation'], {\n                skipNullPoints: ['skipNullPoints'],\n                mode: ['mode']\n            });\n        }\n        /**\n         * @private\n         */\n        function copyDeprecatedLangOptions(chart) {\n            deprecateFromOptionsMap(chart, ['lang', 'accessibility'], ['lang', 'accessibility'], {\n                legendItem: ['legend', 'legendItem'],\n                legendLabel: ['legend', 'legendLabel'],\n                mapZoomIn: ['zoom', 'mapZoomIn'],\n                mapZoomOut: ['zoom', 'mapZoomOut'],\n                resetZoomButton: ['zoom', 'resetZoomButton'],\n                screenReaderRegionLabel: [\n                    'screenReaderSection',\n                    'beforeRegionLabel'\n                ],\n                rangeSelectorButton: ['rangeSelector', 'buttonText'],\n                rangeSelectorMaxInput: ['rangeSelector', 'maxInputLabel'],\n                rangeSelectorMinInput: ['rangeSelector', 'minInputLabel'],\n                svgContainerEnd: ['screenReaderSection', 'endOfChartMarker'],\n                viewAsDataTable: ['table', 'viewAsDataTableButtonText'],\n                tableSummary: ['table', 'tableSummary']\n            });\n        }\n        /**\n         * Copy options that are deprecated over to new options. Logs warnings to\n         * console if deprecated options are used.\n         *\n         * @private\n         */\n        function copyDeprecatedOptions(chart) {\n            copyDeprecatedChartOptions(chart);\n            copyDeprecatedAxisOptions(chart);\n            if (chart.series) {\n                copyDeprecatedSeriesOptions(chart);\n            }\n            copyDeprecatedTopLevelAccessibilityOptions(chart);\n            copyDeprecatedKeyboardNavigationOptions(chart);\n            copyDeprecatedLangOptions(chart);\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return copyDeprecatedOptions;\n    });\n    _registerModule(_modules, 'Accessibility/Accessibility.js', [_modules['Core/Defaults.js'], _modules['Core/Globals.js'], _modules['Core/Utilities.js'], _modules['Accessibility/Utils/HTMLUtilities.js'], _modules['Accessibility/A11yI18n.js'], _modules['Accessibility/Components/ContainerComponent.js'], _modules['Accessibility/FocusBorder.js'], _modules['Accessibility/Components/InfoRegionsComponent.js'], _modules['Accessibility/KeyboardNavigation.js'], _modules['Accessibility/Components/LegendComponent.js'], _modules['Accessibility/Components/MenuComponent.js'], _modules['Accessibility/Components/NavigatorComponent.js'], _modules['Accessibility/Components/SeriesComponent/NewDataAnnouncer.js'], _modules['Accessibility/ProxyProvider.js'], _modules['Accessibility/Components/RangeSelectorComponent.js'], _modules['Accessibility/Components/SeriesComponent/SeriesComponent.js'], _modules['Accessibility/Components/ZoomComponent.js'], _modules['Accessibility/HighContrastMode.js'], _modules['Accessibility/HighContrastTheme.js'], _modules['Accessibility/Options/A11yDefaults.js'], _modules['Accessibility/Options/LangDefaults.js'], _modules['Accessibility/Options/DeprecatedOptions.js']], function (D, H, U, HU, A11yI18n, ContainerComponent, FocusBorderComposition, InfoRegionsComponent, KeyboardNavigation, LegendComponent, MenuComponent, NavigatorComponent, NewDataAnnouncer, ProxyProvider, RangeSelectorComponent, SeriesComponent, ZoomComponent, whcm, highContrastTheme, defaultOptionsA11Y, defaultLangOptions, copyDeprecatedOptions) {\n        /* *\n         *\n         *  (c) 2009-2024 Ã˜ystein Moseng\n         *\n         *  Accessibility module for Highcharts\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { defaultOptions } = D;\n        const { doc } = H;\n        const { addEvent, extend, fireEvent, merge } = U;\n        const { removeElement } = HU;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The Accessibility class\n         *\n         * @private\n         * @requires modules/accessibility\n         *\n         * @class\n         * @name Highcharts.Accessibility\n         *\n         * @param {Highcharts.Chart} chart\n         * Chart object\n         */\n        class Accessibility {\n            /* *\n             *\n             *  Constructor\n             *\n             * */\n            constructor(chart) {\n                this.init(chart);\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Initialize the accessibility class\n             * @private\n             * @param {Highcharts.Chart} chart\n             *        Chart object\n             */\n            init(chart) {\n                this.chart = chart;\n                // Abort on old browsers\n                if (!doc.addEventListener) {\n                    this.zombie = true;\n                    this.components = {};\n                    chart.renderTo.setAttribute('aria-hidden', true);\n                    return;\n                }\n                // Copy over any deprecated options that are used. We could do this on\n                // every update, but it is probably not needed.\n                copyDeprecatedOptions(chart);\n                this.proxyProvider = new ProxyProvider(this.chart);\n                this.initComponents();\n                this.keyboardNavigation = new KeyboardNavigation(chart, this.components);\n            }\n            /**\n             * @private\n             */\n            initComponents() {\n                const chart = this.chart;\n                const proxyProvider = this.proxyProvider;\n                const a11yOptions = chart.options.accessibility;\n                this.components = {\n                    container: new ContainerComponent(),\n                    infoRegions: new InfoRegionsComponent(),\n                    legend: new LegendComponent(),\n                    chartMenu: new MenuComponent(),\n                    rangeSelector: new RangeSelectorComponent(),\n                    series: new SeriesComponent(),\n                    zoom: new ZoomComponent(),\n                    navigator: new NavigatorComponent()\n                };\n                if (a11yOptions.customComponents) {\n                    extend(this.components, a11yOptions.customComponents);\n                }\n                const components = this.components;\n                this.getComponentOrder().forEach(function (componentName) {\n                    components[componentName].initBase(chart, proxyProvider);\n                    components[componentName].init();\n                });\n            }\n            /**\n             * Get order to update components in.\n             * @private\n             */\n            getComponentOrder() {\n                if (!this.components) {\n                    return []; // For zombie accessibility object on old browsers\n                }\n                if (!this.components.series) {\n                    return Object.keys(this.components);\n                }\n                const componentsExceptSeries = Object.keys(this.components)\n                    .filter((c) => c !== 'series');\n                // Update series first, so that other components can read accessibility\n                // info on points.\n                return ['series'].concat(componentsExceptSeries);\n            }\n            /**\n             * Update all components.\n             */\n            update() {\n                const components = this.components, chart = this.chart, a11yOptions = chart.options.accessibility;\n                fireEvent(chart, 'beforeA11yUpdate');\n                // Update the chart type list as this is used by multiple modules\n                chart.types = this.getChartTypes();\n                // Update proxies. We don't update proxy positions since most likely we\n                // need to recreate the proxies on update.\n                const kbdNavOrder = a11yOptions.keyboardNavigation.order;\n                this.proxyProvider.updateGroupOrder(kbdNavOrder);\n                // Update markup\n                this.getComponentOrder().forEach(function (componentName) {\n                    components[componentName].onChartUpdate();\n                    fireEvent(chart, 'afterA11yComponentUpdate', {\n                        name: componentName,\n                        component: components[componentName]\n                    });\n                });\n                // Update keyboard navigation\n                this.keyboardNavigation.update(kbdNavOrder);\n                // Handle high contrast mode\n                // Should only be applied once, and not if explicitly disabled\n                if (!chart.highContrastModeActive &&\n                    a11yOptions.highContrastMode !== false && (whcm.isHighContrastModeActive() ||\n                    a11yOptions.highContrastMode === true)) {\n                    whcm.setHighContrastTheme(chart);\n                }\n                fireEvent(chart, 'afterA11yUpdate', {\n                    accessibility: this\n                });\n            }\n            /**\n             * Destroy all elements.\n             */\n            destroy() {\n                const chart = this.chart || {};\n                // Destroy components\n                const components = this.components;\n                Object.keys(components).forEach(function (componentName) {\n                    components[componentName].destroy();\n                    components[componentName].destroyBase();\n                });\n                // Destroy proxy provider\n                if (this.proxyProvider) {\n                    this.proxyProvider.destroy();\n                }\n                // Remove announcer container\n                if (chart.announcerContainer) {\n                    removeElement(chart.announcerContainer);\n                }\n                // Kill keyboard nav\n                if (this.keyboardNavigation) {\n                    this.keyboardNavigation.destroy();\n                }\n                // Hide container from screen readers if it exists\n                if (chart.renderTo) {\n                    chart.renderTo.setAttribute('aria-hidden', true);\n                }\n                // Remove focus border if it exists\n                if (chart.focusElement) {\n                    chart.focusElement.removeFocusBorder();\n                }\n            }\n            /**\n             * Return a list of the types of series we have in the chart.\n             * @private\n             */\n            getChartTypes() {\n                const types = {};\n                this.chart.series.forEach(function (series) {\n                    types[series.type] = 1;\n                });\n                return Object.keys(types);\n            }\n        }\n        /* *\n         *\n         *  Class Namespace\n         *\n         * */\n        (function (Accessibility) {\n            /* *\n             *\n             *  Declarations\n             *\n             * */\n            /* *\n             *\n             *  Constants\n             *\n             * */\n            Accessibility.i18nFormat = A11yI18n.i18nFormat;\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Destroy with chart.\n             * @private\n             */\n            function chartOnDestroy() {\n                if (this.accessibility) {\n                    this.accessibility.destroy();\n                }\n            }\n            /**\n             * Handle updates to the module and send render updates to components.\n             * @private\n             */\n            function chartOnRender() {\n                // Update/destroy\n                if (this.a11yDirty && this.renderTo) {\n                    delete this.a11yDirty;\n                    this.updateA11yEnabled();\n                }\n                const a11y = this.accessibility;\n                if (a11y && !a11y.zombie) {\n                    a11y.proxyProvider.updateProxyElementPositions();\n                    a11y.getComponentOrder().forEach(function (componentName) {\n                        a11y.components[componentName].onChartRender();\n                    });\n                }\n            }\n            /**\n             * Update with chart/series/point updates.\n             * @private\n             */\n            function chartOnUpdate(e) {\n                // Merge new options\n                const newOptions = e.options.accessibility;\n                if (newOptions) {\n                    // Handle custom component updating specifically\n                    if (newOptions.customComponents) {\n                        this.options.accessibility.customComponents =\n                            newOptions.customComponents;\n                        delete newOptions.customComponents;\n                    }\n                    merge(true, this.options.accessibility, newOptions);\n                    // Recreate from scratch\n                    if (this.accessibility && this.accessibility.destroy) {\n                        this.accessibility.destroy();\n                        delete this.accessibility;\n                    }\n                }\n                // Mark dirty for update\n                this.a11yDirty = true;\n            }\n            /**\n             * @private\n             */\n            function chartUpdateA11yEnabled() {\n                let a11y = this.accessibility;\n                const accessibilityOptions = this.options.accessibility;\n                if (accessibilityOptions && accessibilityOptions.enabled) {\n                    if (a11y && !a11y.zombie) {\n                        a11y.update();\n                    }\n                    else {\n                        this.accessibility = a11y = new Accessibility(this);\n                        if (a11y && !a11y.zombie) {\n                            a11y.update();\n                        }\n                    }\n                }\n                else if (a11y) {\n                    // Destroy if after update we have a11y and it is disabled\n                    if (a11y.destroy) {\n                        a11y.destroy();\n                    }\n                    delete this.accessibility;\n                }\n                else {\n                    // Just hide container\n                    this.renderTo.setAttribute('aria-hidden', true);\n                }\n            }\n            /**\n             * @private\n             */\n            function compose(ChartClass, LegendClass, PointClass, SeriesClass, SVGElementClass, RangeSelectorClass) {\n                // Ordered:\n                KeyboardNavigation.compose(ChartClass);\n                NewDataAnnouncer.compose(SeriesClass);\n                LegendComponent.compose(ChartClass, LegendClass);\n                MenuComponent.compose(ChartClass);\n                SeriesComponent.compose(ChartClass, PointClass, SeriesClass);\n                A11yI18n.compose(ChartClass);\n                FocusBorderComposition.compose(ChartClass, SVGElementClass);\n                // RangeSelector\n                if (RangeSelectorClass) {\n                    RangeSelectorComponent.compose(ChartClass, RangeSelectorClass);\n                }\n                const chartProto = ChartClass.prototype;\n                if (!chartProto.updateA11yEnabled) {\n                    chartProto.updateA11yEnabled = chartUpdateA11yEnabled;\n                    addEvent(ChartClass, 'destroy', chartOnDestroy);\n                    addEvent(ChartClass, 'render', chartOnRender);\n                    addEvent(ChartClass, 'update', chartOnUpdate);\n                    // Mark dirty for update\n                    ['addSeries', 'init'].forEach((event) => {\n                        addEvent(ChartClass, event, function () {\n                            this.a11yDirty = true;\n                        });\n                    });\n                    // Direct updates (events happen after render)\n                    ['afterApplyDrilldown', 'drillupall'].forEach((event) => {\n                        addEvent(ChartClass, event, function chartOnAfterDrilldown() {\n                            const a11y = this.accessibility;\n                            if (a11y && !a11y.zombie) {\n                                a11y.update();\n                            }\n                        });\n                    });\n                    addEvent(PointClass, 'update', pointOnUpdate);\n                    // Mark dirty for update\n                    ['update', 'updatedData', 'remove'].forEach((event) => {\n                        addEvent(SeriesClass, event, function () {\n                            if (this.chart.accessibility) {\n                                this.chart.a11yDirty = true;\n                            }\n                        });\n                    });\n                }\n            }\n            Accessibility.compose = compose;\n            /**\n             * Mark dirty for update.\n             * @private\n             */\n            function pointOnUpdate() {\n                if (this.series.chart.accessibility) {\n                    this.series.chart.a11yDirty = true;\n                }\n            }\n        })(Accessibility || (Accessibility = {}));\n        /* *\n         *\n         *  Registry\n         *\n         * */\n        // Add default options\n        merge(true, defaultOptions, defaultOptionsA11Y, {\n            accessibility: {\n                highContrastTheme: highContrastTheme\n            },\n            lang: defaultLangOptions\n        });\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return Accessibility;\n    });\n    _registerModule(_modules, 'masters/modules/accessibility.src.js', [_modules['Core/Globals.js'], _modules['Accessibility/Accessibility.js'], _modules['Accessibility/AccessibilityComponent.js'], _modules['Accessibility/Utils/ChartUtilities.js'], _modules['Accessibility/Utils/HTMLUtilities.js'], _modules['Accessibility/KeyboardNavigationHandler.js'], _modules['Accessibility/Components/SeriesComponent/SeriesDescriber.js']], function (Highcharts, Accessibility, AccessibilityComponent, ChartUtilities, HTMLUtilities, KeyboardNavigationHandler, SeriesDescriber) {\n\n        const G = Highcharts;\n        // Classes\n        G.i18nFormat = Accessibility.i18nFormat;\n        G.A11yChartUtilities = ChartUtilities;\n        G.A11yHTMLUtilities = HTMLUtilities;\n        G.AccessibilityComponent = AccessibilityComponent;\n        G.KeyboardNavigationHandler = KeyboardNavigationHandler;\n        G.SeriesAccessibilityDescriber = SeriesDescriber;\n        // Compositions\n        Accessibility.compose(G.Chart, G.Legend, G.Point, G.Series, G.SVGElement, G.RangeSelector);\n\n        return Highcharts;\n    });\n}));\n"],"names":["factory","module","exports","define","amd","Highcharts","undefined","_modules","_registerModule","obj","path","args","fn","hasOwnProperty","apply","CustomEvent","win","dispatchEvent","detail","H","U","doc","css","simulatedEventTarget","EventTarget","cloneMouseEvent","e","MouseEvent","type","createEvent","evt","initMouseEvent","bubbles","cancelable","view","screenX","screenY","clientX","clientY","ctrlKey","altKey","shiftKey","metaKey","button","relatedTarget","getFakeMouseEvent","position","pos","x","y","composed","buttons","addClass","el","className","classList","add","indexOf","cloneTouchEvent","touchListToTouchArray","l","touchArray","i","length","item","push","TouchEvent","newEvent","touches","targetTouches","changedTouches","defaultPrevented","preventDefault","fakeEvt","escapeStringForHTML","str","replace","getElement","id","getElementById","getHeadingTagNameForElement","element","getIncreasedHeadingLevel","tagName","Math","min","headingLevel","parseInt","slice","isHeading","test","getPreviousSiblingsHeading","sibling","previousSibling","getHeadingRecursive","prevSiblingsHeading","parent","parentElement","parentTagName","removeChildNodes","lastChild","removeChild","removeClass","remove","RegExp","removeElement","parentNode","reverseChildNodes","node","childNodes","appendChild","stripHTMLTagsFromString","isForExport","visuallyHideElement","width","height","overflow","whiteSpace","clip","marginTop","filter","opacity","F","A11yI18nComposition","format","getNestedProperty","pick","i18nFormat","formatString","context","chart","getFirstBracketStatement","sourceStr","offset","startBracket","endBracket","statement","substring","begin","end","tokens","bracketRes","constRes","cursor","value","forEach","token","formatExtendedStatement","ctx","arr","result","eachStart","pluralStart","indexStart","indexEnd","eachEnd","preEach","postEach","eachArguments","eachStatement","split","lenArg","Number","len","isNaN","pluralEnd","pluralArguments","pluralStatement","trim","val","arrayName","ix","reduce","acc","cur","langFormat","langKey","keys","options","lang","compose","ChartClass","chartProto","prototype","HU","stripHTMLTags","defined","find","fireEvent","getSeriesFirstPointElement","series","points","firstPointWithGraphic","p","graphic","getSeriesA11yElement","firstPointEl","graph","group","fireEventOnWrappedOrUnwrappedElement","eventObject","hcEvents","getChartTitle","title","text","renderer","forExport","getAxisDescription","axis","accessibility","description","axisTitle","textStr","categories","dateTime","getAxisRangeDescription","axisOptions","rangeDescription","getCategoryAxisRangeDesc","dataMax","dataMin","numCategories","getAxisTimeLengthDesc","range","max","rangeUnit","Seconds","Minutes","Hours","Days","unit","rangeValue","toFixed","getAxisFromToDescription","dateRangeFormat","screenReaderSection","axisRangeDateFormat","extremes","key","time","dateFormat","toString","rangeFrom","rangeTo","getPointFromXY","res","getSeriesFromName","name","s","unhideChartElementFromAT","setAttribute","renderTo","body","Array","call","hasAttribute","hideSeriesFromAT","seriesEl","scrollAxisToPoint","point","xAxis","yAxis","scrollbar","to","from","getRelativePointAxisPosition","axisStart","toPixels","axisEnd","positionProp","coll","pointPos","updatePosition","trigger","DOMEvent","constructor","elements","createElement","arguments","splice","destroyCreatedElements","addEvent","eventRemovers","remover","removeEvent","event","map","removeAddedEvents","CU","DOMElementProvider","EventProvider","extend","AccessibilityComponent","initBase","proxyProvider","eventProvider","domElementProvider","keyCodes","left","right","up","down","enter","space","esc","tab","pageUp","pageDown","home","fakeClickEvent","destroyBase","init","getKeyboardNavigation","onChartUpdate","onChartRender","destroy","keyCodeMap","validate","terminate","response","success","prev","next","noHandler","fail","run","keyCode","which","handlerCodeSet","codeSet","KeyboardNavigationHandler","handleSVGTitleElement","setSVGContainerLabel","setGraphicContainerAttrs","setRenderToAttrs","makeCreditsAccessible","titleId","index","titleContents","chartTitle","titleElement","svgTitleElement","createElementNS","textContent","insertBefore","firstChild","svgContainerLabel","box","label","container","shouldHaveLandmark","landmarkVerbosity","containerLabel","credits","creditsStr","a11y","keyboardNavigation","tabindexContainer","focus","FocusBorderComposition","svgElementBorderUpdateTriggers","chartRenderFocusBorder","focusElement","focusBorderOptions","focusBorder","removeFocusBorder","enabled","addFocusBorder","margin","stroke","style","color","strokeWidth","lineWidth","r","borderRadius","chartSetFocusToElement","svgElement","browserFocusElement","focusin","hideBrowserFocusOutline","outline","renderFocusBorder","svgElementAddFocusBorder","attribs","bb","getBBox","pad","parentGroup","scaleX","scaleY","scaleBoth","oneDefined","abs","translateX","translateY","borderPosX","borderPosY","borderWidth","borderHeight","isLabel","nodeName","posXCorrection","posYCorrection","isRotated","rotation","correction","attr","attrX","attrY","temp","rect","zIndex","styledMode","avgElementAddUpdateFocusBorderHooks","updateParams","focusBorderUpdateHooks","setterKey","origSetter","_defaultSetter","ret","svgElementAddDestroyFocusBorderHook","focusBorderDestroyHook","origDestroy","svgElementRemoveFocusBorder","Object","SVGElementClass","svgElementProto","setFocusToElement","AST","announceRegion","addAnnounceRegion","announce","message","setElementHTML","clearAnnouncementRegionTimer","clearTimeout","setTimeout","innerHTML","emptyHTML","chartContainer","announcerContainer","createAnnouncerContainer","div","HTMLUtilities","getChartAnnotationLabels","annotations","visible","concat","labels","getLabelText","getAnnotationLabelDescription","a11yDesc","labelText","getAriaLabel","getAttribute","pointValueDescriptions","valDesc","valueDescription","seriesName","desc","numPoints","pointsSelector","annotationText","annotation","annotationPoint","additionalAnnotationPoints","getAnnotationListItems","getAnnotationsInfoHTML","annotationItems","join","getPointAnnotationTexts","pointLabels","A11yI18n","Announcer","AnnotationsA11y","replaceNested","stripEmptyHTMLTags","screenReaderSections","component","initRegionsDefinitions","onDataTableCreated","wasHidden","dataTableDiv","focusDataTable","viewDataTableButton","exporting","updateAllScreenReaderSections","announcer","accessibilityOptions","before","buildContent","formatter","beforeChartFormatter","defaultBeforeChartFormatter","insertIntoDOM","afterInserted","sonifyButtonId","initSonifyButton","dataTableButtonId","initDataTableButton","after","afterChartFormatter","defaultAfterChartFormatter","nextSibling","updateExitAnchor","linkedDescriptionElement","getLinkedDescriptionElement","setLinkedDescriptionAttrs","regionKey","updateScreenReaderSection","linkedDescOption","chartOptions","linkedDescription","query","queryMatch","querySelectorAll","region","content","sectionDiv","hiddenDiv","setScreenReaderSectionAttribs","beforeChartFormat","axesDesc","getAxesDescription","shouldHaveSonifyBtn","sonify","sonification","annotationsList","annotationsTitleStr","headingTagName","typeDescription","getTypeDescriptionText","chartSubtitle","getSubtitleText","chartLongdesc","getLongdescText","xAxisDescription","yAxisDescription","playAsSoundButton","getSonifyButtonText","viewTableButton","getCSV","getDataTableButtonText","annotationsTitle","formattedString","afterChartFormat","endOfChartMarker","getEndOfChartMarkerText","getLinkedDescription","captionOptions","caption","captionText","types","getTypeDescription","firstType","firstSeries","mapTitle","mapView","geoMap","formatContext","numSeries","buildTypeDescriptionFromSeries","typeExplanation","multi","buttonId","subtitle","endMarker","outerHTML","markerText","attributes","tree","tabindex","summary","tableDiv","table","getElementsByTagName","sonifyButton","defaultHandler","stopPropagation","announceMsg","removeAttribute","onclick","onPlayAsSoundClick","tableButtonId","tableId","onViewDataTableClick","viewData","shouldDescribeColl","collectionKey","defaultCondition","axes","hasNoMap","hasCartesian","hasCartesianSeries","showXAxes","angular","showYAxes","getAxisDescriptionText","names","ranges","numAxes","ChartUtilities","getExportMenuButtonElement","exportSVGElements","MenuComponent","onMenuShown","onMenuHidden","createProxyGroup","menu","exportContextMenu","setExportButtonExpandedState","addAccessibleContextMenuAttribs","stateStr","exportButtonProxy","innerElement","focusEl","clearGroup","proxyMenuButton","exportingGroup","buttonEl","exportingShouldHaveA11y","exportingOpts","exportButton","addProxyElement","click","contextButtonTitle","addGroup","exportList","exportDivElements","children","parentDiv","role","onKbdPrevious","onKbdNext","onKbdClick","proxy","svgEl","hideExportMenu","keyboardNavigationHandler","a11yOptions","highlightedExportItemIx","highlightExportItem","wrapAround","highlightLastExportItem","curHighlightedItem","exportButtonElement","openMenu","chartShowExportMenu","chartHideExportMenu","onmouseout","hideMenu","chartHighlightExportItem","listItem","curHighlighted","hasSVGFocusSupport","onmouseover","chartHighlightLastExportItem","showExportMenu","KeyboardNavigation","components","currentModuleIx","NaN","modules","ep","update","onKeydown","onFocus","eventName","onMouseUp","isClickingChart","order","keyboardOptions","updateContainerTabindex","componentName","navModules","removeExitAnchor","makeElementAnExitAnchor","exitAnchor","createExitAnchor","move","direction","curModule","newModule","exiting","focusComesFromChart","contains","tabbingInBackwards","getFirstValidModuleIx","keyboardReset","target","curMod","ev","curNavModule","shouldHaveTabindex","curTabindex","chartTabindex","addExitAnchorEventsToEl","comingInBackwards","mod","chartDismissPopupContent","tooltip","hide","documentOnKeydown","charts","dismissPopupContent","A","Legend","animObject","isNumber","syncTimeout","shouldDoLegendA11y","items","legend","allItems","legendA11yOptions","unsupportedColorAxis","colorAxis","some","c","dataClasses","setLegendItemHoverState","hoverActive","legendItem","setState","LegendComponent","highlightedLegendItemIx","proxyGroup","recreateProxies","updateGroupProxyElementPositions","updateLegendItemProxyVisibility","highlightLegendItem","updateProxyPositionForItem","globalAnimation","duration","curPage","currentPage","clipHeight","a11yProxyElement","hasPages","pages","proxyEl","itemPage","pageIx","round","visibility","removeProxies","highlightAdjacentLegendPage","newPageIx","curPageIx","refreshPosition","focusedElement","activeElement","shouldRestoreFocus","addLegendProxyGroup","proxyLegendItems","updateLegendTitle","removeGroup","legendTitle","legendLabel","updateGroupAttrs","groupRole","proxyLegendItem","itemLabel","itemName","proxyPositioningElement","visual","onKbdArrowKey","shouldHaveLegendNavigation","numItems","legendOptions","display","chartHighlightLegendItem","oldIx","itemToHighlight","scrollLegendToItem","itemIx","scroll","legendItemProp","proxyBtn","legendOnAfterColorizeItem","LegendClass","NavigatorConstructor","isTouchDevice","merge","composedMembers","onChartAfterAddSeries","navigator","setBaseSeries","onChartAfterSetChartSize","scrollbarHeight","scrollButtonSize","inverted","opposite","chartWidth","spacing","top","plotTop","plotLeft","navigatorOptions","chartHeight","rangeSelector","extraBottomMargin","getHeight","verticalAlign","layout","floating","legendHeight","titleOffset","setAxisSize","onChartAfterUpdate","scroller","redraw","animation","onChartBeforeRender","onChartBeforeShowResetZoom","zooming","pinchType","onChartCallback","getExtremes","render","scrollbarOptions","NavigatorClass","pushUnique","callbacks","correctFloat","onAxisInit","navigatorAxis","NavigatorAxisAdditions","onAxisSetExtremes","zoomed","zoomType","isXAxis","previousZoom","AxisClass","keepProps","includes","toFixedRange","pxMin","pxMax","fixedMin","fixedMax","halfPointRange","pointRange","newMin","translate","horiz","newMax","Color","SeriesRegistry","parse","seriesTypes","maskInside","handles","symbols","backgroundColor","borderColor","maskFill","setOpacity","get","outlineColor","outlineWidth","areaspline","fillOpacity","compare","dataGrouping","approximation","groupPixelWidth","firstAnchor","anchor","lastAnchor","units","dataLabels","lineColor","marker","threshold","tickLength","gridLineColor","gridLineWidth","tickPixelInterval","align","fontSize","textOutline","crosshair","startOnTick","endOnTick","minPadding","maxPadding","tickWidth","relativeLength","_x","_y","halfWidth","markerPosition","setFixedRange","fixedRange","D","NavigatorDefaults","NavigatorSymbols","RendererRegistry","StockUtilities","setOptions","getRendererType","onSeriesAfterUpdate","isInternal","SeriesClass","ScrollbarAxis","Scrollbar","axisMin","axisMax","scrollMin","Infinity","scrollMax","onAxisAfterGetOffset","scrollbarsOffsets","axisOffset","size","onAxisAfterInit","vertical","unitedMin","unitedMax","reversed","shouldUpdateExtremes","DOMType","animate","setExtremes","setRange","onAxisAfterRender","offsetsIndex","axisTitleMargin","axisMargin","xPosition","ScrollbarClass","barBorderRadius","buttonBorderRadius","buttonsEnabled","liveRedraw","minWidth","step","barBackgroundColor","barBorderWidth","barBorderColor","buttonArrowColor","buttonBackgroundColor","buttonBorderColor","buttonBorderWidth","rifleColor","trackBackgroundColor","trackBorderColor","trackBorderRadius","trackBorderWidth","ScrollbarDefaults","defaultOptions","crisp","destroyObjectProperties","swapXY","seg","_events","chartX","chartY","scrollbarButtons","scrollbarLeft","scrollbarStrokeWidth","scrollbarTop","addEvents","buttonsOrder","bar","scrollbarGroup","track","mouseDownHandler","bind","mouseMoveHandler","mouseUpHandler","buttonToMinClick","buttonToMaxClick","trackClick","ownerDocument","cursorToScrollbarPosition","normalizedEvent","minWidthDifference","calculatedWidth","xOffset","barWidth","yOffset","removeEvents","prop","drawScrollbarButton","g","fill","arrow","userOptions","pointer","normalize","mousePosition","initPositions","grabbedCenter","change","chartPosition","hasDragged","method","rendered","show","scrollbarRifles","fromPX","newSize","fullWidth","toPX","ceil","newPos","floor","newRiflesPos","showFull","eventType","svg","boosted","Axis","ChartNavigatorComposition","NavigatorComposition","SVGRenderer","clamp","erase","isArray","splat","numExt","extreme","numbers","Navigator","isDirty","drawHandle","verb","drawOutline","zoomedMin","zoomedMax","halfOutline","outlineCorrection","navigatorSize","navigatorTop","lineTop","lineBtm","verticalMin","d","drawMasks","navigatorHeight","shades","shade","renderElements","mouseCursor","navigatorGroup","hasMask","handlesOptions","symbolName","symbolFn","symbol","rotationOriginX","rotationOriginY","invertedUpdate","setOpposite","navigatorEnabled","adaptToUpdatedData","baseSeries","updatedDataHandler","eventsToUnbind","offsets","getXAxisOffsets","scrollbarXAxis","fake","minRange","maxRange","navigatorWidth","plotWidth","plotHeight","toValue","currentRange","grabbedLeft","grabbedRight","fixedWidth","addMouseEvents","onMouseMove","getPartsEvents","modifyNavigatorAxisExtremes","events","navigatorItem","shadesMousedown","navigatorPosition","ext","dragOffset","reversedExtremes","getUnionExtremes","eventArguments","handlesMousedown","baseXAxis","reverse","otherHandlePos","fixedExtreme","pageX","unionExtremes","triggerOp","unbind","removeBaseSeriesEvents","modifyBaseAxisExtremes","scrollbarEnabled","xAxisIndex","yAxisIndex","baseXaxis","isDirtyBox","breaks","ordinal","overscroll","keepOrdinalPadding","zoomEnabled","alignTicks","data","updateNavigatorSeries","unbindRedraw","scrollTrackWidth","valueRange","addBaseSeriesEvents","addChartEvents","Boolean","returnFalseOnNoBaseSeries","baseAxis","navAxis","navAxisOptions","baseAxisOptions","baseSeriesOptions","showInNavigator","navSeriesMixin","enableMouseTracking","linkedTo","padXAxis","showInLegend","stacking","states","inactive","navigatorSeries","navSeries","base","baseOptions","mergedNavSeriesOptions","chartNavigatorSeriesOptions","baseNavigatorOptions","linkedNavSeries","userNavOptions","plotOptions","navigatorSeriesData","hasNavigatorData","initSeries","setSortedData","userSeriesOptions","colors","setVisible","getBaseSeriesMin","currentSeriesMin","xData","baseExtremes","baseMin","baseMax","baseDataMin","baseDataMax","stickToMin","stickToMax","convertOverscroll","hasSetExtremes","eventArgs","MAX_VALUE","userMin","userMax","shouldStickToMax","shouldStickToMin","pointStart","setData","xDataMin","marginName","T","updateHandleValues","verbosity","groupFormatStr","groupLabel","handleFormatStr","handleLabel","n","handle","getHandleByIx","handleIx","pointerEvents","oninput","updateNavigator","getNavigatorHandleNavigation","maxHandleProxy","minHandleProxy","delta","parseFloat","updateNavigatorThrottleTimer","beforeAnnounce","performUpdate","chartPos","getChartPosition","minNewX","maxNewX","announceFormatStr","changeAnnouncement","axisRangeDescription","numberFormat","isString","hasMorePointsThanDescriptionThreshold","chartA11yOptions","pointDescriptionEnabledThreshold","pointNumberToString","a11yPointOptions","seriesA11yPointOptions","tooltipOptions","valueDecimals","decimalPoint","thousandsSep","getSeriesAxisDescriptionText","axisCollection","defaultPointDescriptionFormatter","shouldExposeSeriesName","valText","getPointValueDescription","seriesA11yOptions","pointValueDescriptionFormat","seriesValueDescFormat","valueDescriptionFormat","showXDescription","xDesc","getPointXDescription","timeDesc","getPointA11yTimeDescription","dateXAxis","tooltipDateFormat","getXDateFormat","dateTimeLabelFormats","dateFormatter","pointCategory","category","canUseId","fallback","xDescription","getPointValue","a11yPointOpts","seriesA11yPointOpts","valuePrefix","valueSuffix","fallbackKey","fallbackDesc","isNull","pointArrayMap","getPointArrayMapValueDescription","prefix","suffix","pre","suf","keyToValStr","num","propDesc","separator","seriesNameText","annotationsDesc","getPointAnnotationDescription","defaultSeriesDescriptionFormatter","chartTypes","getSeriesDescriptionText","descOpt","shouldDescribeAxis","seriesNumber","xAxisInfo","yAxisInfo","summaryContext","combinationSuffix","axisDescription","descriptionFormat","seriesDescription","authorDescription","describeSeries","is3d","describePointsInSeries","setScreenReaderProps","shouldSetScreenReaderPropsOnPoints","exposeAsGroupOnly","setKeyboardProps","shouldSetKeyboardNavPropsOnPoints","seriesNavOptions","seriesNavigation","pointNavigationEnabledThreshold","shouldDescribeNullPoints","describeNull","pointEl","shouldAddMockPoint","isSunburst","is","shouldDescribeNull","addMockPointElement","findFirstPointWithGraphic","sourcePointIndex","firstGraphic","mockPos","plotX","plotY","mockElement","makeMockElement","mock","hasMockGraphic","pointA11yDisabled","setPointScreenReaderAttribs","pointElement","seriesPointA11yOptions","descriptionFormatter","shouldDescribeSeriesElement","chartHas3d","options3d","hasMultipleSeries","describeSingleSeriesOption","describeSingleSeries","exposeAsGroupOnlyOption","describeSeriesElement","seriesElement","SeriesDescriber","chartHasAnnounceEnabled","announceNewData","NewDataAnnouncer","dirty","allSeries","lastAnnouncementTime","announceType","announceOptions","interruptUser","addEventListeners","onSeriesAdded","announceDirtyData","hasDirty","newSeries","newPoint","findPointInDataArray","candidates","candidate","queueAnnouncement","dirtySeries","annOptions","now","Date","dTime","minAnnounceInterval","getUniqueSeries","arrayA","arrayB","uniqueSeries","queuedAnnouncement","buildAnnouncementMessage","queuedAnnouncementTimer","announcementFormatter","formatterRes","multiple","seriesDesc","pointDesc","seriesOnAddPoint","newDataAnnouncer","seriesOnUpdatedData","proxyElementType","wrapperElementType","innerEl","wrapperEl","hideElementVisually","listStyle","updateTarget","getTargetPosition","fakeEventObject","updateCSSClassName","attrs","a","targetAriaLabel","getTargetAttr","addProxyEventsToElement","bBox","stringHasNoTooltip","groupDiv","noTooltipOnGroup","noTooltipOnTarget","evtType","isTouchEvent","clonedEvent","passive","padding","clickTarget","clickTargetElement","posElement","chartDiv","getBoundingClientRect","rectEl","bottom","ProxyElement","groups","groupOrder","beforeChartProxyPosContainer","createProxyPosContainer","afterChartProxyPosContainer","groupKey","Error","proxyContainerElement","proxyElements","groupElementType","groupElement","existingGroup","proxyContainer","updateGroupOrder","groupKeys","isDOMOrderGroupOrder","seriesIx","beforeKeys","afterKeys","posContainer","updatePosContainerPositions","updateProxyElementPositions","classNamePostfix","getCurrentGroupOrderInDOM","getGroupKeyFromElement","allGroups","getChildrenGroupOrder","childrenOrder","domOrder","groupOrderWithGroups","rendererSVGEl","RangeSelectorComponent","updateSelectorVisibility","setDropdownAttrs","setRangeButtonAttrs","maxInput","minInput","input","setRangeInputAttrs","dropdown","hideFromAT","hasVisibleDropdown","btn","rangeTitle","rangeSelectorZoom","onButtonNavKbdArrowKey","highlightRangeSelectorButton","highlightedRangeSelectorItemIx","onButtonNavKbdClick","oldRangeSelectorItemState","onAfterBtnClick","announcement","onInputKbdMove","rangeSel","newIx","highlightedInputRangeIx","inputEl","onInputNavInit","buttonIxToHighlight","removeInputKeydownHandler","keydownHandler","minRemover","maxRemover","onInputNavTerminate","hideInput","initDropdownNav","buttonGroup","removeDropdownKeydownHandler","isTab","getRangeSelectorButtonNavigation","lastButtonIx","getRangeSelectorInputNavigation","inputGroup","inputEnabled","chartHighlightRangeSelectorButton","curHighlightedIx","curSelectedIx","selected","state","rangeSelectorAfterBtnClick","RangeSelectorClass","ForcedMarkersComposition","forceZeroOpacityMarkerOptions","normal","getPointMarkerOpacity","pointOptions","hasIndividualPointMarkerOptions","_hasPointMarkers","seriesOnAfterRender","markerGroup","a11yMarkersForced","hasForcedA11yMarker","seriesOnAfterSetOptions","resetA11yMarkerOptions","seriesOnRender","shouldForceMarkers","chartA11yEnabled","seriesA11yEnabled","isWithinDescriptionThreshold","handleForcePointMarkers","hadForcedMarker","isStillForcedMarker","unforceSeriesMarkerOptions","resetMarkerOptions","originalOpacity","seriesOnRenderCanvas","Point","Series","getPointIndex","isSkipSeries","seriesKbdNavOptions","isSkipPoint","skipNullPoints","isInside","getFirstValidPointInChart","getFirstValidPointInSeries","highlightLastValidPointInChart","highlightedPoint","highlightNextValidPoint","highlightFirstValidPointInChart","highlight","SeriesKeyboardNavigation","onSeriesDestroy","updateChartFocusAfterDrilling","lastDrilledDownPoint","onDrillupAll","focusedElClassName","isProxyFocused","last","getKeyboardNavigationHandler","onKbdSideways","onKbdVertical","firePointEvent","highlightAdjacentSeries","onHandlerInit","onHandlerTerminate","handler","isNext","attemptHighlightAdjacentPoint","kbdNavOptions","rememberPointFocus","navOptions","mode","highlightMethod","keyboardMoveVertical","hoverSeries","onMouseOut","directionIsNext","highlightAdjacentPoint","chartHighlightAdjacentPoint","curPoint","curPointIndex","curPoints","lastSeries","lastPoint","chartHighlightAdjacentPointVertical","minDistance","bestPoint","yDistance","distance","chartHighlightAdjacentSeries","adjacentNewPoint","getClosestPoint","xWeight","yWeight","dPoint","minIx","hasUndefinedPosition","pointHighlight","highlightVisually","tooltipElement","onMouseOver","tooltipTop","scrollTop","window","scrollY","scrollTo","behavior","seriesHighlightNextValidPoint","start","j","PointClass","pointProto","seriesProto","highlightAdjacentPointVertical","ForcedMarkers","hideTooltipFromATWhenShown","hideSeriesLabelsFromATWhenShown","labelBySeries","getPointsCollection","focusedMapNavButtonIx","updateProxyOverlays","mapNavigation","navButtons","setMapNavButtonAttrs","labelFormatKey","resetZoomButton","createZoomProxyButton","drillUpButton","breadcrumbs","list","lastBreadcrumb","buttonText","getButtonText","buttonProp","getMapZoomNavigation","onMapKbdArrow","_keyCode","onMapKbdTab","onMapKbdClick","onMapNavInit","isY","stepDirection","diff","random","startPos","offsetLeft","offsetTop","endPos","isBackwards","isMoveOutOfRange","zoomBy","zoomIn","zoomOut","initialButton","simpleButtonNavigation","proxyProp","onClick","_handler","drillUp","isMS","isHighContrastModeActive","isEdge","userAgent","matchMedia","matches","getComputedStyle","testDiv","backgroundImage","bi","currentStyle","setHighContrastTheme","highContrastModeActive","theme","highContrastTheme","hasCustomColors","plotOpts","fillColor","colorIndex","seriesOptions","minColor","maxColor","stops","minorGridLineColor","tickColor","edgeColor","connectorColor","pie","boxplot","candlestick","errorbar","itemStyle","itemHoverStyle","itemHiddenStyle","drilldown","activeAxisLabelStyle","activeDataLabelStyle","navigation","buttonOptions","symbolStroke","buttonTheme","hover","select","inputBoxBorderColor","inputStyle","labelStyle","highContrastMode","defaultChartTitle","chartContainerLabel","svgContainerTitle","graphicContainerLabel","beforeRegionLabel","afterRegionLabel","heading","descriptionSinglePoint","descriptionMultiplePoints","descriptionNoPoints","playAsSoundButtonText","playAsSoundClickAnnouncement","legendLabelNoTitle","zoom","mapZoomIn","mapZoomOut","dropdownLabel","minInputLabel","maxInputLabel","clickButtonAnnouncement","viewAsDataTableButtonText","tableSummary","newDataAnnounce","newSeriesAnnounceSingle","newPointAnnounceSingle","newSeriesAnnounceMultiple","newPointAnnounceMultiple","seriesTypeDescriptions","arearange","areasplinerange","bubble","columnrange","funnel","pyramid","waterfall","emptyChart","mapTypeDescription","unknownMap","combinationChart","defaultSingle","defaultMultiple","splineSingle","splineMultiple","lineSingle","lineMultiple","columnSingle","columnMultiple","barSingle","barMultiple","pieSingle","pieMultiple","scatterSingle","scatterMultiple","boxplotSingle","boxplotMultiple","bubbleSingle","bubbleMultiple","xAxisDescriptionSingular","xAxisDescriptionPlural","yAxisDescriptionSingular","yAxisDescriptionPlural","timeRangeDays","timeRangeHours","timeRangeMinutes","timeRangeSeconds","rangeFromTo","rangeCategories","chartMenuLabel","menuButtonLabel","defaultCombination","line","lineCombination","spline","splineCombination","column","columnCombination","barCombination","pieCombination","scatter","scatterCombination","boxplotCombination","bubbleCombination","mapCombination","mapline","maplineCombination","mapbubble","mapbubbleCombination","nullPointValue","pointAnnotationsDescription","error","traverseSetOption","root","optionAsArray","opt","deprecateFromOptionsMap","rootOldAsArray","rootNewAsArray","mapToNewOptions","getChildProp","propAsArray","rootOld","rootNew","oldOptionKey","copyDeprecatedChartOptions","copyDeprecatedAxisOptions","opts","copyDeprecatedSeriesOptions","oldToNewSeriesOptions","exposeElementToA11y","pointDescriptionFormatter","skipKeyboardNavigation","oldOption","optionVal","pointDateFormat","pointDateFormatter","pointDescriptionThreshold","pointNavigationThreshold","pointValueDecimals","pointValuePrefix","pointValueSuffix","screenReaderSectionFormatter","seriesDescriptionFormatter","onTableAnchorClick","screenReaderRegionLabel","rangeSelectorButton","rangeSelectorMaxInput","rangeSelectorMinInput","svgContainerEnd","viewAsDataTable","ContainerComponent","InfoRegionsComponent","NavigatorComponent","ProxyProvider","SeriesComponent","ZoomComponent","whcm","defaultOptionsA11Y","defaultLangOptions","copyDeprecatedOptions","Accessibility","addEventListener","zombie","initComponents","infoRegions","chartMenu","customComponents","getComponentOrder","getChartTypes","kbdNavOrder","chartOnDestroy","chartOnRender","a11yDirty","updateA11yEnabled","chartOnUpdate","newOptions","chartUpdateA11yEnabled","pointOnUpdate","G","A11yChartUtilities","A11yHTMLUtilities","SeriesAccessibilityDescriber","Chart","SVGElement","RangeSelector"],"mappings":"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"}